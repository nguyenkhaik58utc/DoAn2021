@using Ext.Net
@using Ext.Net.MVC
@using iDAS.Base
@using iDAS.Web.ExtExtend
@model iDAS.Items.ProfileItem
@(
 Html.X().Window()
    .ID("winDetailProfile")
    .Title("Xem chi tiết thông tin hồ sơ")
    .Icon(Icon.Zoom)
       .Width(870)
        .BodyPadding(6)
        .Border(true)
        .Layout(LayoutType.Fit)
        .Modal(true)
        .Resizable(false)
        .AutoScroll(true)
        .Items(
      Html.X().FormPanel()
            .Layout(LayoutType.Form)
            .StyleSpec("border: none;")
            .Border(false)
            .FieldDefaults(f => f.LabelWidth = 110)
            .ID("frEditProfile")
            .Frame(true)
            .Items(
              Html.X().HiddenFor(m => m.ID).ID("hdID").ReadOnly(true),
                Html.X().Container().Layout(LayoutType.Column).Items(
                         Html.X().TextFieldFor(m => m.Code).ReadOnly(true)
                        .ColumnWidth(0.5)
                        .ID("Code").FieldLabel("Mã hồ sơ")
                        .TabIndex(1)
                        .MaxLength(50)
                        .AllowBlank(false)
                        .AllowOnlyWhitespace(false)                
                        .BlankText("Mã hồ sơ bắt buộc nhập!"),
                        Html.X().ComboBoxFor(m => m.SecurityID).ReadOnly(true)
                        .ID("cbSecurity")
                        .ColumnWidth(0.5)
                        .MarginSpec("0 0 0 5")
                        .FieldLabel("Mức độ bảo mật")
                        .TabIndex(2)
                            .EmptyText("Chọn mức độ mật của hồ sơ...")
                        .AllowBlank(false)
                        .BlankText("Mức độ mật bắt buộc chọn!")
                        .QueryMode(DataLoadMode.Local)
                        .ForceSelection(true)
                       .LabelWidth(110)
                        .TriggerAction(TriggerAction.All)
                        .DisplayField("Name")
                        .ValueField("ID")
                        .Tpl(
                        @<text>
                            <tpl for=".">
                                <div class="x-boundlist-item" style="display: inline-block; width: 100%;">
                                    <div style="width: 50px; height: 20px; float: left; background-color: {Color}; border: #cecece 1px solid;">&nbsp;</div><div style="width: auto; float: left">&nbsp;{Name}</div>
                                </div>
                            </tpl>
                        </text>)
                        .Store(
                            Html.X().Store()
                                .ID("stProfSecurity")
                                .AutoLoad(true).Model(Html.X().Model().IDProperty("ID")
                                .Fields(
                                        new ModelField("ID", ModelFieldType.Int) { Mapping = "ID" },
                                        new ModelField("Name", ModelFieldType.String) { Mapping = "Name" },
                                            new ModelField("Color", ModelFieldType.String) { Mapping = "Color" }
                                        )
                                        )
                                .Proxy(
                                    Html.X().AjaxProxy()
                                    .Url(Url.Action("GetDataCboSecurity", "SecurityLevel", new { area = "Profile" }))//ham load dl cho combobox
                                .Reader(Html.X().JsonReader().Root("data"))
                                )
                                )
                                .Listeners(l => l.Change.Handler = "getColor(App.cbSecurity, App.stProfSecurity);")
                     ),
                    Html.X().TextFieldFor(m => m.Name).ReadOnly(true)
                    .ID("txtName")
                    .FieldLabel("Tên hồ sơ")
                    .TabIndex(3)
                     .AllowOnlyWhitespace(false)
                    .MaxLength(200)
                    .AllowBlank(false)
                    .BlankText("Tên hồ sơ bắt buộc nhập!"),
                      Html.X().Container().Layout(LayoutType.Column).ColSpan(2).Items(
                    Html.X().ComboBoxFor(m => m.CategoryID).ReadOnly(true)
                            .ID("cbCategory")
                            .FieldLabel("Danh mục hồ sơ")
                            .TabIndex(4)
                            .ColumnWidth(0.7)
                            .AllowBlank(false).BlankText("Danh mục hồ sơ bắt buộc chọn!")
                            .EmptyText("Chọn danh mục hồ sơ...")
                            .QueryMode(DataLoadMode.Local)
                            .ForceSelection(true)
                            .TriggerAction(TriggerAction.All)
                            .DisplayField("Name")
                            .ValueField("ID")
                            .Store(
                                Html.X().Store().AutoLoad(true).Model(Html.X().Model().IDProperty("ID")
                                    .Fields(
                                            new ModelField("ID", ModelFieldType.Int) { Mapping = "ID" },
                                            new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                            )//end Fields
                                            )
                                    .Proxy(Html.X().AjaxProxy().Url(Url.Action("GetDataCate"))//ham load dl cho combobox
                                    .Reader(Html.X().JsonReader().Root("data"))
                                    )//end Store
                                )
                            .Triggers(
                                Html.X().FieldTrigger().Icon(TriggerIcon.SimpleEdit)

                                )
                                .Listeners(ls =>
                                {
                                    ls.BeforeSelect.Handler = "return false;";
                                    ls.TriggerClick.Fn = "ShowFrmDocCate";
                                }),
                Html.X().DateFieldFor(m => m.ReceivedAt).LabelWidth(90).MarginSpec("0 0 0 5").FieldLabel("Ngày sử dụng").ReadOnly(true).AllowBlank(false).ColumnWidth(0.3)),
                Html.X().CheckboxGroupFor(m => m.StorageFormID, new List<Checkbox.Config> {
                    new Checkbox.Config{BoxLabel = "Bản mềm", InputValue =iDAS.Items.StorageForm.SoftCopy.ToString() ,ReadOnly=true, Checked=true, TabIndex=5},
                    new Checkbox.Config{BoxLabel = "Bản cứng", InputValue =iDAS.Items.StorageForm.HardCopy.ToString(),ReadOnly=true, TabIndex=6}
                        }).FieldLabel("Loại hồ sơ")
                    .ID("rabgrStore")
                    .ColumnWidth(0.5)
                    .AllowBlank(false)
                    .BlankText("Loại hồ sơ bắt buộc chọn!"),
                   Html.X().FieldSet()
                        .Title("Thời gian lưu trữ")
                        .Layout(LayoutType.Form)
                        .PaddingSpec("-3 5 5 5")
                            .MarginSpec("-9 0 10 0")
                        .Items(
                            Html.X().Container().Layout(LayoutType.Column).Items(
                                     Html.X().NumberFieldFor(m => m.StoragePartTime).ReadOnly(true)
                                        .ID("txtStoreDepartment")
                                        .FieldLabel("Tại bộ phận")
                                        .EmptyText("Nhập thời gian lưu trữ Hồ sơ tại bộ phận...")
                                        .TabIndex(7)
                                        .LabelWidth(105)
                                        .ColumnWidth(0.5).AllowBlank(false).BlankText("Thời gian lưu trữ tại bộ phận bắt buộc nhập!")
                                        .MinValue(0).MinText("Dữ liệu nhập vào trường Thời gian lưu trữ Hồ sơ phải lớn hơn 0")
                                        .InvalidText("Dữ liệu nhập vào phải lớn hơn hoặc bằng không!").AllowDecimals(false)
                                        .MaxValue(System.Int32.MaxValue).MaxText("Dữ liệu nhập vào trường Thời gian lưu trữ Hồ sơ phải nhỏ hơn giá trị 2.147.483.647"),
                                Html.X().Label().Text("(tháng). Nếu thời gian lưu là vĩnh viễn thì nhập giá trị 0.").MarginSpec("2 0 0 10").ColumnWidth(0.5)
                            ),
                                Html.X().Container().Layout(LayoutType.Column).Items(
                                    Html.X().NumberFieldFor(m => m.StorageRoomTime).ReadOnly(true)
                                    .ID("txtStoreTime")
                                    .FieldLabel("Tại phòng lưu trữ")
                                    .EmptyText("Nhập thời gian lưu trữ Hồ sơ tại phòng lưu trữ...")
                                    .TabIndex(8)
                                    .ColumnWidth(0.5)
                                    .MinValue(0).MinText("Dữ liệu nhập vào trường Thời gian lưu trữ Hồ sơ phải lớn hơn 0")
                                    .MaxValue(System.Int32.MaxValue).MaxText("Dữ liệu nhập vào trường Thời gian lưu trữ Hồ sơ phải nhỏ hơn giá trị 2.147.483.647")
                                    .InvalidText("Dữ liệu nhập vào phải lớn hơn hoặc bằng không!") .AllowDecimals(false)
                                    .LabelWidth(105),
                                Html.X().Label().Text("(tháng). Nếu thời gian lưu là vĩnh viễn thì nhập giá trị 0.").MarginSpec("2 0 0 10").ColumnWidth(0.5)
                            )
                        ),
                Html.X().Container().Layout(LayoutType.Column).MarginSpec("-9 0 0 0").Items(
                Html.X().Container()
                .Layout(LayoutType.Form)                
                .ColumnWidth(0.6).MarginSpec("0 5 0 0").Items(
                    Html.X().TextAreaFor(m => m.StorageRoomPosition).ReadOnly(true)
                    .ID("txtStorageRoomPosition")
                    .FieldLabel("Vị trí lưu")
                    .Flex(1)
                    .Height(66)
                    .EmptyText("Nhập vị trí lưu trữ Hồ sơ...")
                    .TabIndex(10),
                    Html.X().FileUploadFieldFor(m => m.AttachmentFile).ReadOnly(true)),
                    Html.X().EmployeeFieldFor(m => m.EmployeeInfo).ReadOnly(true).AllowBlank(false).Title("Người lưu trữ").MarginSpec("-6 0 7 0").ID("fsEmployee").ColumnWidth(0.4)),
                    Html.X().TextAreaFor(m => m.Note).ReadOnly(true)
                        .ID("txtDescription")
                        .MarginSpec("-9 0 0 0")
                        .FieldLabel("Ghi chú")
                        .TabIndex(11).MinHeight(70).Flex(1)
                        .MaxLength(1000),
                             Html.X().Container().Layout(LayoutType.Column).Items(
                            Html.X().CheckboxFor(m => m.IsUse).BoxLabel("Sử dụng").ReadOnly(true).ColumnWidth(0.7).MarginSpec("0 5 0 115").HideLabel(true),
                                  Html.X().DateFieldFor(m => m.NotUseAt).FieldLabel("Ngày không sử dụng").ReadOnly(true).MarginSpec("0 0 0 0").ColumnWidth(0.3)


                            )
                   )
                )
        .Buttons(
            Html.X().ButtonExit()
        )
)
