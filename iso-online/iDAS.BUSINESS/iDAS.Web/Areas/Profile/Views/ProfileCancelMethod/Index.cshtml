@using Ext.Net
@using Ext.Net.MVC
@using iDAS.Web.ExtExtend
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    int add = (int)iDAS.Items.ProfileForm.Insert;
    int edit = (int)iDAS.Items.ProfileForm.Edit;
    int detail = (int)iDAS.Items.ProfileForm.Detail;
}
@(Html.X().Viewport()
    .Layout(LayoutType.Fit)
    .Items(
        Html.X().GridPanel()
            .ID("grDestructionMethod")
            .ColumnLines(true)
            .Border(false)
            .TopBar(
                    Html.X().Toolbar()
                        .Layout(LayoutType.HBox)
                        .Items(
                            Html.X().ButtonCreate()
                                .ID("btnInsert")
                                    .Handler("ShowFrm(" + add + ");"),
                            Html.X().ToolbarSeparator(),
                            Html.X().ButtonUpdate()
                                .ID("btnEdit")
                                .Disabled(true)
                                    .Handler("ShowFrm(" + edit + ");"),
                            Html.X().ToolbarSeparator(),
                            Html.X().ButtonDelete()
                                .ID("btnDelete")
                                .Disabled(true)
                                .Handler("deleteRecord();"),
                            Html.X().ToolbarSeparator(),
                            Html.X().ButtonView()
                                .ID("btnDetail")
                                .Disabled(true)
                                    .Handler("ShowFrm(" + detail + ");"),
                                            Html.X().ToolbarFill(),
                                 Html.X().ButtonTutorial()
                            )
                    )
                .Store(
                    Html.X().Store()
                        .ID("stDestructionMethod")
                        .Proxy(
                            Html.X().AjaxProxy()
                                .Url(Url.Action("GetData"))
                                .Reader(Html.X().JsonReader().Root("data"))
                            )
                        .RemoteSort(true)
                        .PageSize(20)
                        .Model(
                            Html.X().Model()
                                .Fields(
                                    Html.X().ModelField().Name("ID").Type(ModelFieldType.Int),
                                    Html.X().ModelField().Name("Name").Type(ModelFieldType.String),
                                    Html.X().ModelField().Name("Note").Type(ModelFieldType.String),
                                    Html.X().ModelField().Name("IsActive").Type(ModelFieldType.Boolean),
                                    Html.X().ModelField().Name("UpdateByName").Type(ModelFieldType.String),
                                    Html.X().ModelField().Name("CreateAt").Type(ModelFieldType.Date),
                                    Html.X().ModelField().Name("CreateByName").Type(ModelFieldType.String),
                                    Html.X().ModelField().Name("UpdateAt").Type(ModelFieldType.Date)
                                    )
                            )
                         )
                .ColumnModel(
                    Html.X().RowNumbererColumn().Text("STT").StyleSpec("font-weight: bold; text-align: center;").Width(30).Align(Alignment.Center),

                    Html.X().Column()
                        .DataIndex("Name")
                        .Text("Phương thức hủy")
                        .StyleSpec("font-weight: bold; text-align: center;")
                        .Flex(1),
                    Html.X().Column()
                        .Text("Mô tả")
                        .DataIndex("Note")
                        .StyleSpec("font-weight: bold; text-align: center;")
                        .Flex(2),
                   Html.X().CheckColumn()
                        .Text("Kích hoạt")
                        .DataIndex("IsActive")
                        .StopSelection(false)
                        .StyleSpec("font-weight: bold; text-align: center;")
                        .Width(70)
                        .Align(Alignment.Center),
                    Html.X().DateColumnExtend()
                        .Text("Thời gian sửa")
                         .Format("dd/MM/yyyy")
                        .DataIndex("UpdateAt")
                        .StyleSpec("font-weight: bold; text-align: center;")
                        .Width(100)
                        .Align(Alignment.Center),
                     Html.X().Column()
                        .Text("Người sửa")
                        .DataIndex("UpdateByName")
                        .StyleSpec("font-weight: bold; text-align: center;")
                        .Width(150)
            )
                  .SelectionModel(
                    Html.X().RowSelectionModel().Mode(SelectionMode.Single)
            .Listeners(ls => ls.SelectionChange.Handler = "checkStatus();")
                )
            .Plugins(Html.X().CellEditing())
            .Listeners(ls => ls.BeforeItemContextMenu.Fn = "itemcontextmenu")
            .View(Html.X().GridView().StripeRows(true))
            .BottomBar(Html.X().CustomPagingToolbar())
       )
)
<script type="text/javascript" src="@Url.Content("~/Areas/Profile/Content/js/ProfileJS.js")"></script>
<script type="text/javascript">
    var onComboBoxSelect = function (combo) {
        var store = combo.up("gridpanel").getStore();
        store.pageSize = parseInt(combo.getValue());
        store.load();
    };
    var itemcontextmenu = function (grid, record, item, index, e, eOpts) {
        e.stopEvent();
        App.cmMenu.showAt(e.getXY());
    };
    var ShowFrm = function (cmd) {
        if (cmd == 0) {
            Ext.net.DirectMethod.request({
                url: '@(Url.Action("ShowFrmAdd", "ProfileCancelMethod", new { Area = "Profile" }, null))'
            });
        } else {
            var record = App.grDestructionMethod.selModel.getSelection();
            if (record.length > 0) {
                var id = record[0].get('ID');
                if (cmd == 1) {
                    Ext.net.DirectMethod.request({
                        url: '@(Url.Action("ShowFrmUpdate", "ProfileCancelMethod", new { Area = "Profile" }, null))', params: { id: id }
                    });
                }
                else if (cmd == 6) {
                    var id = record[0].get('ID');
                    Ext.net.DirectMethod.request({
                        url: '@(Url.Action("ShowFrmDetail", "ProfileCancelMethod", new { Area = "Profile" }, null))', params: { id: id }
                    });
                }
            }
        }
    };
    var deleteRecord = function () {
        var records = App.grDestructionMethod.selModel.getSelection();
        var urlDelete = '@(Url.Action("Delete", "ProfileCancelMethod", new { Area = "Profile" }, null))';
        profileDeleteRecord(urlDelete, records);
    };
    var GetBooleanChar = function (value, p, record) {
        var sUse = "<span style='color:blue'>Đang sử dụng</span>";
        var sNot = "<span style='color:red'>Không sử dụng</span>";
        if (value == "1") {
            return sUse;
        } else {
            return sNot;
        }
    };
    var checkStatus = function () {
        var record = App.grDestructionMethod.selModel.getSelection();
        if (record.length > 0) {
            App.btnDetail.setDisabled(false);
            App.btnEdit.setDisabled(false);

            if (record[0].get('IsActive'))
                App.btnDelete.setDisabled(true);
            else
                App.btnDelete.setDisabled(false);

        } else {
            App.btnDetail.setDisabled(true);
            App.btnEdit.setDisabled(true);
            App.btnDelete.setDisabled(true);
        }
    };
</script>
