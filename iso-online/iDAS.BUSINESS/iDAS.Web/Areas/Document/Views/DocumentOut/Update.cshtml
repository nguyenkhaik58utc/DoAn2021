@using Ext.Net
@using Ext.Net.MVC
@using iDAS.Base
@using iDAS.Utilities
@using iDAS.Web.ExtExtend
@model iDAS.Items.DocumentItem
@(
 Html.X().ApprovalSendWindow().UrlSubmit(Url.Action("Update"))
    .ItemsExtend(
        Html.X().FormPanel()
            .Layout(LayoutType.Fit)
            .FieldDefaults(f => f.LabelWidth = 110)
            .Listeners(l => l.BeforeRender.Handler = "checkParentID(" + Model.ParentID + ");")
            .ID("frEditDocument")
            .Items(
                Html.X().HiddenFor(m => m.ID).ID("hdID"),
                 Html.X().TabPanel()
                    .Margin(1)
                    .Region(Region.Center)
                    .Border(true)
                    .Frame(true)
                    .Items(
                Html.X().Panel()
                    .Title("Thông tin tài liệu")
                    .StyleSpec("-webkit-border-radius:0")
                    .StyleSpec("border: none;")
                    .Border(false)
                    .Margin(1)
                    .BodyPadding(6)
                    .Icon(Icon.ApplicationViewDetail)
                    .Layout(LayoutType.VBox)
                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                    .Frame(true)
                    .Items(
                               Html.X().TextFieldFor(m => m.DocumentParent)
                                    .ID("DocParrent").FieldLabel("Tài liệu cũ")
                                    .TabIndex(1).ReadOnly(true),
                                Html.X().Container()
                                    .Layout(LayoutType.Column)
                                    .MarginSpec("0 0 5 0")
                                    .Items(
                                        Html.X().TextFieldFor(m => m.Code)
                                                    .ID("Code").FieldLabel("Mã tài liệu" + Html.Required())
                                                    .TabIndex(2)
                                                    .MaxLength(100)
                                                    .AllowBlank(false)
                                                    .BlankText("Mã tài liệu bắt buộc nhập!")
                                                    .AllowOnlyWhitespace(false)
                                                    .MaxLengthText("Mã tài liệu không được dài quá 100 ký tự")
                                                    .ColumnWidth(0.7),
                                            Html.X().TextFieldFor(m => m.Version)
                                                    .ID("txtVersion")
                                                    .FieldLabel("Phiên bản" + Html.Required())
                                                    .MarginSpec("0 0 0 5")
                                                    .TabIndex(3).LabelWidth(80)
                                                    .MaxLength(50)
                                                    .AllowBlank(false)
                                                    .BlankText("Phiên bản tài liệu bắt buộc nhập!")
                                                    .AllowOnlyWhitespace(false)
                                                    .MaxLengthText("Phiên bản tài liệu không được dài quá 50 ký tự")
                                                    .ColumnWidth(0.3)
                                                ),
                                    Html.X().TextFieldFor(m => m.Name)
                                        .ID("txtName")
                                        .FieldLabel("Tên tài liệu" + Html.Required())
                                        .TabIndex(4)
                                        .MaxLength(200)
                                        .AllowBlank(false)
                                        .AllowOnlyWhitespace(false)
                                        .MaxLengthText("Mã tài liệu không được dài quá 200 ký tự")
                                        .BlankText("Tên tài liệu bắt buộc nhập!"),
                               Html.X().Container().Layout(LayoutType.Column)
                                        .MarginSpec("0 0 5 0")
                                        .Items(
                                        Html.X().ComboBoxFor(m => m.TypeID)
                                            .ID("cbType")
                                            .ColumnWidth(0.5)
                                            .FieldLabel("Loại tài liệu" + Html.Required())
                                            .TabIndex(5)
                                                .ReadOnly(true)
                                            .EmptyText("Chọn loại tài liệu...")
                                            .AllowBlank(false)
                                            .BlankText("Loại tài liệu bắt buộc chọn!")
                                            .QueryMode(DataLoadMode.Local)
                                            .ForceSelection(true)
                                            .TriggerAction(TriggerAction.All)
                                            .DisplayField("Name")
                                            .ValueField("ID")
                                              .Store(
                                                Html.X().Store().AutoLoad(true).Model(Html.X().Model().IDProperty("ID")
                                                    .Fields(
                                                            new ModelField("ID", ModelFieldType.Int) { Mapping = "ID" },
                                                            new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                                            )//end Fields
                                                            )
                                                    .Proxy(Html.X().AjaxProxy().Url(Url.Action("GetDataCboType"))//ham load dl cho combobox
                                                    .Reader(Html.X().JsonReader().Root("data"))
                                                    )//end Store
                                                    .Listeners(ls =>
                                                            ls.Load.Handler = @"var combo = App.cbType;
                                                                    combo.setValue(records[1].get(combo.valueField));"
                                                    )
                                                    ),
                                 Html.X().ComboBoxFor(m => m.SecurityID)
                                    .ID("cbSecurity")
                                    .ColumnWidth(0.5).MarginSpec("0 0 0 5")
                                    .FieldLabel("Mức độ bảo mật" + Html.Required())
                                    .TabIndex(5)
                                    .EmptyText("Chọn mức độ mật của tài liệu...")
                                    .AllowBlank(false)
                                    .BlankText("Mức độ mật bắt buộc chọn!")
                                    .QueryMode(DataLoadMode.Local)
                                    .ForceSelection(true)
                                    .TriggerAction(TriggerAction.All)
                                    .DisplayField("Name")
                                    .ValueField("ID")
                                     .Tpl(
                                    @<text>
                                        <tpl for=".">
                                            <div class="x-boundlist-item"><div style="text-align: center; width: 100%; background-color: {Color}; border: #cecece 1px solid;">{Name}</div></div>
                                        </tpl>
                                    </text>)
                                        .Store(
                                            Html.X().Store()
                                                .ID("stDocSecurity")
                                                .AutoLoad(true).Model(Html.X().Model().IDProperty("ID")
                                                .Fields(
                                                        new ModelField("ID", ModelFieldType.Int) { Mapping = "ID" },
                                                        new ModelField("Name", ModelFieldType.String) { Mapping = "Name" },
                                                          new ModelField("Color", ModelFieldType.String) { Mapping = "Color" }
                                                        )//end Fields
                                                        )
                                                .Proxy(
                                                    Html.X().AjaxProxy()
                                                        .Url(Url.Action("GetDataCboSecurity"))//ham load dl cho combobox
                                                .Reader(Html.X().JsonReader().Root("data"))
                                                )//end Store

                                                           ).Listeners(l => l.Change.Handler = "getColor(App.cbSecurity, App.stDocSecurity);")
                                            ),
                                            Html.X().Container().Layout(LayoutType.Column).Items(
                                        Html.X().ComboBoxFor(m => m.CategoryID)
                                            .FieldLabel("Danh mục Tài liệu" + Html.Required())
                                            .HideBaseTrigger(true)
                                            .ID("cbCategory")
                                            .AllowBlank(false).BlankText("Danh mục tài liệu bắt buộc chọn!")
                                            .TabIndex(8)
                                            .QueryMode(DataLoadMode.Local)
                                            .ForceSelection(true)
                                            .DisplayField("Name")
                                            .ValueField("ID")
                                            .ColumnWidth(0.5)
                                            .Store(Html.X().Store()
                                            .AutoLoad(true)
                                            .Model(
                                                Html.X().Model()
                                                .IDProperty("ID")
                                                .Fields(

                                                new ModelField("ID", ModelFieldType.Int) { Mapping = "ID" },
                                                new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                                )
                                                )
                                                .Proxy(Html.X().AjaxProxy()
                                                .Url(Url.Action("GetDataCate", "Document", new { area = "Document" }))
                                                .Reader(Html.X().JsonReader().Root("data")
                                                )
                                                )
                                              )
                                            .Triggers(
                                            Html.X().FieldTrigger().Icon(TriggerIcon.SimpleEdit)

                                            )
                                            .Listeners(ls =>
                                            {
                                                ls.BeforeSelect.Handler = "return false;";
                                                ls.TriggerClick.Fn = "ShowFrmDocCate";
                                            }),
                                        Html.X().TextFieldFor(m => m.DepartmentOfCategory).FieldLabel("Thuộc phòng")
                                            .ReadOnly(true)
                                            .ID("txtCategoryDept")
                                            .ColumnWidth(0.5)
                                            .MarginSpec("0 0 0 5")
                                   ),
                                        Html.X().Container().Layout(LayoutType.Column)
                                            .Items(
                                                Html.X().CheckboxGroupFor(m => m.StorageFormID, new List<Checkbox.Config> {
                                                    new Checkbox.Config{BoxLabel = "Bản mềm", InputValue =iDAS.Items.StorageForm.SoftCopy.ToString() , TabIndex=8, Checked=true},
                                                    new Checkbox.Config{BoxLabel = "Bản cứng", InputValue =iDAS.Items.StorageForm.HardCopy.ToString(), TabIndex=9}
                                                        }).FieldLabel("Hình thức lưu trữ" + Html.Required())
                                                    .ID("rabgrStore")
                                                    .ColumnWidth(0.5)
                                                    .AllowBlank(false)
                                                    .BlankText("Hình thức lưu trữ bắt buộc chọn!")
                                                    .MarginSpec("5 0 0 0"),
                                                Html.X().DepartmentFieldFor(m => m.Department)
                                                    .Multiple(false)
                                                    .AllowBlank(false)
                                                    .FieldLabel("Phòng/ban lưu trữ" + Html.Required())
                                                    .ColumnWidth(0.5)
                                                    .MarginSpec("5 0 0 5")
                                                ),

                                 Html.X().Container()
                                        .Layout(LayoutType.Column)
                                            .MarginSpec("2 0 5 0")
                                        .Items(
                                            Html.X().NumberFieldFor("IssuedTime")
                                                .ID("IssuedTime")
                                                .FieldLabel("Lần ban hành")
                                                .TabIndex(11)
                                                .ReadOnly(true)
                                                .ColumnWidth(0.5)
                                                .MarginSpec("0 5 0 0"),
                                            Html.X().ComboBoxFor(m => m.FolderID).ID("cboDocumentFolder")
                                                .FieldLabel("Thư mục" + Html.Required())
                                                .EmptyText("Chọn thư mục")
                                                .BlankText("Bạn phải chọn thư mục")
                                                .AllowBlank(true).AllowOnlyWhitespace(false)
                                                .DisplayField("Name")
                                                .ValueField("ID")
                                                .Editable(false)
                                                .ColumnWidth(0.5)
                                                .MarginSpec("0 0 0 5")
                                                .Store(
                                                    Html.X().Store()
                                                        .ID("stDocumentFolderCbb")
                                                        .AutoLoad(true)
                                                        .Model(
                                                        Html.X().Model().IDProperty("ID")
                                                            .Fields(
                                                                new ModelField("ID"),
                                                                new ModelField("Name")
                                                            )
                                                    )
                                                    .Proxy(Html.X().AjaxProxy()
                                                             .Url(Url.Action("LoadData", "DocumentFolder", new { area = "Document" }))
                                                        .Reader(Html.X().JsonReader().Root("data"))
                                                    )
                                                    .Parameters(ps =>
                                                    {
                                                        ps.Add(new StoreParameter("folderOut", "true", ParameterMode.Value));
                                                    })
                                                )
                                        ),
                            Html.X().TextAreaFor(m => m.Content)
                                        .ID("txtDescription")
                                        .FieldLabel("Nội dung chính")
                                        .TabIndex(14).Height(100)
                                        .MaxLength(1000),
                            Html.X().FileUploadFieldFor(m => m.AttachmentFile),
                            Html.X().TextAreaFor(m => m.Note).FieldLabel("Ghi chú").Flex(1)
                            )
                 )
            )
        )
        .ID("winEditDocument")
            .Title("Sửa thông tin tài liệu")
                     .Header(true)
                     .Icon(Icon.Pencil)
)
<script type="text/javascript">
    function onSelectEmployee(records) {
        if (records.length == 1) {
            App.nameApproval.setValue(records[0].get('Name'));
            App.hdfEmployeeApproveId.setValue(records[0].get('ID'));
            App.avatarApproval.setImageUrl(records[0].get('Avatar'));
            var dept = role = 'N/A';
            if (records[0].get('DepartmentName') != null)
                dept = records[0].get('DepartmentName');
            if (records[0].get('Role') != null)
                role = records[0].get('Role');
            var displayApproval = 'Phòng ban: ' + dept + '</br> Chức danh: ' + role;
            App.displayApproval.setValue(displayApproval);
        }
        else {
            MessageBox();
        };

    };
    var checkParentID = function (id) {
        if (id > 0) {
            App.DocParrent.show(true);
        } else
            App.DocParrent.hide(true);
    };
</script>