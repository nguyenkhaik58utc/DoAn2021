@using Ext.Net.MVC
@using Ext.Net
@using iDAS.Utilities
@using iDAS.Web.ExtExtend
@model iDAS.Items.ServiceCommandItem
@( Html.X().Window()
    .Title("Sửa lệnh cung cấp dịch vụ")
    .Icon(Icon.Pencil)
    .ID("winEditCommand")
    .Width(800)
    .Maximizable(true)
            .Height(460)
    .Layout(LayoutType.Fit)
    .Constrain(true)
    .Modal(true)
    .BodyPadding(0)
        .Border(false)
    .Items(
      Html.X().TabPanel()
            .ActiveTabIndex(0)
            .Border(true)
            .Items(Html.X().Panel()
                .BodyPadding(6)
                .Icon(Icon.ApplicationViewDetail)
                     .Layout(LayoutType.Fit)              
                .StyleSpec("border: none;")
                .Title("Thông tin chi tiết")
                .Frame(true)
                .Items(
    Html.X().FormPanel()
            .ID("frmCommandEdit")
                         .Layout(LayoutType.VBox)
                            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                    .Frame(true)
                    .StyleSpec("border: none;")
                    .FieldDefaults(d => d.LabelAlign = LabelAlign.Left)
            .Items(
            Html.X().HiddenFor(m=>m.ID),
                                    Html.X().TextFieldFor(m => m.Name)
                                    .FieldLabel("Tên lệnh" + Html.Required())
                                        .TabIndex(2).ID("txtNameCommand")
                                                   .AllowOnlyWhitespace(false)
                                    .AllowBlank(false)
                                        .BlankText("Tên lệnh cung cấp dịch vụ không được để trống!"),
                                          Html.X().Container()
                                                .Layout(LayoutType.Column)
                                                .ColSpan(2)
                                                .MarginSpec("0 0 5 0")
                                                .Items (

                                                    Html.X().DateTimeFieldFor(m => m.StartTime).AllowBlank(false)
                                                             .FieldLabel("Bắt đầu" + Html.Required())
                                                             .ColumnWidth(0.5).MarginSpec("0 5 0 0"),                                           
                                                             Html.X().DateTimeFieldFor(m => m.EndTime)
                                                                         .FieldLabel("Kết thúc" + Html.Required()).AllowBlank(false)
                                                                      .ColumnWidth(0.5)),
                                                Html.X().TextAreaFor(m => m.Note)
                                                        .TabIndex(3)
                                                                         .AllowBlank(false)
                                                                         .AllowOnlyWhitespace(false)
                                                        .FieldLabel("Yêu cầu" + Html.Required())
                                                        .BlankText("Yêu cầu không được bỏ trống!")
                                                            .Flex(1),
                                                      Html.X().Container().Layout(LayoutType.Column)
                                                                    .ColSpan(2)
                                                                    .Items(
                                                            Html.X().Container()
                                                                    .ColumnWidth(0.5)
                                                                    .MarginSpec("0 5 0 0")
                                                                    .Items(
                                                            Html.X().EmployeeFieldFor(m => m.Perform)
                                                                    .Title("Người kiểm soát và thực hiện" + Html.Required())
                                                                    .ID("txtPerform")
                                                                    ),
                                                            Html.X().Container()
                                                                    .ColumnWidth(0.5)
                                                                    .Items(
                                                                Html.X().EmployeeFieldFor(m => m.Approval)
                                                                    .Title("Người phê duyệt")
                                                                        .ID("txtApproval")
                                                                )
                                                          )
                                                          )
                                                          ),
                                                           Html.X().Panel()
                                .Icon(Icon.Page)
                            .Border(false)
                                  .BodyPadding(0)
                                .Padding(0)
                                .Margin(0)
                            .StyleSpec("border:none")
                            .Frame(true)
                            .AutoScroll(true)
                            .Title("Theo hợp đồng")
                            .Layout(LayoutType.Fit)
                            .Items(

                                 Html.X().GridPanel()
                                .ID("grMnCommandContractEdit")
                                .Border(false)
                                     .TopBar(
                            Html.X().Toolbar()
                            .Layout(LayoutType.HBox)
                            .Items(
                                Html.X().Button().Text("Xem chi tiết").ToolTip("Xem chi tiết").ID("btnDetailContract")
                                           .Icon(Icon.Zoom).Handler("ViewDetailContractEdit();").Disabled(true)
                                 )
                              )
                            .Store(Html.X().Store()
                                        .ID("stMnCommandContractEdit")
                                    .Proxy(Html.X().AjaxProxy()
                                                 .Url(Url.Action("GetDataContractEdit", "Command"))
                                    .Reader(Html.X().JsonReader().Root("data"))
                                    )
                                        .Parameters(ps =>
                                        {
                                            ps.Add(new StoreParameter("commandId", Model.ID.ToString(), ParameterMode.Value));

                                        })
                                    .RemoteSort(true)
                                    .AutoLoad(true)
                                    .RemotePaging(true)
                                    .PageSize(20)
                                    .Model(
                                    Html.X().Model()
                                            .Fields(

                                                Html.X().ModelField().Name("ID").Type(ModelFieldType.Int),
                                                    Html.X().ModelField().Name("CustomerID").Type(ModelFieldType.Int),
                                                    Html.X().ModelField().Name("Code").Type(ModelFieldType.String),
                                                        Html.X().ModelField().Name("Name").Type(ModelFieldType.String),
                                                Html.X().ModelField().Name("CustomerName").Type(ModelFieldType.String),
                                                Html.X().ModelField().Name("IsSelected").Type(ModelFieldType.Boolean)

                                            )
                                          )
                                      )
                                .ColumnModel(
                                    Html.X().RowNumbererColumn()
                                            .Text("STT")
                                            .StyleSpec("font-weight: bold; text-align: center;")
                                            .Align(Alignment.Center)
                                            .Width(33),
                                    Html.X().Column()
                                            .Text("ID")
                                            .DataIndex("ID")
                                            .Hidden(true),
                                             Html.X().Column()
                                            .Text("Mã")
                                            .StyleSpec("font-weight: bold;text-align: center")
                                                .DataIndex("Code")
                                           .Width(69),
                                    Html.X().Column()
                                            .Text("Tên hợp đồng")
                                            .StyleSpec("font-weight: bold;text-align: center")
                                                .DataIndex("Name")
                                           .Flex(1)

                                            .Wrap(true),
                                            Html.X().Column()
                                            .Text("Khách hàng")
                                            .StyleSpec("font-weight: bold;text-align: center")
                                            .DataIndex("CustomerName")
                                            .Width(270)
                                                 .Wrap(true),
                                                      Html.X().CheckColumn().DataIndex("IsSelected")
                                                       .Text("Chọn").Align(Alignment.Center).Editable(true)
                                                       .Width(60)

                            ).SelectionModel(
                                Html.X().RowSelectionModel()
                                            .Mode(SelectionMode.Single)
                                        .Listeners(l =>
                                        {
                                            l.Select.Handler = "App.btnDetailContract.setDisabled(false);";
                                        })
                                        )
                                          .View(
                                        Html.X().GridView().MarkDirty(false)
                                        )
                                        .BottomBar
                                        (
                                         Html.X().CustomPagingToolbar())
                                          )
                                          )  
                                       )
                                            
                                .Buttons(
                                           Html.X().ButtonSendWindow()
                                                        .ID("btnSendApprove")
                                                             .DirectEvents(de =>
                                                            {
                                                                de.Click.ExtraParams.Add(new { val = false });
                                                                de.Click.Before = @"if (!App.frmCommandEdit.getForm().isValid()) { return false; } ";
                                                                de.Click.ExtraParams.Add(new { strContractID = new JRawValue("getContractIDEdit()") });
                                                                de.Click.Action = "Update";
                                                                de.Click.ExtraParams.Add(new { IsEdit = false });
                                                                de.Click.ExtraParams.Add(new { IsApproval = false });
                                                                de.Click.FormID = "frmCommandEdit";
                                                                de.Click.EventMask.ShowMask = true;
                                                                de.Click.EventMask.Msg = "Đang xử lý Dữ liệu...";

                                                            }),        
                                    Html.X().ButtonSave()
                                            .ID("btnSave")
                                            .DirectEvents(de =>
                                                    {
                                                        de.Click.Before = @"if (!App.frmCommandEdit.getForm().isValid()) { return false; } ";
                                                        de.Click.ExtraParams.Add(new { strContractID = new JRawValue("getContractIDEdit()") });
                                                        de.Click.Action = "Update";
                                                        de.Click.FormID = "frmCommandEdit";
                                                        de.Click.Success = "this.up('window').close();";
                                                    }),
                                    Html.X().ButtonExit()
                                )

                    )
<script type="text/javascript">
    var ViewDetailContractEdit = function () {
        var records = App.grMnCommandContractEdit.selModel.getSelection();
        if (records.length > 0) {
            Ext.net.DirectMethod.request({
                url: '@(Url.Action("DetailForm", "CustomerManagementContract", new { Area = "Customer" }, null))',
                params: {
                    ID: records[0].get('ID')
                }
            });
        }
        else {
            MessageBox();
        };
    };
    var getContractIDEdit = function () {
        var prKeys = '';
        var records = App.stMnCommandContractEdit.getCount();
        if (records > 0) {
            var arrPrKey = new Array();
            for (var i = 0; i < records; i++) {
                var rec = App.grMnCommandContractEdit.getStore().getAt(i);
                if (rec.get('IsSelected')) {
                    arrPrKey[i] = rec.get('ID');
                }
            }
            prKeys = arrPrKey.filter(String).join(",");
        }
        return prKeys;
    };
    function onSelectEmployee(records) {
        if (records.length == 1) {
            App.nameApproval.setValue(records[0].get('Name'));
            App.hdfEmployeeApproveId.setValue(records[0].get('ID'));
            App.avatarApproval.setImageUrl(records[0].get('Avatar'));
            var RoleName = records[0].get('Role');
            if (RoleName == null) {
                RoleName = "N/A";
            };
            var DepartmentName = records[0].get('DepartmentName');
            if (DepartmentName == null) {
                DepartmentName = "N/A";
            };
            App.displayApproval.setValue("Đơn vị: " + DepartmentName + "</br> Chức danh: " + RoleName);
        }
        else {
            MessageBox();
        };
    };
</script>