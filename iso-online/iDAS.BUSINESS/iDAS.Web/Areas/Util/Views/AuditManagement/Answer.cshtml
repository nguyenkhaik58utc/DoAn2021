@using Ext.Net.MVC
@using Ext.Net
@using iDAS.Utilities
@using iDAS.Web.ExtExtend
@model iDAS.Items.HumanAuditTickItem
@(Html.X().Window()
          .ID("winNewAnswer")
          .Title("Quản lý đánh giá nhân sự")
          .Icon(Icon.UserKey).Height(200)
          .Maximized(true)
          .BodyPadding(0)
          .Layout(LayoutType.Fit)
          .Constrain(true).AutoScroll(true)
          .Items(
               Html.X().HiddenFor(m=>m.ID).ID("hdfAuditID"),
               Html.X().GridPanel()
                        .Border(false)
                        .ColumnLines(true)
                        .Store(
                                Html.X().Store()
                                        .ID("stAuditAnswer")
                                        .GroupField("Criteria")
                                        .Proxy(Html.X().AjaxProxy().Url(Url.Action("GetAnswer")).Reader(Html.X().JsonReader().Root("data")))
                                        .Parameters(ps =>
                                            {
                                                ps.Add(new StoreParameter("id", "App.hdfAuditID.value", ParameterMode.Raw));
                                            })
                                        .Model(
                                                Html.X().Model()
                                                        .Fields(
                                                                Html.X().ModelField().Name("CriteriaID").Type(ModelFieldType.Int),
                                                                Html.X().ModelField().Name("Criteria").Type(ModelFieldType.String),
                                                                Html.X().ModelField().Name("CriteriaPoint").Type(ModelFieldType.String),
                                                                Html.X().ModelField().Name("CriteriaPointID").Type(ModelFieldType.Int),
                                                                Html.X().ModelField().Name("IsEmployeeSelect").Type(ModelFieldType.Boolean),
                                                                Html.X().ModelField().Name("IsManagementSelect").Type(ModelFieldType.Boolean),
                                                                Html.X().ModelField().Name("IsLeaderSelect").Type(ModelFieldType.Boolean)
                                                            )
                                              )
                            )
                        .ColumnModel(
                                        Html.X().Column().Text("Tiêu chí").DataIndex("CriteriaPoint").Flex(1),
                                        Html.X().CheckColumn().Text("Kết quả tự đánh giá").DataIndex("IsEmployeeSelect").Width(150),
                                        Html.X().CheckColumn().Text("Quản lý đánh giá").DataIndex("IsManagementSelect")
                                                    .Width(120).Editable(true)
                                    )
                        .Features(
                                    Html.X().GroupingSummary()
                                                .GroupHeaderTplString("{name}")
                                                .HideGroupedHeader(true)
                                                .EnableGroupingMenu(false)
                                                .ShowSummaryRow(false)
                        )
                        .Plugins(
                                    Html.X().CellEditing().Listeners(ls => ls.Edit.Fn = "edit")
                                )
                        .SelectionModel(
                            Html.X().RowSelectionModel()
                                .Mode(SelectionMode.Single)
                                 .Listeners(l =>
                                    {
                                        l.Select.Handler = "checkStatus()";
                                    })
                            )
          )
        .Buttons(
                        Html.X().ButtonSendWindow()
                                .DirectEvents(de =>
                                {
                                    de.Click.ExtraParams.Add(new { ID = Model.ID });
                                    de.Click.Url = Url.Action("SendLeader");
                                    de.Click.Success = "this.up('window').close();App.stManagmentAudit.reload();";
                                }),
                        Html.X().ButtonExit()
            )
)
<script>
    var edit = function (editor, e) {
        if (!(e.value === e.originalValue || (Ext.isDate(e.value) && Ext.Date.isEqual(e.value, e.originalValue)))) {
            Ext.net.DirectMethod.request({
                url: '@(Url.Action("HandleChanges"))',
                params: {
                    id: App.hdfAuditID.value,
                    criteriaId: e.record.data.CriteriaID,
                    criteriaPointID: e.record.data.CriteriaPointID
                }
            });
        };
    };
</script>
