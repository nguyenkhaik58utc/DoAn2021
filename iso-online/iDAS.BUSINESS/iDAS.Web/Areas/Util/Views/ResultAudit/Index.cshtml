@using Ext.Net.MVC
@using Ext.Net
@using iDAS.Web.ExtExtend
@model System.Collections.IEnumerable
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@(Html.X().Viewport().Layout(LayoutType.Border).Padding(1)
    .Items(
    Html.X().Hidden().ID("hdfPhaseAuditID").Value(0),
    Html.X().Hidden().ID("hdfQuestionCateID").Value(0),
          Html.X().GridPanel()
                 .ID("grMnPhaseAudit")
                 .Region(Region.West)
                 .MarginSpec("0 5 0 0")
                 .Width(365)
                 .Border(true)
                 .TopBar(
                     Html.X().Toolbar().Items(
                     Html.X().ButtonView()
                             .ID("btnDetailPhaseAudit")
                             .Handler("showFormDetail();")
                        )
                     )
                     .Store(Html.X().Store()
                     .ID("stMnPhaseAudit")
                     .Proxy(Html.X().AjaxProxy()
                     .Url(Url.Action("GetData"))
                     .Reader(Html.X().JsonReader().Root("data"))
                     )
                     .RemoteSort(true)
                     .RemotePaging(true)
                     .PageSize(20)
                     .Model(
                     Html.X().Model().IDProperty("ID")
                             .Fields(
                                 Html.X().ModelField().Name("ID").Type(ModelFieldType.Int),
                                 Html.X().ModelField().Name("Name").Type(ModelFieldType.String),
                                 Html.X().ModelField().Name("StartDate").Type(ModelFieldType.Date),
                                 Html.X().ModelField().Name("EndDate").Type(ModelFieldType.Date),
                                 Html.X().ModelField().Name("IsNew").Type(ModelFieldType.Boolean),
                                 Html.X().ModelField().Name("IsEdit").Type(ModelFieldType.Boolean),
                                 Html.X().ModelField().Name("IsApproval").Type(ModelFieldType.Boolean),
                                 Html.X().ModelField().Name("IsAccept").Type(ModelFieldType.Boolean),
                                 Html.X().ModelField().Name("ApporvalBy").Type(ModelFieldType.Int),
                                 Html.X().ModelField().Name("Contents").Type(ModelFieldType.String),
                                 Html.X().ModelField().Name("Status").Type(ModelFieldType.String),
                                     Html.X().ModelField().Name("HumanCategoryQuestionID").Type(ModelFieldType.Int)
                             )
                           )
                       )
                 .ColumnModel(
                     Html.X().RowNumbererColumn()
                             .Text("STT")
                             .StyleSpec("font-weight: bold; text-align: center;")
                             .Align(Alignment.Center)
                             .Width(33),
                     Html.X().Column()
                             .Text("Đợt đánh giá")
                             .StyleSpec("font-weight: bold;text-align: center")
                             .DataIndex("Name")
                             .Flex(1)
                             .Wrap(true)
             )
             .Plugins(
             Html.X().FilterHeader()
                     .Remote(true)
             )
             .View(Html.X().GridView())
             .SelectionModel(
             Html.X().RowSelectionModel()
                     .Mode(SelectionMode.Multi)
                     .Listeners(l =>
                         {
                             l.Select.Handler = "App.btnDetailPhaseAudit.setDisabled(false); App.hdfQuestionCateID.setValue(App.grMnPhaseAudit.selModel.getSelection()[0].get('HumanCategoryQuestionID'));App.hdfPhaseAuditID.setValue(App.grMnPhaseAudit.selModel.getSelection()[0].get('ID')); App.grObjectResult.getStore().reload();";
                         })
                     )
                     .Plugins(Html.X().CellEditing())
                     .BottomBar(Html.X().CustomPagingToolbar()),
             Html.X().GridPanel()
             .Region(Region.Center)
             .ID("grObjectResult")
             .Border(true)
             .RowLines(true)
             .ColumnLines(true)
             .ForceFit(true)
             .TopBar(
             Html.X().Toolbar().Items(
             Html.X().Button().Text("Chi tiết").Icon(Icon.Zoom).Handler("ShowDetail();"),
             Html.X().ToolbarFill(),
             Html.X().ButtonTutorial()
              )
             )
             .Store(
             Html.X().Store()
                         .ID("stMnObjectResult")
                     .Proxy(Html.X().AjaxProxy()
                     .Url(Url.Action("GetDataEmployeeAudit", "ResultAudit"))
                     .Reader(Html.X().JsonReader().Root("data"))
                     )
                     .Parameters(ps => ps.Add(new StoreParameter("phaseAuditId", "App.hdfPhaseAuditID.getValue()", ParameterMode.Raw)))
                     .RemoteSort(true)
                     .AutoLoad(true)
                     .RemotePaging(true)
                     .PageSize(20)
                     .Model(
                         Html.X().Model()
                                 .Fields(
                                     Html.X().ModelField().Name("ID").Type(ModelFieldType.Int),
                                     Html.X().ModelField().Name("AuditID").Type(ModelFieldType.Int),
                                     Html.X().ModelField().Name("EmployeeName").Type(ModelFieldType.String),
                                     Html.X().ModelField().Name("FileID").Type(ModelFieldType.Auto),
                                     Html.X().ModelField().Name("FileName").Type(ModelFieldType.String),
                                     Html.X().ModelField().Name("NumberUnCorrect").Type(ModelFieldType.Int),
                                     Html.X().ModelField().Name("HumanEmployeeID").Type(ModelFieldType.Int),
                                     Html.X().ModelField().Name("NumberCorrect").Type(ModelFieldType.Int),
                                     Html.X().ModelField().Name("Role").Type(ModelFieldType.String)
                                    )
                                 )
                             )
              .ColumnModel(
                 Html.X().RowNumbererColumn()
                         .Text("STT")
                         .StyleSpec("font-weight: bold; text-align: center;")
                         .Align(Alignment.Center)
                         .Width(33),
                 Html.X().Column()
                         .Text("ID")
                         .DataIndex("ID")
                         .Hidden(true),
                 Html.X().TemplateColumn()
                         .DataIndex("FileID")
                         .Width(31).Tpl(
                 Html.X().XTemplate()
                         .Html(@<text>
                             <img id="{FileID}" src="@Url.Action("LoadImage", "File", new { area = "Generic" })?fileId={FileID}&fileName={FileName}"
                                  style='width:30px;height:40px;margin: -3px -6px -5.5px -6px;' />
                         </text>)
                         ),
                 Html.X().Column()
                         .Text("Họ tên")
                         .StyleSpec("font-weight: bold;text-align: center")
                         .DataIndex("EmployeeName")
                         .Flex(1)
                         .Wrap(true),
                    Html.X().Column()
                         .Text("Chức vụ")
                         .StyleSpec("font-weight: bold;text-align: center")
                         .DataIndex("Role")
                         .Width(160)
                         .Wrap(true),
                 Html.X().Column()
                         .Text("Số câu trả lời đúng")
                         .StyleSpec("font-weight: bold;text-align: center")
                         .DataIndex("NumberCorrect")
                         .Width(120)
                         .Align(Alignment.Right)
                         .Wrap(true),
                 Html.X().Column()
                         .Text("Số câu trả lời sai")
                         .StyleSpec("font-weight: bold;text-align: center")
                         .DataIndex("NumberUnCorrect")
                         .Width(130)
                         .Align(Alignment.Right)
                         .Wrap(true)
                         )
                 .SelectionModel(
                 Html.X().RowSelectionModel()
                         .Mode(SelectionMode.Multi)
                         .Listeners(l =>
                         {
                             l.Select.Handler = "";
                         })
                         )
                         .View(
                         Html.X().GridView().MarkDirty(false)
                         )
                         .Plugins(Html.X().CellEditing())
                         .BottomBar
                         (
                                     Html.X().CustomPagingToolbar()
                         )
)
)

<script type="text/javascript">
   var showFormDetail = function () {
        var records = App.grMnPhaseAudit.selModel.getSelection();
        if (records.length == 0) {
            Ext.MessageBox.show({
                title: 'Cảnh báo', msg: 'Chưa có bản ghi nào được chọn!',
                buttons: { yes: 'Đồng ý' },
                iconCls: '#Exclamation',
                fn: function (btn) {
                    App.btnEdit.setDisabled(true);
                    App.btnDelete.setDisabled(true);
                    App.btnDetail.setDisabled(true);
                    return false;
                }
            });
        }
        else {
            var id = records[0].get('ID');
            Ext.net.DirectMethod.request({
                url: '@(Url.Action("ShowDetail", "PhaseAudit", new { Area = "Human" }, null))',
                params: { id: id }
            });
        }
    };
    var ShowDetail = function () {
        var records = App.grObjectResult.selModel.getSelection();
        if (records.length > 0) {
            var url = '@(Url.Action("ShowDetailAnswer", "ResultAudit", new { Area = "Human" }, null))';
            var params = {
                employeeId: records[0].get('HumanEmployeeID'),
                phaseAuditID: App.grMnPhaseAudit.selModel.getSelection()[0].get('ID')
            };
            onDirectMethod(url, params);
        }
        else {
            MessageBox();
        };
    };
</script>