@using Ext.Net.MVC
@using Ext.Net
@using iDAS.Utilities
@using iDAS.Web.ExtExtend
@model iDAS.Items.ProductionCriteriaItem
@(Html.X().Window()
          .ID("winNewCriteria")
          .Title("Thêm mới thông tin tiêu chí đánh giá")
          .Icon(Icon.Add)    
          .Width(500)
          .BodyPadding(6)
          .Constrain(true)
          .Modal(true)
          .Layout(LayoutType.Fit)
          .Items(
        Html.X().FormPanel()
                .ID("frCriteria")
                .Layout(LayoutType.Form)
                .Frame(true)
                .StyleSpec("border: none;")
                .FieldDefaults(d => d.LabelAlign = LabelAlign.Left)
        .Items(     
                    Html.X().HiddenFor(m=>m.CategoryID),
                    Html.X().TextFieldFor(m=>m.CategoryName).FieldLabel("Bộ tiêu chí").ReadOnly(true),
                    Html.X().TextFieldFor(m=>m.Name)
                        .FieldLabel("Tên tiêu chí"+Html.Required())
                        .AllowBlank(false)
                        .BlankText("Tên tiêu chí không được trống!")
                        .AllowOnlyWhitespace(false),
                    Html.X().ComboBoxFor(m => m.EquipmentMeasureCategoryID).FieldLabel("Thiết bị đo")
                                    .Store(
                                            Html.X().Store().ID("StoreEquipmentMeasureCategory")
                                                            .AutoLoad(true)
                                                            .Proxy(Html.X().AjaxProxy()
                                                                        .Url(Url.Action("LoadAll", "EquipmentMeasureCategory", new { area = "Equipment" }))
                                                                        .ActionMethods(am => am.Read = HttpMethod.POST)
                                                                        .Reader(Html.X().JsonReader().Root("data")))
                                                            .Model(Html.X().Model()
                                                                        .IDProperty("ID")
                                                                        .Fields(new ModelField("ID", ModelFieldType.Int),
                                                                                new ModelField("Name", ModelFieldType.String)))
                                    )
                                    .DisplayField("Name")
                                    .ValueField("ID"),
                    Html.X().TextFieldFor(m => m.Offten).FieldLabel("Tần suất"),     
                    Html.X().NumberFieldFor(m => m.Factory).ID("txtFactory").MinValue(0).FieldLabel("Hệ số"),
                    Html.X().NumberFieldFor(m => m.MinPoint)
                        .ID("txtMinPoint")
                        .MinValue(0)
                        .FieldLabel("Điểm tối thiểu"),
                    Html.X().NumberFieldFor(m => m.MaxPoint)
                        .MinValue(0).ID("txtMaxPoint")
                        .FieldLabel("Điểm tối đa"),                 
            Html.X().CheckboxFor(m => m.IsUse)
            .BoxLabel("Sử dụng")
            .HideLabel(true)
            .MarginSpec("0 0 0 105")  
             )
            )
            .Buttons(
            Html.X().ButtonSave()
            .ID("btnSave")
            .Text("Lưu lại")
            .Icon(Icon.DiskMultiple)
            .TabIndex(17)
            .DirectEvents(de =>
            {             
                de.Click.ExtraParams.Add(new { val = false });
                de.Click.Before = @"if (!App.frCriteria.getForm().isValid()) { return false; } ";
                de.Click.Action = "Insert";
                de.Click.FormID = "frCriteria";
                de.Click.Success = "this.up('window').close();";        
            }),
            Html.X().ButtonExit()
            )
)
