@using Ext.Net.MVC
@using Ext.Net
@using iDAS.Utilities
@using iDAS.Web.ExtExtend
@model iDAS.Items.ProductionCriteriaItem
@(Html.X().Window()
                .ID("winEditCriteria")
                .Title("Sửa thông tin tiêu chí đánh giá")
                .Icon(Icon.Pencil)        
                .Width(500)
                .BodyPadding(6)
                .Constrain(true)
                .Modal(true)
                .Layout(LayoutType.Fit)
                .Items(
                Html.X().FormPanel()
                .ID("frCriteria")
                .Layout(LayoutType.Form)
                .Frame(true)
                .StyleSpec("border: none;")
                .FieldDefaults(d => d.LabelAlign = LabelAlign.Left)
                .Items(
                        Html.X().HiddenFor(m => m.ID),
                        Html.X().HiddenFor(m => m.CategoryID),
                        Html.X().HiddenFor(m => m.QualityCriteriaID),
                        Html.X().TextFieldFor(m => m.CategoryName).FieldLabel("Bộ tiêu chí").ReadOnly(true),
                        Html.X().TextFieldFor(m => m.Name).FieldLabel("Tên tiêu chí" + Html.Required())
                                        .AllowBlank(false).BlankText("Tên quy mô không được trống!").AllowOnlyWhitespace(false),  
                        Html.X().ComboBoxFor(m=>m.EquipmentMeasureCategoryID).FieldLabel("Thiết bị đo")
                                        .Store(
                                               Html.X().Store().ID("StoreEquipmentMeasureCategory")
                                                                .AutoLoad(true)
                                                                .Proxy(Html.X().AjaxProxy()
                                                                            .Url(Url.Action("LoadAll", "EquipmentMeasureCategory", new { area = "Equipment" }))
                                                                            .ActionMethods(am => am.Read = HttpMethod.POST)
                                                                            .Reader(Html.X().JsonReader().Root("data")))
                                                                .Model(Html.X().Model()
                                                                            .IDProperty("ID")
                                                                            .Fields(new ModelField("ID", ModelFieldType.Int),
                                                                                    new ModelField("Name", ModelFieldType.String))) 
                                        )
                                        .DisplayField("Name")
                                        .ValueField("ID"),
                        Html.X().TextFieldFor(m=>m.Offten).FieldLabel("Tần suất"),                
                        Html.X().NumberFieldFor(m => m.Factory).MinValue(0).FieldLabel("Hệ số").ID("txtFactory").BlankText("Hệ số không được trống!").AllowOnlyWhitespace(false),
                        Html.X().NumberFieldFor(m => m.MinPoint).MinValue(0).FieldLabel("Điểm tối thiểu").ID("txtMinPoint").BlankText("Điểm tối thiểu không được trống!").AllowOnlyWhitespace(false),
                        Html.X().NumberFieldFor(m => m.MaxPoint).MinValue(0).FieldLabel("Điểm tối đa").ID("txtMaxPoint").BlankText("Điểm tối đa không được trống!").AllowOnlyWhitespace(false),
                        Html.X().CheckboxFor(m => m.IsUse).BoxLabel("Sử dụng").HideLabel(true).MarginSpec("0 0 0 105")

               )
            )
    .Buttons(
        Html.X().ButtonSave()
        .DirectEvents(de =>
        {
            de.Click.Before = @"if (!App.frCriteria.getForm().isValid()) { return false; } ";
            de.Click.Action = "Update";
            de.Click.FormID = "frCriteria";
            de.Click.Success = "this.up('window').close();";
        }),
        Html.X().ButtonExit()
        )
)