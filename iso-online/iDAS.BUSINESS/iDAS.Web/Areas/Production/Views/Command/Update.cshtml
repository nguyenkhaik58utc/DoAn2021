@using Ext.Net;
@using Ext.Net.MVC;
@using iDAS.Web;
@using iDAS.Web.ExtExtend;
@using iDAS.Utilities;
@model iDAS.Items.ProductionCommandItem
@{
    string title = "";
    var IconView = new Icon();
    string actionForm = Model.ActionForm;
    if (actionForm == iDAS.Utilities.Form.Add)
    {
        IconView = Icon.Add;
        title = "Thêm mới lệnh sản xuất";
    }
    else
    {
        IconView = Icon.Pencil;
        title = "Cập nhật lệnh sản xuất";
    }
}
@(Html.X().CustomWindow()
            .Title(title)
            .Icon(IconView)
            .Items(
                    Html.X().CustomFormPanel().ID("frmUpdate")
                    .Items(
                            Html.X().HiddenFor(m=>m.ID),
                            Html.X().TextFieldFor(m => m.HumanDepartment.Name).FieldLabel("Phòng ban").ReadOnly(true),
                            Html.X().HiddenFor(m => m.HumanDepartment.ID).ID("hdfDepartmentId"),
                            Html.X().ComboBoxFor(m => m.ProductionRequirementID).ID("ProductionRequirementID").FieldLabel("Yêu cầu" + Html.Required()).AllowBlank(false)
                                .Listeners(ls => ls.Change.Handler = "App.StoreProductionPlan.reload(); App.StoreProductionStage.reload();")
                                .Store(
                                        Html.X().Store().ID("StoreProductionRequirement")
                                                .AutoLoad(true)
                                                .Proxy(Html.X().AjaxProxy()
                                                .Url(Url.Action("LoadCombobox", "Required"))
                                                            .ActionMethods(am => am.Read = HttpMethod.POST)
                                                            .Reader(Html.X().JsonReader().Root("data")))
                                                .Model(Html.X().Model()
                                                            .IDProperty("ID")
                                                            .Fields(
                                                                    new ModelField("ID", ModelFieldType.Int),
                                                                    new ModelField("ProductID", ModelFieldType.Int) { Mapping = "Product.ID" },
                                                                    new ModelField("Name", ModelFieldType.String))
                                                                    )
                                )
                                .DisplayField("Name")
                                .ValueField("ID"),
                            Html.X().ComboBoxFor(m => m.ProductionPlanID).FieldLabel("Kế hoạch")
                                        .Store(
                                            Html.X().Store().ID("StoreProductionPlan")
                                                    .AutoLoad(false)
                                                    .Proxy(Html.X().AjaxProxy().Url(Url.Action("LoadPlanForCommand", "Plan")).ActionMethods(am => am.Read = HttpMethod.POST)
                                                                                    .Reader(Html.X().JsonReader().Root("data")))
                                                                .Parameters(ps =>
                                                                                {
                                                                                    ps.Add(new StoreParameter("requirementId", "App.ProductionRequirementID.value", ParameterMode.Raw));
                                                                                })
                                                    .Model(Html.X().Model()
                                                                .IDProperty("ID")
                                                                .Fields(new ModelField("ID", ModelFieldType.Int),
                                                                            new ModelField("PlanName")
                                                                        ))
                                            )
                                            .DisplayField("PlanName")
                                            .ValueField("ID"),
                            Html.X().ComboBoxFor(m => m.ProductionStageID).FieldLabel("Công đoạn" + Html.Required()).AllowBlank(false)
                                        .Store(
                                                Html.X().Store().ID("StoreProductionStage")
                                                        .AutoLoad(false)
                                                        .Proxy(Html.X().AjaxProxy().Url(Url.Action("LoadByProduct", "Stage")).ActionMethods(am => am.Read = HttpMethod.POST)
                                                                                        .Reader(Html.X().JsonReader().Root("data")))
                                                                    .Parameters(ps =>
                                                                                    {
                                                                                        ps.Add(new StoreParameter("productId", "getProductId()", ParameterMode.Raw));
                                                                                    })
                                                        .Model(Html.X().Model()
                                                                    .IDProperty("ID")
                                                                    .Fields(new ModelField("ID", ModelFieldType.Int),
                                                                                new ModelField("Name")
                                                                            ))
                                            )
                                            .DisplayField("Name")
                                            .ValueField("ID"),
                            Html.X().Container().Layout(LayoutType.Column).Height(24)
                                .Items(
                                        Html.X().TextFieldFor(m=>m.Code).InputWidth(100).AllowBlank(false).ColumnWidth(0.5).FieldLabel("Mã lệnh"+Html.Required()),
                                        Html.X().TextFieldFor(m => m.BatchCode).FieldLabel("Mã lô").LabelWidth(60).InputWidth(100).ColumnWidth(0.5).MarginSpec("0 0 0 10")
                                ),
                            Html.X().DateTimeFieldFor(m => m.StartTime).FieldLabel("Thời gian bắt đầu").Height(24),    
                            Html.X().DateTimeFieldFor(m => m.EndTime).FieldLabel("Thời gian kết thúc").Height(24),
                            Html.X().TextFieldFor(m => m.Quantity).FieldLabel("Số lượng"),
                            Html.X().TextAreaFor(m=>m.Note).FieldLabel("Ghi chú").MinHeight(100).Flex(1)
                    )
                )
.Buttons(
            Html.X().ButtonSave()
                    .DirectEvents(de =>
                                {
                                    de.Click.Before = @"if (!App.frmUpdate.getForm().isValid()) { return false; }; ";
                                    de.Click.Url = Url.Action("Update");
                                    de.Click.FormID = "frmUpdate";
                                    de.Click.Success = "this.up('window').close();";
                                }),
            Html.X().ButtonExit()
      )
)
<script>
    var getProductId = function () {
        var select = App.StoreProductionRequirement.getById(App.ProductionRequirementID.value);
        if (select)
            return select.data.ProductID;
        else return 0;
    };
</script>