@using Ext.Net;
@using Ext.Net.MVC;
@using iDAS.Web;
@using iDAS.Web.ExtExtend;
@using iDAS.Utilities;
@model iDAS.Items.ProductionLevelItem
@{
    var X = Html.X();
    string title = "";
    var IconView = new Icon();
    string actionForm = Model.ActionForm;
    if (actionForm == iDAS.Utilities.Form.Add)
    {
        IconView = Icon.Add;
        title = "Thêm mới mức độ ưu tiên lệnh sản xuất";
    }
    else
    {
        IconView = Icon.Pencil;
        title = "Cập nhật mức độ ưu tiên lệnh sản xuất";
    }
}
@(Html.X().CustomWindow()
.ID("winCommandLevel")
        .Title(title)
        .Icon(IconView)
        .Items(
            X.CustomFormPanel().ID("frmUpdate")
                .Items(
                        X.HiddenFor(m => m.ID),
                        X.TextFieldFor(m => m.Name).FieldLabel("Mức độ ưu tiên" + Html.Required())
                                .EmptyText("Tên mức độ ưu tiên lệnh sản xuất...")
                                .BlankText("Tên mức độ ưu tiên lệnh sản xuất không được bỏ trống!")
                                .AllowOnlyWhitespace(false),
                                     Html.X().ComboBoxFor(m=>m.Color).FieldLabel("Màu sắc" + Html.Required())
                                                .ID("cbColor")
                                                .TabIndex(3)
                                                .QueryMode(DataLoadMode.Local)
                                                .ForceSelection(true)
                                                .AllowBlank(false)
                                                .TriggerAction(TriggerAction.All)
                                                .DisplayField("Name")
                                                .Editable(false)
                                                    .ValueField("Id")
                                                .Store(
                                                    Html.X().Store()
                                                    .ID("stColor")
                                                        .AutoLoad(true)
                                                        .Model(
                                                            Html.X().Model()
                                                                .IDProperty("Id")
                                                                .Fields(
                                                                    new ModelField("Id", ModelFieldType.String) { Mapping = "Id" },
                                                                    new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                                                )
                                                        )
                                                        .Proxy(
                                                            Html.X().AjaxProxy()
                                                                .Url(Url.Action("FillColor"))
                                                                .Reader(Html.X().JsonReader().Root("data")
                                                                )
                                                        )
                                                )
                            .Tpl(
                            @<text>
                                <tpl for=".">
                                    <div class="x-boundlist-item" style="display: inline-block; width: 100%;">
                                        <div style="width: 20px; height: 20px; float: left; background-color: {Id}; border: #cecece 1px solid;">&nbsp;</div><div style="width: auto; float: left; font-size: 0.9em;">&nbsp;{Name}</div>
                                    </div>
                                </tpl>
                            </text>)
                                    .Listeners(l => l.Change.Handler = "getColor(App.cbColor, App.stColor);"),
                        X.CheckboxFor(m => m.IsActive).FieldLabel("Kích hoạt"),
                        X.TextAreaFor(m => m.Note).FieldLabel("Ghi chú")
                                .EmptyText("Nhập ghi chú...").Height(100).Flex(1)
                    )
)
.Buttons(
            Html.X().ButtonSave()
                    .DirectEvents(de =>
                                {
                                    de.Click.Before = @"if (!App.frmUpdate.getForm().isValid()) { return false; }; ";
                                    de.Click.Url = Url.Action("Update");
                                    de.Click.FormID = "frmUpdate";
                                    de.Click.Success = "this.up('window').close();";
                                }), 
            Html.X().ButtonExit()
      )
)
<script type="text/javascript">
    var getColor = function (obj, store) {
        var id = obj.getValue();
        var record = store.getById(id);
        var color = record.get('Name');
        obj.setFieldStyle('background-image: none; background-color: ' + color + ';');
    };
</script>