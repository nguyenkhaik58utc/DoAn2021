@using Ext.Net;
@using Ext.Net.MVC;
@using iDAS.Web.ExtExtend;
@model iDAS.Items.AccountingPaymentPlanItem
@{
    var contractId = ViewData["ContractID"];
}
@(Html.X().ApprovalDetailWindow()
    .ItemsExtend(
         Html.X().HiddenFor(m => m.ID).ID("hdfAccountingPaymentPlanID"),
        Html.X().HiddenFor(m => m.QualityPlanID),
        Html.X().Hidden().Value(contractId).ID("hdfContractID"),
         Html.X().TabPanel()
            .ID("TabPanelUpdatePlan")
            .Region(Region.Center)
            .ActiveTabIndex(0)
            .Border(true)
            .Items(
                   Html.X().FormPanel().Title("Thông tin kế hoạch")
                        .AutoScroll(true)
                        .Layout(LayoutType.VBox)
                        .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                        .Frame(true)
                        .FieldDefaults(df => { df.LabelWidth = 120; df.LabelStyle = "padding-left: 5px;"; })
                        .PaddingSpec("5 10 0 0")
                        .StyleSpec("-webkit-border-radius: 0; border-radius: 0;border: none;")
                        .Items(
                          Html.X().TextFieldFor(m => m.Name).EmptyText("Nhập tên kế hoạch ...").FieldLabel("Tên kế hoạch").ReadOnly(true),
                          Html.X().ComboBoxFor(m => m.AccountingPaymentID).FieldLabel("Đề xuất").AllowBlank(false).ReadOnly(true)
                                    .QueryMode(DataLoadMode.Local).Editable(false)
                                    .EmptyText("Nhập đề xuất thu hồi công nợ ....")
                                    .ForceSelection(true)
                                    .DisplayField("Content")
                                    .ValueField("ID")
                                    .Store(Html.X().Store()
                                                .AutoLoad(true)
                                                .PageSize(100)
                                                .Model(Html.X().Model()
                                                        .IDProperty("ID")
                                                        .Fields(new ModelField("ID", ModelFieldType.Int) { Mapping = "ID" },
                                                                new ModelField("Content", ModelFieldType.String) { Mapping = "Content" }))
                                                .Proxy(Html.X().AjaxProxy().Url(Url.Action("LoadAccountingPaymentForAccounting", "Contract", new { area = "Accounting" }))
                                                                .Reader(Html.X().JsonReader().Root("data")))
                                                .Parameters(ps =>
                                                    {
                                                        ps.Add(new StoreParameter("id", "App.hdfContractID.value", ParameterMode.Raw));
                                                    })
                                                                ),
                            Html.X().Container().Layout(LayoutType.Column).MarginSpec("0 -2 2 0")
                                .Items(
                                    Html.X().DateTimeFieldFor(m => m.StartTime).FieldLabel("Bắt đầu").ReadOnly(true).ColumnWidth(0.55),
                                    Html.X().DateTimeFieldFor(m => m.EndTime).FieldLabel("Kết thúc").LabelWidth(70).ReadOnly(true).ColumnWidth(0.45)
                                        ),
                          Html.X().Container().Layout(LayoutType.Column).MarginSpec("2 -1 4 0")
                                .Items(
                                  Html.X().ComboBoxFor(m => m.Type).FieldLabel("Loại kế hoạch")
                                            .EmptyText("Chọn loại kế hoạch")
                                            .Items(new ListItem("Tổ chức", false),
                                                    new ListItem("Cá nhân", true))
                                            .ReadOnly(true).ColumnWidth(0.55),
                                  Html.X().NumberFieldFor(m => m.Cost)
                                            .LabelWidth(70).ColumnWidth(0.45)
                                            .ReadOnly(true)
                                            .FieldLabel("Chi phí")),
                          Html.X().TextFieldFor(m => m.Department.Name).FieldLabel("Phòng ban").ReadOnly(true),
                          Html.X().TextFieldFor(m => m.TargetName).FieldLabel("Thuộc mục tiêu").ReadOnly(true),
                          Html.X().TextFieldFor(m => m.ParentName).FieldLabel("Thuộc kế hoạch").ReadOnly(true),
                          Html.X().TextAreaFor(m => m.Content).FieldLabel("Nội dung").ReadOnly(true).EmptyText("Nhập nội dung kế hoạch").Flex(1).Margin(1))
                         ,
                          Html.X().FormPanel().Title("Thu hồi công nợ")
                            .AutoScroll(true)
                            .Layout(LayoutType.Column)
                            .Frame(true)
                            .Border(false)
                            .FieldDefaults(df => { df.LabelWidth = 90; df.LabelStyle = "padding-left: 5px;"; df.InputWidth = 210; })
                            .StyleSpec("border: none;")
                            .Items(
                                    Html.X().FieldSet().ColumnWidth(0.5).Title("Kế hoạch").Height(100).Margin(5)
                                            .Items(
                                                Html.X().NumberFieldFor(m => m.ValuePlan).FieldLabel("Số thu").MinValue(0).Icon(Icon.MoneyDollar).ReadOnly(true),
                                                Html.X().NumberFieldFor(m => m.RatePlan).FieldLabel("%").MinValue(0).Icon(Icon.ChartBar).ReadOnly(true),
                                                Html.X().DateFieldFor(m => m.TimePlan).FieldLabel("Thời gian").ReadOnly(true)
                                            )
                                    ,
                                    Html.X().FieldSet().ColumnWidth(0.5).Title("Thực tế").Height(100).Margin(5)
                                         .Items(
                                                Html.X().NumberFieldFor(m => m.ValueReal).FieldLabel("Số thu").MinValue(0).Icon(Icon.MoneyDollar).ReadOnly(true),
                                                Html.X().NumberFieldFor(m => m.RateReal).FieldLabel("%").MinValue(0).Icon(Icon.ChartBar).ReadOnly(true),
                                                Html.X().DateFieldFor(m => m.TimeReal).FieldLabel("Thời gian").ReadOnly(true)
                                            )
                            )
                )
            )
)