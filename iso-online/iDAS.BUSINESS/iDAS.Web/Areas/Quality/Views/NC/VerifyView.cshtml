@using Ext.Net.MVC
@using Ext.Net
@using iDAS.Utilities
@using iDAS.Web.ExtExtend
@model iDAS.Items.QualityNCItem
@{
    var labelCriteria = "Tiêu chí";
    if (Model.IsTrue)
    { 
        labelCriteria += Html.Required(); 
    }
}
@( Html.X().Window()
    .Title("Phê duyệt")
    .ID("WindowVerifyView")
    .Icon(Icon.PageEdit)
    .Layout(LayoutType.Fit)
        //.Width(800)
    .Maximized(true)
    .Height(520)
    .Constrain(true)
    .Modal(true)
    .Resizable(false)
    .Border(false)
    .BodyPadding(0)
    .Center()
    .Items(
        Html.X().FormPanel()
                .Url(Url.Action("Verify", "NC", new { area = "Quality" }))
                .Layout(LayoutType.Border)
                .Items(
                        Html.X().TabPanel()
                        .ActiveTabIndex(0)
                        .Region(Region.Center)
                        .Border(true)
                        .Margin(1)
                        .Items(
                            Html.X().FormPanel().Title("Thông tin sự không phù hợp")
                                .AutoScroll(true)
                                .Layout(LayoutType.VBox)
                                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                                .Frame(true)
                                .FieldDefaults(df => { df.LabelWidth = 100; })
                                .PaddingSpec("5 10 0 10")
                                .StyleSpec("border: none;")
                                .Items(
                                        Html.X().HiddenFor(m => m.ID),
                                        Html.X().TextAreaFor(m => m.Content).ReadOnly(true)
                                                .ID("txtName")
                                                .FieldLabel("Mô tả" )
                                                .EmptyText("Mô tả sự không phù hợp")
                                                .AllowBlank(false)
                                                .MinHeight(70).Flex(1)
                                                .BlankText("Nội dung không được bỏ trống!"),
                                            Html.X().TextAreaFor(m => m.Source).ReadOnly(true)
                                                .AllowBlank(false)
                                                .FieldLabel("Nguyên nhân" )
                                                .BlankText("Nội dung này không được bỏ trống!")
                                                .EmptyText("Nguyên nhân phát sinh của điểm không phù hợp")
                                                .Height(150),
                                        Html.X().Container().Height(25)
                                            .Layout(LayoutType.Column)
                                            .Items(
                                                Html.X().RadioGroupForEnum(m => m.Enums.Type)
                                                        .FieldLabel("Phân loại" )
                                                        .ColumnWidth(0.55)
                                                        .Selectable(false)
                                                ),
                                        Html.X().Container().Height(25)
                                            .Layout(LayoutType.Column)
                                            .Items(
                                                Html.X().DateTimeFieldFor(m => m.Time).ReadOnly(true).FieldLabel("Ngày phát hiện" ).ColumnWidth(0.55).Height(25)
                                            ),
                                        //Html.X().ComboBoxFor(m => m.CategoryID)
                                        //        .FieldLabel("Nhóm KPH" )
                                        //        .AllowBlank(false).BlankText("Nhóm sự không phù hợp bắt buộc chọn!")
                                        //        .QueryMode(DataLoadMode.Local)
                                        //        .ForceSelection(true)
                                        //        .DisplayField("Name")
                                        //        .ValueField("ID")
                                        //        .Store(Html.X().Store()
                                        //                        .AutoLoad(true)
                                        //                        .Model(
                                        //                                Html.X().Model()
                                        //                                        .IDProperty("ID")
                                        //                                        .Fields(
                                        //                                                    new ModelField("ID", ModelFieldType.Int) { Mapping = "ID" },
                                        //                                                    new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                        //                                                )
                                        //                                        )
                                        //                        .Proxy(
                                        //                                Html.X().AjaxProxy().Url(Url.Action("LoadNCCategory", "NCCategory", new { area = "Quality" }))
                                        //                                        .Reader(Html.X().JsonReader().Root("data"))
                                        //                                )
                                        //                ),
                                        Html.X().DepartmentFieldFor(m => m.Department).ReadOnly(true).FieldLabel("Phòng ban" )
                                                .AllowBlank(false).PaddingSpec("0 2 0 0").Height(25),
                                        Html.X().HiddenFor(m => m.LisEmployeeID).ID("hdfLsEmployeeID"),
                                        Html.X().HiddenFor(m => m.LisRoleID).ID("hdfLsRoleID")
                                ),
                              Html.X().Panel().Title(@"Người/ vị trí liên quan").Layout(LayoutType.Border)
                            .Items(
                                    Html.X().FieldSet()
                                            .Title("Vị trí liên quan")
                                            .Margin(0).Padding(0)
                                            .StyleSpec("border-bottom: none;border-left: none;border-right: none;")
                                            .Region(Region.North)
                                            .Height(200).Layout(LayoutType.Fit)
                                            .Items(
                                                        Html.X().GridPanel()
                                                                .ID("grNCRole")
                                                                .Border(false)
                                                                .StyleSpec("border-top: solid 1px #99bce8; border-bottom: solid 1px #99bce8;")
                                                                .Store(
                                                                        Html.X().Store()
                                                                        .ID("storeNCRole")
                                                                        .RemotePaging(true)
                                                                        .PageSize(20)
                                                                        .Proxy(Html.X().AjaxProxy().Url(Url.Action("LoadRole", "NC", new { Area = "Quality" })).Reader(Html.X().JsonReader().Root("data")))
                                                                        .Parameters(ps => ps.Add(new StoreParameter("lsRoleId", "App.hdfLsRoleID.getValue()", ParameterMode.Raw)))
                                                                        .Model(
                                                                            Html.X().Model().Fields(
                                                                                        Html.X().ModelField().Name("ID"),
                                                                                        Html.X().ModelField().Name("Name"),
                                                                                            Html.X().ModelField().Name("Department")
                                                                            )
                                                                        )
                                                                    )
                                                                .ColumnModel(
                                                                            Html.X().RowNumbererColumn().Text("STT").Width(30).Align(Alignment.Center),
                                                                            Html.X().Column().DataIndex("Name").Flex(1).Text("Chức danh"),
                                                                            Html.X().Column().DataIndex("Department").Flex(1).Text("Đơn vị")

                                                                            )
                                                                .BottomBar(Html.X().CustomPagingToolbar())
                                        ),
                                    Html.X().FieldSet()
                                        .Title("Người liên quan")
                                        .Margin(0).Padding(0)
                                        .StyleSpec("border-bottom: none;border-left: none;border-right: none;")
                                        .Region(Region.Center)
                                        .MinHeight(100).Layout(LayoutType.Fit)
                                        .Items(
                                                      Html.X().GridPanel()
                                                                .ID("grNCEmployee")
                                                                .Border(false)
                                                                .StyleSpec("border-top: solid 1px #99bce8; border-bottom: solid 1px #99bce8;")
                                                                .Store(
                                                                        Html.X().Store()
                                                                        .ID("storeNCEmployee")
                                                                        .RemotePaging(true)
                                                                        .PageSize(20)
                                                                        .Proxy(Html.X().AjaxProxy().Url(Url.Action("LoadEmployee", "NC", new { Area = "Quality" })).Reader(Html.X().JsonReader().Root("data")))
                                                                        .Parameters(ps => ps.Add(new StoreParameter("lsEmployeeId", "App.hdfLsEmployeeID.getValue()", ParameterMode.Raw)))
                                                                        .Model(
                                                                            Html.X().Model().Fields(
                                                                                        Html.X().ModelField().Name("ID").Type(ModelFieldType.Int),
                                                                                        Html.X().ModelField().Name("Name"),
                                                                                        Html.X().ModelField().Name("Avatar")
                                                                            )
                                                                        )
                                                                    )
                                                                .ColumnModel(
                                                                            Html.X().RowNumbererColumn().Text("STT").Width(30).Align(Alignment.Center),
                                                                            Html.X().Column().DataIndex("Avatar").Width(31).Text("").Renderer("AvatarRenderer"),
                                                                            Html.X().Column().DataIndex("Name").Flex(1).Text("Họ Tên")
                                                                            )
                                                                .BottomBar(Html.X().CustomPagingToolbar())

                                              )
                                )

                        ),
                        Html.X().FormPanel().Title("Thông tin xác nhận")
                            .AutoScroll(true)
                            .Region(Ext.Net.Region.East)
                            .Collapsible(true)
                            .Split(true)
                            .Width(400)
                            .Layout(LayoutType.VBox)
                            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                            .Frame(true)
                            .StyleSpec("-webkit-border-radius: 0; border-radius: 0;")
                            .Margin(1)
                            .FieldDefaults(fs => { fs.LabelWidth = 75;})
                            .Items(
                             //   Html.X().EmployeeFieldFor(m => m.CheckBy).ReadOnly(true).Title("Người kiểm tra"),
                                Html.X().DateTimeFieldFor(m => m.CheckAt).FieldLabel("Thời gian"+ Html.Required()).AllowBlank(false),
                                Html.X().CheckboxFor(m => m.IsTrue).FieldLabel("Xác nhận")
                                       // .Listeners(ls => ls.Change.Handler = "Verify(this.value);")
                                        .BoxLabel("Có sự không phù hợp này"),
                                //Html.X().CriteriaFieldFor(m => m.Criteria).FieldLabel(labelCriteria)
                                //                .AllowBlank(!Model.IsTrue).ReadOnly(!Model.IsTrue).ID("cfCriteria"),
                                Html.X().TextAreaFor(m => m.CheckNote).LabelAlign(LabelAlign.Top).FieldLabel("Ghi chú").MinHeight(70).Flex(1)

                            )
                    )
    )
    .Buttons(
        Html.X().Button()
            .ID("btnSave")
            .Icon(Icon.PageEdit)
            .Text("Phê duyệt")
            .Handler("onVerifyNC(this.up('window'))"),
        Html.X().ButtonExit()
    )
)
<script>
    var onVerifyNC = function (window) {
        var form = window.down('form');
        form.submit({
            success: function (form, action) {
                window.close();
                NCGridPanel.getStore().reload();
            },
        });
    };
    var AvatarRenderer = function (value) {
        var tpl = "";
        if (value == "") {
            tpl = "<img src='/Content/images/underfind.jpg' style='width:30px;height:30px;margin: -3px -6px -5.5px -6px;'/>";
        }
        else {
            tpl = "<img src='" + value + "' style='width:30px;height:30px;margin: -3px -6px -5.5px -6px;'/>";
        };
        return tpl;
    };
    var Verify = function (value) {
        var txtCriteria = App.cfCriteria.queryById('txtCriteriaName');
        if (value == true) {
            txtCriteria.rightButtons[0].show();
            txtCriteria.setFieldLabel("Tiêu chí <span style='color:red'> (*)</span>");
            txtCriteria.allowBlank = false;
        }
        else {

            txtCriteria.rightButtons[0].hide();
            txtCriteria.setValue("");
            txtCriteria.setFieldLabel("Tiêu chí");
            App.cfCriteria.queryById('hdfCriteriaID').setValue("");
            txtCriteria.allowBlank = true;

        };
    };
</script>