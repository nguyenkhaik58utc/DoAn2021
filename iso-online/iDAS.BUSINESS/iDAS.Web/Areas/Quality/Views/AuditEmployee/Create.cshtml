@using Ext.Net.MVC
@using Ext.Net
@using iDAS.Utilities
@using iDAS.Web.ExtExtend;
@model iDAS.Items.QualityAuditEmployeeItem
@{
    var auditPlanId = ViewData["auditPlanId"].ToString();
}
@(Html.X().Window()
          .ID("winNewAuditObject")
          .Title("Thêm mới ban đánh giá")
          .Icon(Icon.Add)
          .Height(253)
          .Width(550)
          .BodyPadding(6)
          .Constrain(true)
          .Modal(true)
          .Layout(LayoutType.Fit)
          .Items(
        Html.X().FormPanel()
                .ID("frAuditObject")
                .Layout(LayoutType.Column)
                .Frame(true)
                .StyleSpec("border: none;")
                .FieldDefaults(d => d.LabelAlign = LabelAlign.Left)
        .Items(
               Html.X().FieldSet().Title("Thông tin cá nhân").MarginSpec("-2 0 0 0").Layout(LayoutType.Form).ColumnWidth(0.77).Items(
            Html.X().TextFieldFor(m => m.EmployeeName).FieldLabel("Họ tên" + Html.Required()).AllowBlank(false).BlankText("Tên quy mô không được trống!").AllowOnlyWhitespace(false),
                 Html.X().TextFieldFor(m => m.Role).FieldLabel("Chức danh" + Html.Required()).AllowBlank(false).BlankText("Tên chức danh không được trống!").AllowOnlyWhitespace(false),
                  Html.X().TextFieldFor(m => m.Email).FieldLabel("Email").AllowOnlyWhitespace(false),
                   Html.X().TextFieldFor(m => m.Phone).FieldLabel("Điện thoại").AllowOnlyWhitespace(false),
                    Html.X().CheckboxFor(m => m.IsCaptain).BoxLabel("Trưởng nhóm đánh giá").HideLabel(true)
                    .MarginSpec("0 0 0 105"),
                           Html.X().CheckboxFor(m => m.IsAuditor).BoxLabel("Nhân sự đánh giá").HideLabel(true).MarginSpec("0 0 0 105")),
                                   Html.X().FieldSet().Title("Ảnh đại diện").MarginSpec("-2 0 0 5").Height(170).Layout(LayoutType.Fit).ColumnWidth(0.23).PaddingSpec("0 4 3 4").Items(

    Html.X().ImageButton()
    
    .TabIndex(10)
    .ID("imgLogoEdit")
    .ImageUrl("/Content/images/underfind.jpg")
        .Listeners(l => l.Click.Handler = "showBrowseImage();")

    )
            
             )
            )
            .Buttons(
            Html.X().ButtonSave()
            .ID("btnSave")
            .DirectEvents(de =>
            {
                de.Click.ExtraParams.Add(new { val = false });
                de.Click.ExtraParams.Add(new { AuditPlanID = auditPlanId });
                de.Click.ExtraParams.Add(new { imglogo = new JRawValue("getLogoNameAdd()") });      
                de.Click.Before = @"if (!App.frAuditObject.getForm().isValid()) { return false; } ";
                de.Click.Action = "Insert";
                de.Click.FormID = "frAuditObject";
            }),
            Html.X().ButtonSaveAndExit()
            .ID("btnSaves")
            .DirectEvents(de =>
            {
                de.Click.ExtraParams.Add(new { val = true });
                de.Click.ExtraParams.Add(new { AuditPlanID = auditPlanId });
                de.Click.ExtraParams.Add(new { imglogo = new JRawValue("getLogoNameAdd()") });        
                de.Click.Before = @"if (!App.frAuditObject.getForm().isValid()) { return false; } ";
                de.Click.Action = "Insert";
                de.Click.FormID = "frAuditObject";
                de.Click.Success = "this.up('window').close();";
            }),
            Html.X().ButtonReset()
            .ID("btnReset")
            .Handler("App.frAuditObject.reset();"),
            Html.X().ButtonExit()
            )
)

<script type="text/javascript">
    var getLogoNameAdd = function () {
        var imgUrl = document.getElementById("imgLogoEdit").getAttribute('src');
        return imgUrl;
    };
    var showBrowseImage = function () {
        Ext.net.DirectMethod.request({
            url: '@(Url.Action("ShowWindowBrowse", "AuditEmployee", new { Area = "Quality" }, null))'
        });
    }
</script>