@using Ext.Net.MVC
@using Ext.Net
@using iDAS.Utilities
@using iDAS.Web.ExtExtend
@model iDAS.Items.QualityAuditPlanItem
@( Html.X().Window()
    .Title("Phê duyệt kế hoạch đánh giá")
    .Icon(Icon.Tick)
    .ID("wdApprove")
    .Height(1)
    .Maximized(true)
    .Constrain(true)
    .Layout(LayoutType.Fit)
    .Modal(true)
    .Resizable(false)
    .BodyPadding(0)
    .Border(false)
    .Center()
    .Items(Html.X().FormPanel()
        .Layout(LayoutType.Border)
        .StyleSpec("border: none;")
        .ID("frmAudit")
        .Border(false)
        .Items(Html.X().TabPanel()
        .Region(Region.Center)
            .ActiveTabIndex(0)
            .Border(true)
            .Items(Html.X().Panel()
                .BodyPadding(6)
                .Icon(Icon.ApplicationViewDetail)
                .Layout(LayoutType.VBox)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })    
                .StyleSpec("border: none;")
                .Title("Nội dung kế hoạch")
                .Frame(true)
                .Items(
                     Html.X().Container()
                        .Layout(LayoutType.Column)
                        .MarginSpec("0 0 5 0").Items(
                        Html.X().HiddenFor(m=>m.ID),
                        Html.X().HiddenFor(m=>m.CreateByEmployeeID),
                            Html.X().TextFieldFor(m => m.Code)
                            .ReadOnly(true)
                                .FieldLabel("Mã kế hoạch" )
                                .TabIndex(1)
                                .ColumnWidth(0.3)
                                .MaxLength(20)
                                .AllowBlank(false)
                                .BlankText("Mã kế hoạch không được để trống!"),
                                Html.X().ComboBoxFor(m => m.ISOID)
                                            .FieldLabel("Tiêu chuẩn đánh giá" )
                                        .TabIndex(2)
                                        .LabelWidth(120)
                                        .MarginSpec("0 0 0 5")
                                        .ReadOnly(true)
                                        .AllowBlank(false)
                                        .ColumnWidth(0.7)
                                               .DisplayField("Name")
                                            .ValueField("ID")
                                            .Store(
                                            Html.X().Store()
                                                .ID("StoreISO")
                                                .AutoLoad(true)
                                                     .Proxy(Html.X().AjaxProxy()
                                                            .Url(Url.Action("GetData", "ISOStandard", new { area = "Quality" }))
                                                        .Reader(Html.X().JsonReader().Root("data")
                                                        )
                                                        )
                                                .Model(Html.X().Model()
                                                    .Fields(
                                                        new ModelField("Name"),
                                                        new ModelField("ID")
                                                    )
                                                )
                                            )
                                        ),
                                         Html.X().TextFieldFor(m => m.Name)
                                             .ReadOnly(true)
                                    .FieldLabel("Tên kế hoạch" )
                                    .TabIndex(2)
                                    .AllowBlank(false)
                                        .BlankText("Tên kế hoạch không được để trống!"),
                                              Html.X().Container()
                                                            .Layout(LayoutType.Column)
                                                            .ColSpan(2)
                                                            .MarginSpec("0 0 5 0")
                                                            .Items(
                                                                Html.X().DateTimeFieldFor(m => m.StartTime).ReadOnly(true)
                                                                         .FieldLabel("Bắt đầu" )
                                                                         .ColumnWidth(0.5).MarginSpec("0 5 0 0"),
                                                                             Html.X().DateTimeFieldFor(m => m.EndTime).ReadOnly(true)
                                                                                 .FieldLabel("Kết thúc" )
                                                                                  .ColumnWidth(0.5)

                                                                    ),
                                                         Html.X().TextAreaFor(m => m.Scope)
                                            .TabIndex(3)

                                            .FieldLabel("Phạm vi" )
                                                    .BlankText("Phạm vi không được bỏ trống!").ReadOnly(true)
                                            .Height(155),
                                                             Html.X().TextAreaFor(m => m.Require).ReadOnly(true)
                                                .TabIndex(3)
                                                .FieldLabel("Yêu cầu" )
                                                    .BlankText("Yêu cầu không được bỏ trống!")
                                                .Flex(1)
                                                


                ),                   
                         Html.X().EmployeeFieldFor(m => m.Create).Hidden(true)   
                       
                ),
                    Html.X().ApprovalPanelFor(m => m)

        )
)
            .Buttons(
                 Html.X().Button()
                            .ID("btnAccept")
                            .TabIndex(17)
                            .Icon(Icon.Accept)
                            .Text("Lưu phê duyệt")
                            .DirectEvents(de =>
                                {
                                    de.Click.FormID = "frmAudit";
                                    de.Click.Url = Url.Action("ApproveAudit");
                                    de.Click.Before = @"if (!#{frmAudit}.getForm().isValid()) {Ext.MessageBox.show({ title: 'Thông báo', msg: 'Kiểm tra các thông tin cần nhập!', buttons: { yes: 'Đồng ý' }, iconCls: '#Exclamation' }); return false; }";
                                    de.Click.EventMask.ShowMask = true;
                                    de.Click.EventMask.Msg = "Đang xử lý Dữ liệu...";
                                    de.Click.Success = "this.up('window').close();";
                                }),   
                Html.X().ButtonExit()
            )

)

<script>
    function onSendApprovalTask(window) {
        var form = window.down('form');
        if (checkFormValid(form)) {
            form.submit({
                url: urlInsertTask,
                params: {
                    IsEdit: false,
                    IsNew: false,
                },
                success: window.close(),
            });
        }
    }
    function onInsertTask(window) {
        var form = window.down('form');
        if (checkFormValid(form)) {
            form.submit({
                url: urlInsertTask,
                params: {
                    IsEdit: true,
                    IsNew: true,
                },
                success: window.close(),
            });
        }
    }
    function checkFormValid(form) {
        if (!form.isValid() || App.IsPerform.value == null) {
            Ext.MessageBox.show({
                title: 'Thông báo', msg: 'Chưa nhập đủ các thông tin yêu cầu nhập!',
                buttons: { yes: 'Đồng ý' }, iconCls: '#Exclamation'
            });
            return false;
        }
        return true;
    }
</script>