@using Ext.Net.MVC
@using Ext.Net
@using iDAS.Utilities
@using iDAS.Web.ExtExtend
@model iDAS.Items.QualityAuditRecordedVoteItem
@(Html.X().Window()
        .ID("winVote")
        .Title("Xem chi tiết phiếu ghi chép đánh giá nội bộ")
        .Icon(Icon.Zoom)
        .Height(400).Width(650)
        .Maximizable(true).Maximized(true)
        .BodyPadding(0).Modal(true)
        .Constrain(true).Border(false)
        .Layout(LayoutType.Fit)
        .Items(
            Html.X().FormPanel().ID("frVote")
                    .Layout(LayoutType.VBox)
                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                    .Frame(true)
                    .FieldDefaults(d => d.LabelAlign = LabelAlign.Left)
                    .Items(
                            Html.X().Container().Layout(LayoutType.Column)
                                .Items(
                                        Html.X().Container().ColumnWidth(0.5)
                                            .Items(
                                                    Html.X().ComboBoxFor(m => m.HumanDepartmentID).FieldLabel("Phòng ban").ReadOnly(true)
                                                        .QueryMode(DataLoadMode.Local).Editable(false).Width(350)
                                                        .ForceSelection(true)
                                                        .DisplayField("Name")
                                                        .ValueField("ID")
                                                        .Store(Html.X().Store()
                                                                    .AutoLoad(true)
                                                                    .PageSize(100)
                                                                    .Model(Html.X().Model()
                                                                                .IDProperty("ID")
                                                                                .Fields(
                                                                                            new ModelField("ID", ModelFieldType.Int),
                                                                                            new ModelField("Name", ModelFieldType.String)
                                                                                        )
                                                                            )
                                                                    .Proxy(Html.X().AjaxProxy().Url(Url.Action("LoadDeparment"))
                                                                                    .Reader(Html.X().JsonReader().Root("data")))
                                                                    .Parameters(ps =>
                                                                        {
                                                                            ps.Add(new StoreParameter("programId", Model.QualityAuditProgramID.ToString(), ParameterMode.Value));
                                                                        })
                                                                ),
                                                    Html.X().DateTimeFieldFor(m => m.AuditAt).ReadOnly(true).FieldLabel("Ngày đánh giá"),
                                                    Html.X().EmployeeFieldFor(m => m.Auditer).ReadOnly(true).Title("Người đánh giá")
                                                    ),
                                             Html.X().Container().ColumnWidth(0.5).Layout(LayoutType.Form).PaddingSpec("0 5 0 10").ID("frmModuleSelect")
                                                    .Items(
                                                              Html.X().ComboBoxFor(m => m.ModuleCode).FieldLabel("Module").ID("cbxModule")
                                                                            .QueryMode(DataLoadMode.Local).ForceSelection(true)
                                                                            .TriggerAction(TriggerAction.All).Editable(true).AllowBlank(false)
                                                                            .DisplayField("Name")
                                                                            .ValueField("ID").ReadOnly(true)
                                                                            .Store(
                                                                                    Html.X().Store()
                                                                                        .Parameters(ps =>
                                                                                            {
                                                                                                ps.Add(new StoreParameter("programId", "App.hdfQualityAuditProgramID.value", ParameterMode.Raw));
                                                                                            })
                                                                                        .Model(
                                                                                                Html.X().Model().IDProperty("ID")
                                                                                                    .Fields(Html.X().ModelField().Name("ID"),
                                                                                                            Html.X().ModelField().Name("Name"))
                                                                                                )
                                                                                        .Proxy(Html.X().AjaxProxy().Url(Url.Action("LoadModule")).Reader(Html.X().JsonReader().Root("data")))
                                                                                    ),
                                                                Html.X().TextFieldFor(m => m.FunctionName).FieldLabel("Chức năng").ReadOnly(true),
                                                                Html.X().ComboBoxFor(m => m.ISOIndexID).FieldLabel("Điều khoản").ID("cbxISOIndex")
                                                                        .QueryMode(DataLoadMode.Local).ForceSelection(true)
                                                                        .TriggerAction(TriggerAction.All).Editable(true).ReadOnly(true)
                                                                        .DisplayField("Name")
                                                                        .ValueField("ID")
                                                                        .Store(
                                                                                Html.X().Store()
                                                                                    .Parameters(ps => { ps.Add(new StoreParameter("programId", "App.hdfQualityAuditProgramID.value", ParameterMode.Raw)); })
                                                                                    .Model(
                                                                                            Html.X().Model().IDProperty("ID")
                                                                                                .Fields(Html.X().ModelField().Name("ID"),
                                                                                                        Html.X().ModelField().Name("Name")
                                                                                                       )
                                                                                          )
                                                                                    .Proxy(Html.X().AjaxProxy().Url(Url.Action("LoadISOIndex")).Reader(Html.X().JsonReader().Root("data")))
                                                                               )
                                                                                   ,
                                                                    Html.X().Container().Height(25).Layout(LayoutType.Column)
                                                                    .Items(
                                                                            Html.X().RadioGroupForEnum(m => m.Enums.Type)
                                                                                        .FieldLabel("Phân loại").ColumnWidth(0.55).Enable(false)
                                                                        )
                                                        )
                                ),
                Html.X().Container().LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                                        .MarginSpec("0 0 0 5").Flex(1)
                                .Items(
                                            Html.X().TextAreaFor(m => m.Contents).MinHeight(150).Flex(1)
                                            .FieldLabel("<b>Nội dung</b>")
                                            .AllowBlank(false).ReadOnly(true)
                                            .AllowOnlyWhitespace(false).LabelAlign(LabelAlign.Top)
                                    )
                )
        )
    .Buttons(Html.X().ButtonExit())
)
<script>
    var VerifyRenderer = function (value) {
        if (value == true) {
            return '<img src="/icons/tick-png/ext.axd" style="right: auto; left: 0px; top: 0px; margin: 0px;"/>';
        }
        else {
            return '';
        }
    };
</script>