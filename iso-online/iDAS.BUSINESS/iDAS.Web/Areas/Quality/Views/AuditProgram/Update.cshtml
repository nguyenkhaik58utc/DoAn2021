@using Ext.Net.MVC
@using Ext.Net
@using iDAS.Utilities
@using iDAS.Web.ExtExtend
@model iDAS.Items.QualityAuditProgramItem
@(Html.X().Window()
          .ID("winUpdateAuditProgram")
          .Title("Sửa chương trình đánh giá")
          .Icon(Icon.Pencil)
            .Height(470)
              .Width(700)
              .Maximizable(true)
              .BodyPadding(0)
              .Constrain(true)
              .Modal(true)
              .Layout(LayoutType.Fit)
          .Items(
             Html.X().FormPanel()
                .ID("frAuditProgram")
                .Layout(LayoutType.VBox)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                .Frame(true)
                .StyleSpec("border: none;")
                .FieldDefaults(d => d.LabelAlign = LabelAlign.Left)
                .Items(
            Html.X().TabPanel()
                .Region(Region.Center)
                .ActiveTabIndex(0)
                .Border(true)
                .Flex(1)
                .Layout(LayoutType.Fit)
                .Items(
                 Html.X().Panel()
                    .BodyPadding(6)
                    .Icon(Icon.ApplicationViewDetail)
                    .Layout(LayoutType.VBox)
                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                    .StyleSpec("border: none;")
                    .Title("Nội dung chương trình")
                    .Frame(true)
                    .Items(
                Html.X().HiddenFor(m=>m.ID).ID("tct"),
                Html.X().TextFieldFor(m => m.Name)
                        .FieldLabel("Tên chương trình" + Html.Required())
                        .MaxLength(100)
                        .LabelWidth(120)
                        .AllowBlank(false)
                        .BlankText("Tên chương trình không được trống!")
                        .AllowOnlyWhitespace(false),                       
                Html.X().Container()
                        .Layout(LayoutType.Column)
                        .ColSpan(2)
                        .MarginSpec("0 0 5 0")
                        .Items(
                        Html.X().DateTimeFieldFor(m => m.StartTime)
                                .FieldLabel("Bắt đầu" + Html.Required())
                                .AllowBlank(false)
                                .LabelWidth(120)
                                .ColumnWidth(0.55)
                                .MarginSpec("0 5 0 0"),
                        Html.X().DateTimeFieldFor(m => m.EndTime)
                                .AllowBlank(false)
                                .LabelWidth(70)
                                .FieldLabel("Kết thúc" + Html.Required())
                                .ColumnWidth(0.45)
                                ),
                        Html.X().TextAreaFor(m => m.Content)
                                .FieldLabel("Nội dung")
                                .LabelWidth(120),
                        Html.X().TextFieldFor(m => m.Address)
                                .FieldLabel("Địa điểm")
                                .MaxLength(200)
                                .LabelWidth(120),
                        Html.X().TextAreaFor(m => m.Note)                                    
                                .FieldLabel("Ghi chú")
                                .LabelWidth(120),
                        Html.X().EmployeeFieldFor(m => m.Approval)
                                .MarginSpec("-2 0 0 125")
                                .Title("Người phê duyệt" + Html.Required()
                                )
                            ),
                Html.X().Panel()
                        .Icon(Icon.UserTick)
                        .Height(380)
                        .Border(false)
                        .BodyPadding(0)
                        .Margin(0)
                        .Flex(1)
                        .Padding(0)
                        .AutoScroll(true)
                        .Title("Yêu cầu được đánh giá")
                        .Layout(LayoutType.Fit)
                        .Items(
                Html.X().GridPanel()
                        .ID("grStandard")
                        .Header(false)
                        .Title("Lựa chọn điều khoản đánh giá")
                        .Region(Region.Center)
                        .Split(true)
                        .Border(false)
                        .Margin(0)
                        .TitleAlign(TitleAlign.Center)
                        .Layout(LayoutType.Fit)
                        .ForceFit(true)
                        .ColumnLines(true)
                        .RowLines(true)
                        .Store(
                    Html.X().Store()
                        .ID("StoreStandard")
                        .AutoLoad(true)
                        .Proxy(Html.X().AjaxProxy()
                                .Url(Url.Action("GetDataISOIndexEdit", "AuditProgram", new { area = "Quality" }))
                            .Reader(Html.X().JsonReader()
                            .Root("data"))
                            )
                         .Parameters(ps =>
                            {
                                ps.Add(new StoreParameter("isoId", "App.grQualityAuditPlan.selModel.getSelection().length > 0 ? App.grQualityAuditPlan.getSelectionModel().getLastSelected().data.ISOID:0", ParameterMode.Raw));
                                ps.Add(new StoreParameter("programId", Model.ID.ToString(), ParameterMode.Value));
                            })
                        .Model(
                            Html.X().Model()
                            .Fields(
                                Html.X().ModelField().Name("ID"),
                                Html.X().ModelField().Name("Name"),
                                Html.X().ModelField().Name("ListModuleName").Type(ModelFieldType.String),
                                Html.X().ModelField().Name("Clause"),
                                Html.X().ModelField().Name("IsSelected").Type(ModelFieldType.Boolean)
                             )
                            )
            )
            .ColumnModel(
                Html.X().RowNumbererColumn().Text("STT").Width(30).Align(Alignment.Center),
                Html.X().Column()
                        .Text("Điều")
                        .StyleSpec("font-weight: bold; text-align: center;")
                        .Align(Alignment.Left)
                        .DataIndex("Clause")
                        .Width(110),
                Html.X().Column()
                        .Text("Yêu cầu tiêu chuẩn")
                        .StyleSpec("font-weight: bold; text-align: center;")
                        .Align(Alignment.Left)
                        .DataIndex("Name")
                        .Flex(1),
                   Html.X().Column()
                        .Text("Module tham chiếu")
                        .StyleSpec("font-weight: bold; text-align: center;")
                        .DataIndex("ListModuleName")
                        .Width(170)
                        .Align(Alignment.Left),
                    Html.X().CheckColumn().DataIndex("IsSelected").Width(40).Editable(true)
                         )
                        .View(
                        Html.X().GridView().MarkDirty(false)
                        )
                        .Plugins(Html.X().CellEditing())
                        ),
                Html.X().Panel()
                    .Icon(Icon.House)
                    .Border(false)
                    .BodyPadding(0)
                    .Margin(0)
                    .Padding(0)
                    .AutoScroll(true)
                    .Title("Phòng ban tham gia")
                    .Layout(LayoutType.Fit)
                    .Items(
                Html.X().Hidden().ID("hdflistDepartmentId"),
                Html.X().Hidden().ID("hdflistDepartmentRemoveId"),
                Html.X().TreePanel()
                .Title("SƠ ĐỒ TỔ CHỨC")
                .Header(false)
                    .BodyPadding(0)
                        .MarginSpec("1 0 0 0")
                                .Padding(0)
                .TitleAlign(TitleAlign.Center)
                .Layout(LayoutType.Fit)
                .Icon(Icon.TextListBullets)
                .ForceFit(true)
                .RootVisible(false)
                .RowLines(true)
                .Root(Html.X().Node().NodeID("0"))
                .SingleExpand(false)
                .Border(false)
                .Region(Region.West)
                .SelectionModel(
                        Html.X().RowSelectionModel()
                        .Mode(SelectionMode.Multi)
                )
                    .TopBar(
                            Html.X().Toolbar()
                                    .Items(
                                      Html.X().Button()
                                     .Text("Mở rộng")
                                     .Icon(Icon.ControlAddBlue)
                                     .Handler("this.up('treepanel').expandAll();"),
                                     Html.X().ToolbarSeparator(),
                                      Html.X().Button()
                                     .Text("Thu gọn")
                                               .Icon(Icon.ControlRemoveBlue)
                                     .Handler("this.up('treepanel').collapseAll();")
                                                    )
                                            )
                .Store(
                    Html.X().TreeStore()
                    .ID("stDepartmetChoice")
                         .Parameters(ps =>
                                {
                                    ps.Add(new StoreParameter("auditProgramId", Model.ID.ToString(), ParameterMode.Value));
                                }
                            )
                            .Proxy(Html.X().AjaxProxy().Url(Url.Action("LoadDepartments", "AuditDepartment", new { Area = "Quality" }, null)).Reader(Html.X().JsonReader().Root("data")))
                    .Model(
                        Html.X().Model().Fields(
                        Html.X().ModelField().Name("id"),
                        Html.X().ModelField().Name("text"),
                        Html.X().ModelField().Name("ParentID"),
                        Html.X().ModelField().Name("IsActive").Type(ModelFieldType.Boolean),
                        Html.X().ModelField().Name("IsDeleted").Type(ModelFieldType.Boolean),
                        Html.X().ModelField().Name("IsSelected").Type(ModelFieldType.Boolean),
                        Html.X().ModelField().Name("IsCancel").Type(ModelFieldType.Boolean)
                        )

                    )
                )
                .ColumnModel(
                    Html.X().TreeColumn()
                        .Text("SƠ ĐỒ TỔ CHỨC")
                        .StyleSpec("font-weight: bold; text-align: center;")
                        .Align(Alignment.Left)
                        .DataIndex("text")
                        .Flex(1),
                    Html.X().CheckColumn()
                            .DataIndex("IsSelected")
                            .Text("Chọn").Align(Alignment.Center)
                            .Editable(true)
                            .Editor(
                                    Html.X().Checkbox()
                                        ).Width(60)
                                )
                        .Plugins(
                        Html.X().RowEditing()
                        .SaveBtnText("Cập nhật")
                        .CancelBtnText("Hủy bỏ")
                            .Listeners(l =>
                            {
                                l.Edit.Fn = "selectDepartmentEdit";
                                l.CancelEdit.Handler = "if(e.record.phantom){e.store.remove(e.record);}";
                            })
                    )
                    .HideHeaders(true)
                    ),
                Html.X().Panel()
                    .Icon(Icon.UserTick)
                    .Border(false)
                         .BodyPadding(0)
                            .Margin(0)
                            .Padding(0)
                    .AutoScroll(true)
                    .Title("Thành phần tham gia")
                    .Layout(LayoutType.Fit)
                    .Items(
                             Html.X().GridPanel()
                        .ID("grMnObject")
                        .Border(false)
                        .Listeners(ls => ls.BeforeItemContextMenu.Fn = "itemcontextmenu")
                        .TopBar(
                        Html.X().Toolbar()
                                .Items(
                                    Html.X().Button()
                                            .Text("Thành phần tham gia")
                                            .ID("btnChoice")
                                            .Icon(Icon.User)                                          
                                            .DirectEvents(de =>
                                            {

                                                de.Click.ExtraParams.Add(new { auditProgramId = Model.ID });
                                                de.Click.Url = Url.Action("ChoiceObject", "AuditEmployee");

                                            }),
                                   Html.X().ToolbarSeparator(),
                                    Html.X().ButtonUpdate()
                                            .ID("btnUpdateObject")
                                            .Disabled(false)
                                            .Handler("updateRecord();"),
                                    Html.X().ToolbarSeparator(),
                                    Html.X().ButtonDelete()
                                            .ID("btnDeleteObject")
                                                 .Disabled(false)
                                               .Handler("this.up('grid').deleteSelected();")                

                                )
                             )
                    .Store(Html.X().Store()
                            .ID("stMnObject")
                            .Proxy(Html.X().AjaxProxy()
                                .Url(Url.Action("GetData", "AuditEmployee"))
                            .Reader(Html.X().JsonReader().Root("data"))
                            )
                            .Parameters(ps => ps.Add(new StoreParameter("auditProgramId", Model.ID.ToString(), ParameterMode.Value)))
                            .RemoteSort(true)
                            .AutoLoad(true)
                            .RemotePaging(true)
                            .PageSize(20)
                            .Model(
                            Html.X().Model()
                                    .Fields(

                                        Html.X().ModelField().Name("ID").Type(ModelFieldType.Int),
                                        Html.X().ModelField().Name("AuditID").Type(ModelFieldType.Int),
                                        Html.X().ModelField().Name("EmployeeName").Type(ModelFieldType.String),
                                        Html.X().ModelField().Name("FileID").Type(ModelFieldType.Auto),
                                        Html.X().ModelField().Name("FileName").Type(ModelFieldType.String),
                                        Html.X().ModelField().Name("Email").Type(ModelFieldType.String),
                                        Html.X().ModelField().Name("EmployeeID").Type(ModelFieldType.Int),
                                        Html.X().ModelField().Name("IsAuditor").Type(ModelFieldType.Boolean),
                                        Html.X().ModelField().Name("IsCaptain").Type(ModelFieldType.Boolean),
                                        Html.X().ModelField().Name("Phone").Type(ModelFieldType.String),
                                        Html.X().ModelField().Name("Role").Type(ModelFieldType.String),
                                        Html.X().ModelField().Name("ObjectType").Type(ModelFieldType.String),
                                        Html.X().ModelField().Name("Type").Type(ModelFieldType.Boolean)
                                    )
                                  )
                              )
                        .ColumnModel(
                            Html.X().RowNumbererColumn()
                                    .Text("STT")
                                    .StyleSpec("font-weight: bold; text-align: center;")
                                    .Align(Alignment.Center)
                                    .Width(33),
                            Html.X().Column()
                                    .Text("ID")
                                    .DataIndex("ID")
                                    .Hidden(true),
                                        Html.X().Column()
                                            .Text("EmployeeID")
                                            .DataIndex("EmployeeID")
                                        .Hidden(true),
                                         Html.X().TemplateColumn().DataIndex("FileID").Width(31).Tpl(
                              Html.X().XTemplate().Html(@<text>
                            <img id="{FileID}" src="@Url.Action("LoadImage", "File", new { area = "Generic" })?fileId={FileID}&fileName={FileName}"
                                 style='width:30px;height:40px;margin: -3px -6px -5.5px -6px;' />
                        </text>)
                        ),
                            Html.X().Column()
                                    .Text("Họ tên")
                                    .StyleSpec("font-weight: bold;text-align: center")
                                    .DataIndex("EmployeeName")
                                    .Width(130)
                                    .Wrap(true),
                               Html.X().Column()
                                        .Text("Chức vụ")
                                        .StyleSpec("font-weight: bold;text-align: center")
                                            .DataIndex("Role")
                                            .Flex(1)
                                       .Width(100)
                                        .Wrap(true),
                                             Html.X().Column()
                                            .Text("Số điện thoại")
                                            .StyleSpec("font-weight: bold;text-align: center")
                                                .DataIndex("Phone")
                                           .Width(100)
                                            .Wrap(true),
                                                 Html.X().Column()
                                            .Text("Email")
                                            .StyleSpec("font-weight: bold;text-align: center")
                                                .DataIndex("Email")
                                           .Width(130)
                                            .Wrap(true),
                                                   Html.X().CheckColumn()
                                                .Text("Trưởng nhóm")
                                                .StyleSpec("font-weight: bold;text-align: center")
                                                        .DataIndex("IsCaptain")
                                               .Width(100)
                                                .Wrap(true),
                                                     Html.X().CheckColumn()
                                                    .Text("Thành viên")
                                                    .StyleSpec("font-weight: bold;text-align: center")
                                                            .DataIndex("IsAuditor")
                                                   .Width(100)
                                                    .Wrap(true)                                                     
                                                          
                    ).SelectionModel(
                        Html.X().RowSelectionModel()
                                .Mode(SelectionMode.Multi)
                                .Listeners(l =>
                                {
                                    l.Select.Handler = "checkStatus()";
                                })
                                )
                                .View(
                                Html.X().GridView().MarkDirty(false)
                                )
                                .Plugins(Html.X().CellEditing())
                                .BottomBar
                                (
                                             Html.X().CustomPagingToolbar()
                         )
                  
                    
                    )
                    )
                    )
                       
            
            )
            .Buttons(
            Html.X().ButtonSave()
            .ID("btnxSaves")
            .DirectEvents(de =>
            {             
                de.Click.Before = @"if (!App.frAuditProgram.getForm().isValid()) { return false; } ";      
                de.Click.Action = "Update";
                de.Click.ExtraParams.Add(new { listISOIndex = new JRawValue("getIsoIndexEdit()") });
                de.Click.ExtraParams.Add(new { listDepartmentId = new JRawValue("App.hdflistDepartmentId.value") });
                de.Click.ExtraParams.Add(new { listDepartmentRemoveId = new JRawValue("App.hdflistDepartmentRemoveId.value") });
                de.Click.ExtraParams.Add(new { arrObject = new JRawValue("getObjectPartialEdit()") });
                de.Click.FormID = "frAuditProgram";
                de.Click.Success = "if(result.result){this.up('window').close();}";
            }),           
            Html.X().ButtonExit()
            )
)
<script type="text/javascript">
      var getObjectPartialEdit = function () {
        var arr = new Array();
        for (var i = 0; i < App.stMnObject.data.length; i++) {
            arr.push(App.stMnObject.data.items[i].data);
        }
        return JSON.stringify(arr);
    };
    var getIsoIndexEdit = function () {
        var arr = new Array();
        for (var i = 0; i < App.StoreStandard.data.length; i++) {
            if (App.StoreStandard.data.items[i].data.IsSelected) {
                arr.push(App.StoreStandard.data.items[i].data.ID);
            }
        }
        return JSON.stringify(arr);
    };
    var selectDepartmentEdit = function (editor, e) {
        if (!(e.value === e.originalValue || (Ext.isDate(e.value) && Ext.Date.isEqual(e.value, e.originalValue)))) {
            var str = "";
            var strRemove = "";
            if (App.hdflistDepartmentId.value != null) str = App.hdflistDepartmentId.value.toString();
            if (App.hdflistDepartmentRemoveId.value != null) strRemove = App.hdflistDepartmentRemoveId.value.toString();
            if (e.value) {
                str += e.record.data.id.toString() + ',';
            } else {
                var strSearchValue = e.record.data.id.toString() + ',';
                str = str.replace(strSearchValue, '');
                strRemove += e.record.data.id.toString() + ',';
            };
            App.hdflistDepartmentId.setValue(str);
            App.hdflistDepartmentRemoveId.setValue(strRemove);

        };
    };
    function onSelectEmployee(records) {
        if (records.length == 1) {
            App.nameApproval.setValue(records[0].get('Name'));
            App.hdfEmployeeApproveId.setValue(records[0].get('ID'));
            App.avatarApproval.setImageUrl(records[0].get('Avatar'));
            var RoleName = records[0].get('Role');
            if (RoleName == null) {
                RoleName = "N/A";
            };
            var DepartmentName = records[0].get('DepartmentName');
            if (DepartmentName == null) {
                DepartmentName = "N/A";
            };
            App.displayApproval.setValue("Đơn vị: " + DepartmentName + "</br> Chức danh: " + RoleName);
        }
        else {
            Ext.Msg.alert("", "Bạn chưa lựa chọn bản ghi nào!");
        };

    };
    var updateRecord = function () {
        var record = App.grMnObject.selModel.getSelection();
        if (record.length > 0) {
            var id = record[0].get('ID');
            Ext.net.DirectMethod.request({
                url: '@(Url.Action("ShowFrmUpdate", "AuditEmployee", new { Area = "Quality" }, null))',
                params: { id: id }
            });
        }
    };
</script>