@using Ext.Net.MVC
@using Ext.Net
@using iDAS.Utilities
@using iDAS.Web.ExtExtend
@model iDAS.Items.QualityAuditProgramItem
@{
    var auditPlanId = ViewData["auditPlanId"].ToString();
}
@(Html.X().Window()
          .ID("winNewAuditProgram")
          .Title("Thêm mới chương trình đánh giá")
          .Icon(Icon.Add)
          .Height(470)
          .Width(700)
          .Maximizable(true)
          .BodyPadding(0)
          .Constrain(true)
          .Modal(true)
          .Layout(LayoutType.Fit)
          .Items(
        Html.X().FormPanel()
                .ID("frAuditProgram")
                .Layout(LayoutType.VBox)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                .Frame(true)
                .StyleSpec("border: none;")
                .FieldDefaults(d => d.LabelAlign = LabelAlign.Left)
                .Items(
        Html.X().TabPanel()
                .Region(Region.Center)
                .ActiveTabIndex(0)
                .Border(true)
                .Flex(1)
                .Layout(LayoutType.Fit)
                .Items(
                 Html.X().Panel()
                        .BodyPadding(6)
                        .Icon(Icon.ApplicationViewDetail)
                        .Layout(LayoutType.VBox)
                        .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                        .StyleSpec("border: none;")
                        .Title("Nội dung chương trình")
                        .Frame(true)
                        .Items(
                Html.X().TextFieldFor(m => m.Name)
                        .FieldLabel("Tên chương trình" + Html.Required())
                        .LabelWidth(120)
                        .MaxLength(100)
                        .AllowBlank(false)
                        .BlankText("Tên chương trình không được trống!")
                        .AllowOnlyWhitespace(false),
                Html.X().Container()
                        .Layout(LayoutType.Column)
                        .ColSpan(2)
                        .MarginSpec("0 0 5 0")
                        .Items(
                            Html.X().DateTimeFieldFor(m => m.StartTime)
                                    .FieldLabel("Bắt đầu" + Html.Required()).AllowBlank(false).LabelWidth(120)
                                    .ColumnWidth(0.55).MarginSpec("0 5 0 0"),
                            Html.X().DateTimeFieldFor(m => m.EndTime).AllowBlank(false).LabelWidth(70)
                                    .FieldLabel("Kết thúc" + Html.Required())
                                    .ColumnWidth(0.45)
                                    ),
                            Html.X().TextAreaFor(m => m.Content)
                                    .FieldLabel("Nội dung")
                                    .Flex(1)
                                    .LabelWidth(120),
                            Html.X().TextFieldFor(m => m.Address)
                                    .FieldLabel("Địa điểm")
                                          .MaxLength(200)
                                    .LabelWidth(120),
                            Html.X().TextAreaFor(m => m.Note)
                                    .FieldLabel("Ghi chú")
                                    .LabelWidth(120),
                Html.X().EmployeeFieldFor(m => m.Approval).AllowBlank(false)
                        .MarginSpec("-2 0 0 125")
                        .Title("Người phê duyệt" + Html.Required())
                        ),
                Html.X().Panel()
                        .Icon(Icon.UserTick)
                        .Height(380)
                        .Border(false)
                        .BodyPadding(0)
                        .Margin(0)
                        .Flex(1)
                        .Padding(0)
                        .AutoScroll(true)
                        .Title("Yêu cầu được đánh giá")
                        .Layout(LayoutType.Fit)
                        .Items(
                Html.X().GridPanel()
                        .ID("grStandard")
                        .Header(false)
                        .Title("Lựa chọn điều khoản đánh giá")
                        .Region(Region.Center)
                        .Split(true)
                        .Border(false)
                        .Margin(0)
                        .TitleAlign(TitleAlign.Center)
                        .Layout(LayoutType.Fit)
                        .ForceFit(true)
                        .ColumnLines(true)
                        .RowLines(true)
                        .Store(
                    Html.X().Store()
                        .ID("StoreStandard")
                        .AutoLoad(true)
                        .Proxy(Html.X().AjaxProxy()
                            .Url(Url.Action("GetDataISOIndex", "AuditProgram", new { area = "Quality" }))
                            .Reader(Html.X().JsonReader()
                            .Root("data"))
                            )
                         .Parameters(ps =>
                            {
                                ps.Add(new StoreParameter("isoId", "App.grQualityAuditPlan.selModel.getSelection().length > 0 ? App.grQualityAuditPlan.getSelectionModel().getLastSelected().data.ISOID:0", ParameterMode.Raw));
                            })
                        .Model(
                            Html.X().Model()
                            .Fields(
                                Html.X().ModelField().Name("ID"),
                                Html.X().ModelField().Name("Name"),
                                Html.X().ModelField().Name("ListModuleName").Type(ModelFieldType.String),
                                Html.X().ModelField().Name("Clause"),
                                Html.X().ModelField().Name("IsSelected").Type(ModelFieldType.Boolean)
                             )
                            )
            )
            .ColumnModel(
                Html.X().RowNumbererColumn().Text("STT").Width(30).Align(Alignment.Center),
                Html.X().Column()
                        .Text("Điều")
                        .StyleSpec("font-weight: bold; text-align: center;")
                        .Align(Alignment.Left)
                        .DataIndex("Clause")
                        .Width(110),
                Html.X().Column()
                        .Text("Yêu cầu tiêu chuẩn")
                        .StyleSpec("font-weight: bold; text-align: center;")
                        .Align(Alignment.Left)
                        .DataIndex("Name")
                        .Flex(1),
                   Html.X().Column()
                        .Text("Module tham chiếu")
                        .StyleSpec("font-weight: bold; text-align: center;")
                        .DataIndex("ListModuleName")
                        .Width(170)
                        .Align(Alignment.Left),
                                 Html.X().CheckColumn().DataIndex("IsSelected")
                                                .Text("Chọn").Align(Alignment.Center).Editable(true)
                                                .Width(60)
                                                     )
                                                
                        .View(
                        Html.X().GridView().MarkDirty(false)
                        )
                        .Plugins(Html.X().CellEditing())
                        ),
                        Html.X().Panel()
                        .Icon(Icon.House)
                        .Border(false)
                              .BodyPadding(0)
                                .Margin(0)
                                .Padding(0)
                        .AutoScroll(true)
                        .Title("Phòng ban tham gia")
                        .Layout(LayoutType.Fit)
                        .Items(
                      Html.X().Hidden().ID("hdflistDepartmentId"),
                      Html.X().TreePanel()
                                    .Title("SƠ ĐỒ TỔ CHỨC")
                                    .Header(false)
                                    .BodyPadding(0)
                                    .MarginSpec("1 0 0 0")
                                    .Padding(0)
                                    .TitleAlign(TitleAlign.Center)
                                    .Layout(LayoutType.Fit)
                                    .Icon(Icon.TextListBullets)
                                    .ForceFit(true)
                                    .RootVisible(false)
                                    .RowLines(true)
                                         .Root(Html.X().Node().NodeID("0"))
                                    .SingleExpand(false)
                                    .Border(false)
                                    .Region(Region.West)
                                    .SelectionModel(
                                            Html.X().RowSelectionModel()
                                            .Mode(SelectionMode.Multi)
                                    )
                                    .TopBar(
                                            Html.X().Toolbar()
                                                    .Items(
                                                        Html.X().Button()
                                                        .Text("Mở rộng")
                                                        .Icon(Icon.ControlAddBlue)
                                                        .Handler("this.up('treepanel').expandAll();"),
                                                        Html.X().ToolbarSeparator(),
                                                        Html.X().Button()
                                                        .Text("Thu gọn")
                                                                .Icon(Icon.ControlRemoveBlue)
                                                        .Handler("this.up('treepanel').collapseAll();")
                                                                    )
                                                            )
                                    .Store(
                                        Html.X().TreeStore()
                                        .ID("stDepartmetChoice")
                                             .Parameters(ps =>
                                                    {
                                                        ps.Add(new StoreParameter("auditProgramId", "0", ParameterMode.Value));
                                                    }
                                                )
                                                .Proxy(Html.X().AjaxProxy().Url(Url.Action("LoadDepartments", "AuditDepartment", new { Area = "Quality" }, null)).Reader(Html.X().JsonReader().Root("data")))
                                        .Model(
                                            Html.X().Model().Fields(
                                            Html.X().ModelField().Name("id"),
                                            Html.X().ModelField().Name("text"),
                                            Html.X().ModelField().Name("ParentID"),
                                            Html.X().ModelField().Name("IsActive").Type(ModelFieldType.Boolean),
                                            Html.X().ModelField().Name("IsDeleted").Type(ModelFieldType.Boolean),
                                            Html.X().ModelField().Name("IsSelected").Type(ModelFieldType.Boolean),
                                            Html.X().ModelField().Name("IsCancel").Type(ModelFieldType.Boolean)
                                            )

                                        )
                                    )
                                    .ColumnModel(
                                        Html.X().TreeColumn()
                                            .Text("SƠ ĐỒ TỔ CHỨC")
                                            .StyleSpec("font-weight: bold; text-align: center;")
                                            .Align(Alignment.Left)
                                            .DataIndex("text")
                                            .Flex(1),
                                                Html.X().CheckColumn().DataIndex("IsSelected")
                                                                       .Text("Chọn").Align(Alignment.Center).Editable(true)
                                                                       .Editor(
                                                                               Html.X().Checkbox()
                                                                                   ).Width(60)
                                        )
                                            .Plugins(
                                                Html.X().RowEditing()
                                                .SaveBtnText("Cập nhật")
                                                .CancelBtnText("Hủy bỏ")
                                                    .Listeners(l =>
                                                    {
                                                        l.Edit.Fn = "selectDepartment";
                                                        l.CancelEdit.Handler = "if(e.record.phantom){e.store.remove(e.record);}";
                                                    })
                                            )
                                        .HideHeaders(true)
                             ),
                    Html.X().Panel()
                        .Icon(Icon.UserTick)
                        .Border(false)
                        .BodyPadding(0)
                    .Margin(0)
                    .Padding(0)
                        .AutoScroll(true)
                        .Title("Thành phần tham gia")
                        .Layout(LayoutType.Fit)
                        .ItemsFromAction("FormListObject", "AuditProgram")
                     )
                )
            )
            .Buttons(
            Html.X().ButtonSave()
            .ID("btnSave")
            .DirectEvents(de =>
            {
                de.Click.ExtraParams.Add(new { val = false });
                de.Click.ExtraParams.Add(new { AuditPlanID = auditPlanId });
                de.Click.ExtraParams.Add(new { listISOIndex = new JRawValue("getIsoIndex()") });
                de.Click.ExtraParams.Add(new { listDepartmentId = new JRawValue("App.hdflistDepartmentId.value") });
                de.Click.ExtraParams.Add(new { arrObject = new JRawValue("getObjectPartial()") });
                de.Click.Before = @"if (!App.frAuditProgram.getForm().isValid()) { return false; } ";
                de.Click.Action = "Insert";
                de.Click.FormID = "frAuditProgram";
            }),
            Html.X().ButtonSaveAndExit()
            .ID("btnSaves")
            .DirectEvents(de =>
            {
                de.Click.ExtraParams.Add(new { val = true });
                de.Click.ExtraParams.Add(new { AuditPlanID = auditPlanId });
                de.Click.ExtraParams.Add(new { listISOIndex = new JRawValue("getIsoIndex()") });
                de.Click.ExtraParams.Add(new { listDepartmentId = new JRawValue("App.hdflistDepartmentId.value") });
                de.Click.ExtraParams.Add(new { arrObject = new JRawValue("getObjectPartial()") });
                de.Click.Before = @"if (!App.frAuditProgram.getForm().isValid()) { return false; } ";
                de.Click.Action = "Insert";
                de.Click.FormID = "frAuditProgram";
            }),
            Html.X().ButtonReset()
            .ID("btnReset")
            .Handler("App.frAuditProgram.reset();"),
            Html.X().ButtonExit()
            )
)
<script type="text/javascript">
    var getObjectPartial = function () {
        var arr = new Array();
        for (var i = 0; i < App.stM.data.length; i++) {
            arr.push(App.stM.data.items[i].data);
        }
        return JSON.stringify(arr);
    };
    var getIsoIndex = function () {
        var arr = new Array();
        for (var i = 0; i < App.StoreStandard.data.length; i++) {
            if (App.StoreStandard.data.items[i].data.IsSelected) {
                arr.push(App.StoreStandard.data.items[i].data.ID);
            }
        }
        return JSON.stringify(arr);
    };
    var AvatarRenderer = function (value) {
        var tpl = "<img src='" + value + "' style='width:30px;height:30px;margin: -3px -6px -5.5px -6px;'/>";
        return tpl;
    };
    var selectDepartment = function (editor, e) {
        if (!(e.value === e.originalValue || (Ext.isDate(e.value) && Ext.Date.isEqual(e.value, e.originalValue)))) {
            var str = "";
            if (App.hdflistDepartmentId.value != null) str = App.hdflistDepartmentId.value.toString();
            if (e.value == true) {
                str += e.record.data.id.toString() + ',';
            } else {
                var strSearchValue = e.record.data.id.toString() + ',';
                str = str.replace(strSearchValue, '');
            };
            App.hdflistDepartmentId.setValue(str);
        };
    };
    function onSelectEmployee(records) {
        if (records.length == 1) {
            App.nameApproval.setValue(records[0].get('Name'));
            App.hdfEmployeeApproveId.setValue(records[0].get('ID'));
            App.avatarApproval.setImageUrl(records[0].get('Avatar'));
            var RoleName = records[0].get('Role');
            if (RoleName == null) {
                RoleName = "N/A";
            };
            var DepartmentName = records[0].get('DepartmentName');
            if (DepartmentName == null) {
                DepartmentName = "N/A";
            };
            App.displayApproval.setValue("Đơn vị: " + DepartmentName + "</br> Chức danh: " + RoleName);
        }
        else {
            Ext.Msg.alert("", "Bạn chưa lựa chọn bản ghi nào!");
        };

    };
    function onSelectEmployee(records) {
        if (records.length == 1) {
            App.nameApproval.setValue(records[0].get('Name'));
            App.hdfEmployeeApproveId.setValue(records[0].get('ID'));
            App.avatarApproval.setImageUrl(records[0].get('Avatar'));
            var RoleName = records[0].get('Role');
            if (RoleName == null) {
                RoleName = "N/A";
            };
            var DepartmentName = records[0].get('DepartmentName');
            if (DepartmentName == null) {
                DepartmentName = "N/A";
            };
            App.displayApproval.setValue("Đơn vị: " + DepartmentName + "</br> Chức danh: " + RoleName);
        }
        else {
            Ext.Msg.alert("", "Bạn chưa lựa chọn bản ghi nào!");
        };
    };
</script>