@using Ext.Net.MVC
@using Ext.Net
@using iDAS.Utilities
@using iDAS.Web.ExtExtend;
@model iDAS.Web.Areas.Timekeeping.Models.TimekeeperDTO
@(Html.X().Window()
    .ID("winNewTimekeeper")
    .Title("Thêm mới máy chấm công")
    .Icon(Icon.Add)
    .Height(185)
    .Width(380)
    .BodyPadding(6)
    .Constrain(true)
    .Modal(true)
    .Layout(LayoutType.Fit)
    .Items(
        Html.X().FormPanel()
            .ID("frmTimekeeper")
            .Layout(LayoutType.Form)
            .Frame(true)
            .StyleSpec("border: none;")
            .FieldDefaults(d => d.LabelAlign = LabelAlign.Left)
            .Items(
                Html.X().TextFieldFor(m => m.Name)
                    .FieldLabel("Tên máy" + Html.Required())
                    .ID("txtName")
                    .AllowBlank(false)
                    .LabelWidth(100)
                    .BlankText("Tên máy không được để rỗng!")
                    .AllowOnlyWhitespace(false)
                    .MaxLength(50),
                Html.X().TextFieldFor(m => m.IP)
                    .FieldLabel("IP máy" + Html.Required())
                    .ID("txtIP")
                    .AllowBlank(false)
                    .LabelWidth(100)
                    .BlankText("IP máy không được để rỗng!")
                    .AllowOnlyWhitespace(false)
                    .MaxLength(20),
                Html.X().NumberFieldFor(m => m.Post)
                    .LabelWidth(100)
                    .FieldLabel("Cổng kết nối" + Html.Required())
                    .ID("txtPost")
                    .AllowBlank(false)
                    .BlankText("Cổng kết nối không được để rỗng!")
                    .AllowOnlyWhitespace(false),
                Html.X().TextFieldFor(m => m.Serial)
                    .FieldLabel("Serial máy" )
                    .ID("txtSerial")
                    .LabelWidth(100)
                    .MaxLength(50)
                )
            )
            .Buttons(
                Html.X().ButtonSave()
                    .ID("btnSave")
                    .DirectEvents(de =>
                    {
                        de.Click.ExtraParams.Add(new { val = false });
                        de.Click.Before = @"if (!App.frmTimekeeper.getForm().isValid()) { return false; } ";
                        de.Click.Action = "Insert";
                        de.Click.FormID = "frmTimekeeper";
                        de.Click.Success = "App.stTimekeeper.reload()";
                    }),
                Html.X().ButtonSaveAndExit()
                    .ID("btnSaves")
                    .DirectEvents(de =>
                    {
                        de.Click.ExtraParams.Add(new { val = true });
                        de.Click.Before = @"if (!App.frmTimekeeper.getForm().isValid()) { return false; } ";
                        de.Click.Action = "Insert";
                        de.Click.FormID = "frmTimekeeper";
                        de.Click.Success = "this.up('window').close();";
                    }),
                Html.X().ButtonExit()
            )
)
<script type="text/javascript">
    
</script>