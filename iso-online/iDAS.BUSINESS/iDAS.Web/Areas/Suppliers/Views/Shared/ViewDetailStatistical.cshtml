@using Ext.Net;
@using Ext.Net.MVC;
@using iDAS.Web.ExtExtend;
@{
    var X = Html.X();
    var windowID = "StatisticalProfile";
    var StoreParamProfile = ViewData["StoreParamProfileStatiscal"] as StoreParameter;
}
@(Html.X().Window()
            .ID(windowID)
            .Title("Danh sách nhà cung cấp đánh giá")
            .StyleSpec("-webkit-border-radius:0")
            .Icon(Icon.ApplicationSideList)
            .Height(1)
            .Maximized(true)
            .Constrain(true)
            .Layout(LayoutType.Border)
            .Modal(true)
            .Resizable(false)
            .Margin(0)
            .BodyPadding(0)
            .Border(true)
            .Items(
        Html.X().GridPanel()
                .Header(true)
                .Region(Region.West)
                .Width(350)
                .Split(true)
                .Title("Kế hoạch đánh giá NCC")
                .ID("grRequirment")
                .Border(true)
                .MarginSpec("1 0 1 1")
                .TitleAlign(TitleAlign.Center)
                .Layout(LayoutType.Fit)
                .Collapsible(true)
                .ForceFit(true)
                .ColumnLines(true)
                .RowLines(true)                
                .Store(Html.X().Store()
                                .ID("stMnRequirment")
                            .Proxy(Html.X().AjaxProxy()
                                .Url(ViewData["StoreUrlProfile"].ToString())
                            .Reader(Html.X().JsonReader().Root("data"))
                            )
                                .Parameters(ps =>
                                {
                                    ps.Add(StoreParamProfile);
                                    ps.Add(new { planID = ViewData["PlanID"] });
                                })
                            .RemoteSort(true)
                            .RemotePaging(true)
                            .PageSize(20)
                            .Model(
                            Html.X().Model()
                                    .Fields(
                                            Html.X().ModelField().Name("ID"),
                                    Html.X().ModelField().Name("Supplier.Name"),
                                        Html.X().ModelField().Name("SupplierID"),
                                            Html.X().ModelField().Name("IsPass")
                                    )
                                  )
                              )
                        .ColumnModel(
                            Html.X().RowNumbererColumn()
                                    .Text("STT")
                                    .StyleSpec("font-weight: bold; text-align: center;")
                                    .Align(Alignment.Center)
                                    .Width(33),
                            Html.X().Column()
                                    .Text("ID")
                                    .DataIndex("ID")
                                    .Hidden(true),
                                         Html.X().Column()
                                        .Text("SuppID")
                                                .DataIndex("SupplierID")
                                        .Hidden(true),
                            Html.X().Column()
                                    .Text("Tên nhà cung cấp")
                                    .StyleSpec("font-weight: bold;text-align: center")
                                                .DataIndex("Supplier.Name")
                                   .Flex(1)
                                    .Wrap(true),
                                        Html.X().CheckColumn().Text("Đạt").DataIndex("IsPass").Width(50)
                        ).Plugins(
                                        //Html.X().CellEditing().Listeners(ls => ls.Edit.Fn = "editSummary")
                                )
                    .SelectionModel(
                        Html.X().CheckboxSelectionModel()
                                .Mode(SelectionMode.Single)
                                .Listeners(l =>
                                {
                                    l.Select.Handler = "App.grMnPlanIndex.getStore().reload()";
                                })
                                )

                                  .View(
                                Html.X().GridView().MarkDirty(false)
                                )
                        .BottomBar
                                    (
                                 X.CustomPagingToolbar()


                        ),
                   Html.X().GridPanel()
                   .Region(Region.Center)
                    .Margin(1)
                    .Header(false)
                            .ID("grMnPlanIndex")
                                       
                    .ColumnLines(true)
                    .ForceFit(true)                    
                    .Store(
                    Html.X().Store()
                            .ID("StorePlanIndex11")
                            .RemotePaging(true)
                            .AutoLoad(false)
                                                .PageSize(20).GroupField("QualityCriteria1.CategoryName")
                                                .Sorters(Html.X().DataSorter().Property("QualityCriteria1.CategoryName").Direction(Ext.Net.SortDirection.ASC))
                                .Proxy(Html.X().AjaxProxy().Url(Url.Action("GetSuppAuditResult", "SuppliersAudit", new { Area = "Suppliers" }))
                            .Reader(Html.X().JsonReader().Root("data"))
                            .IDParam("ID"))
                            .Parameters(ps =>
                            {
                                ps.Add(new StoreParameter("supplierAuditID", "App.grRequirment.selModel.getSelection().length>0?App.grRequirment.selModel.getSelection()[0].get('ID'):0", ParameterMode.Raw));
                            })
                        .Model(
                            Html.X().Model().Fields(
                                Html.X().ModelField().Name("ID"),
                                    Html.X().ModelField().Name("QualityCriteria1.Name"),
                                Html.X().ModelField().Name("Point"),
                               // Html.X().ModelField().Name("MaxPoint"),
                                    Html.X().ModelField().Name("Factory"),
                                    Html.X().ModelField().Name("QualityCriteria1.CategoryName"),
                                    Html.X().ModelField().Name("QualityCriteria1.AvgPoint"),
                                Html.X().ModelField().Name("TotalPoint")
                                //Html.X().ModelField().Name("IsAccept"),
                                //Html.X().ModelField().Name("IsApproval"),
                                //Html.X().ModelField().Name("Status")
                            )
                         )
                )
                .ColumnModel(
                                X.RowNumbererColumn().Text("STT").Width(30).Align(Alignment.Center).StyleSpec("font-weight: bold;text-align: center"),
                                X.Column().DataIndex("QualityCriteria1.Name").Text("Tiêu chí").Flex(1).StyleSpec("font-weight: bold;text-align: center"),
                                X.Column().Text("Điểm").Align(Alignment.Right).DataIndex("Point"),
                                X.Column().DataIndex("Factory").Text("Hệ số").Width(50).StyleSpec("font-weight: bold;text-align: center"),
                                X.Column().DataIndex("TotalPoint").Text("Tổng điểm").Renderer("RenderTotal191").Width(100).StyleSpec("font-weight: bold;text-align: center"),
                                X.Column().DataIndex("QualityCriteria1.AvgPoint").Text("Đánh giá").Renderer("RenderRate191").Width(100).StyleSpec("font-weight: bold;text-align: center")       
                    )
                
                 .Features(
                                    Html.X().GroupingSummary()
                                    .ID("GroupingSummarySupplier")
                                    .GroupHeaderTplString("{name}")
                                    .HideGroupedHeader(true)
                                    .EnableGroupingMenu(false)
                            )
                       .Plugins(
                           // Html.X().CellEditing().Listeners(ls => ls.Edit.Fn = "editIndex")
                        )             
                .BottomBar(
                       X.CustomPagingToolbar()
            )


)
)
<script>
    var RenderTotal191 = function (value, p, record) {
        var value1 = record.get('Point') * record.get('Factory');
        if (value1 == null) {
            return "0";
        }
        return value1;
    };

    var RenderRate191 = function (value, p, record) {
        var value1 = record.get('TotalPoint') > record.get('QualityCriteria1.AvgPoint');
        if (value1) {
            return "<span style=\"color:green\">Đạt</span>";
        } else
            return "<span style=\"color:red\">Ko Đạt</span>";
    };
   
</script>




