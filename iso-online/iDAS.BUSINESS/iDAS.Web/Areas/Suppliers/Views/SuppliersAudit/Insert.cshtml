@using Ext.Net;
@using Ext.Net.MVC;
@using iDAS.Web.ExtExtend;
@using iDAS.Utilities
@model iDAS.Items.SupplierAuditItem
@{
    var X = Html.X();
}

@(Html.X().Window()
            .ID("frmAuditResult")
            .Title("Cập nhật đánh giá của nhà cung cấp")
                    .Layout(LayoutType.Border).Maximized(true)
        .Icon(Icon.Pencil)
        .BodyPadding(0)
        .Margin(0)
        .Constrain(true)
        .Modal(true)
        .Resizable(false)
        .Items(
            Html.X().HiddenFor(m => m.ID).ID("txtID"),
            Html.X().TreePanel()
                       .Region(Region.West)
                        .Width(350)
                            .Header(false).Title("Bộ tiêu chí đánh giá")
                            .ID("trCriteriaCategory").Layout(LayoutType.Fit)
                        .ColumnLines(true)
                        .ForceFit(true)
                            .Root(Html.X().Node().NodeID("0").Expanded(true)
                                    .CustomAttributes(ca => ca.Add(new ConfigItem { Name = "Name", Value = "Bộ tiêu chí đánh giá", Mode = ParameterMode.Value }))
                                    .CustomAttributes(ca => ca.Add(new ConfigItem { Name = "ParentID", Value = "0", Mode = ParameterMode.Value }))
                          )
                    .SingleExpand(false)
                        .Store(Html.X().TreeStore()
                            .ID("stCriteriaCategory")
                            .Proxy(Html.X().AjaxProxy()
                            .Url(Url.Action("GetData", "CriteriaCategory", new { area = "Quality" })))
                            .Model(
                            Html.X().Model()
                                    .Fields(
                                        Html.X().ModelField().Name("ID").Type(ModelFieldType.Int),
                                        Html.X().ModelField().Name("ParentID").Type(ModelFieldType.Int),
                                        Html.X().ModelField().Name("Name").Type(ModelFieldType.String),
                                        Html.X().ModelField().Name("IsUse").Type(ModelFieldType.Boolean),
                                        Html.X().ModelField().Name("IsDelete").Type(ModelFieldType.Boolean)
                                    )
                                  )
                              )
                        .HideHeaders(true)
                        .ColumnModel(
                            Html.X().TreeColumn()
                                .Align(Alignment.Left)
                                .DataIndex("Name")
                                .Flex(1)
                    )
                        .Listeners(ls => { ls.SelectionChange.Handler = "App.grAuditResult.getStore().reload();"; }),
        Html.X().GridPanel()
                       .Region(Region.Center)
                        .Margin(1)
                        .Header(false)
                        .ID("grAuditResult")

                        .ColumnLines(true)
                        .ForceFit(true)

                    .Store(
                        Html.X().Store()
                                .ID("StoreAditResult")
                                .RemotePaging(true)
                                .AutoLoad(false)
                                                    .PageSize(20).GroupField("QualityCriteria1.CategoryName")
                                                    .Sorters(Html.X().DataSorter().Property("QualityCriteria1.CategoryName").Direction(Ext.Net.SortDirection.ASC))
                                        .Proxy(Html.X().AjaxProxy().Url(Url.Action("GetQualityCriteria", "SuppliersAudit", new { Area = "Suppliers" }))
                                .Reader(Html.X().JsonReader().Root("data"))
                                .IDParam("ID"))
                                .Parameters(ps =>
                                {
                                    ps.Add(new StoreParameter("categoryID", "App.trCriteriaCategory.selModel.getSelection().length>0?App.trCriteriaCategory.selModel.getSelection()[0].get('ID'):0", ParameterMode.Raw));
                                    ps.Add(new StoreParameter("supplierAuditID", "App.txtID.getValue()", ParameterMode.Raw));
                                })
                            .Model(
                                Html.X().Model().Fields(
                                    Html.X().ModelField().Name("ID"),
                                        Html.X().ModelField().Name("QualityCriteria1.Name"),
                                    Html.X().ModelField().Name("Point"),
                                        Html.X().ModelField().Name("Factory"),
                                        Html.X().ModelField().Name("QualityCriteria1.CategoryName"),
                                    Html.X().ModelField().Name("TotalPoint")

                                )
                             )
                    )
                    .ColumnModel(
                                        Html.X().RowNumbererColumn().Text("STT").Width(30).Align(Alignment.Center).StyleSpec("font-weight: bold;text-align: center"),
                                        Html.X().Column().DataIndex("Index").Hidden(true),
                                                Html.X().Column().DataIndex("QualityCriteria1.Name").Text("Tiêu chí").Flex(1).StyleSpec("font-weight: bold;text-align: center"),
                                            Html.X().Column().Text("Điểm").Align(Alignment.Right).DataIndex("Point").Editor(Html.X().NumberField().MinValue(1).MaxValue(10)),
                                                Html.X().Column().DataIndex("Factory").Text("Hệ số").Width(50).StyleSpec("font-weight: bold;text-align: center"),
                                                  Html.X().Column().DataIndex("TotalPoint").Text("Tổng điểm").Width(100).Renderer("RenderTotal").StyleSpec("font-weight: bold;text-align: center")
                            )

                     .Features(
                                        Html.X().GroupingSummary()
                                        .ID("GroupingSummarySupplier")
                                        .GroupHeaderTplString("{name}")
                                        .HideGroupedHeader(true)
                                        .EnableGroupingMenu(false)
                                )
                    .Plugins(
                        Html.X().CellEditing().Listeners(ls => ls.Edit.Fn = "edit"))
                    .BottomBar(
                           Html.X().CustomPagingToolbar()
                )
                 )
.Buttons(
    Html.X().ButtonSave()
                    .DirectEvents(de =>
                                {
                                    de.Click.Url = Url.Action("AddResults");
                                    de.Click.FormID = "frmUpdate";
                                }),
X.ButtonExit()
    )
)



<script type="text/javascript">
    var RenderTotal = function (value, p, record) {
        var value1 = record.get('Point') * record.get('Factory');
        if (value1 == null) {
            return "0";
        }
        return value1;
    };
    var edit = function (editor, e) {
        if (!(e.value === e.originalValue || (Ext.isDate(e.value) && Ext.Date.isEqual(e.value, e.originalValue)))) {
            Ext.net.DirectMethod.request({
               url: '@(Url.Action("HandleChanges", "SuppliersAudit", new { Area = "Suppliers" }, null))',
                params: {
                    id: e.record.data.ID,
                    point: e.record.data.Point,
                    totalpoint: e.record.data.TotalPoint
                }
            });
        };
    };
</script>