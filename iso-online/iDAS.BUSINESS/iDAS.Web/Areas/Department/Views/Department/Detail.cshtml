@using Ext.Net
@using Ext.Net.MVC
@using iDAS.Web.ExtExtend
@model iDAS.Items.HumanDepartmentItem
@(Html.X().Window()
    .ID("DetailDepartmentWindow")
    .Title("Xem chi tiết thông tin tổ chức")
    .Icon(Icon.Zoom)
    .Width(600)
    .Height(350)
    .Maximizable(true)
    .Constrain(true)
    .BodyPadding(0)
    .Border(false)
    .Constrain(true)
    .Modal(true)
    .Layout(LayoutType.Fit)
    .Items(
        Html.X().FormPanel()
            .Layout(LayoutType.Fit)
            .Border(false)
            .StyleSpec("border: none;")
            .Items(
                Html.X().TabPanel().ActiveTabIndex(0).Border(true)
                    .Items(
                        Html.X().FormPanel()
                            .Layout(LayoutType.VBox)
                            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch }).Title("Thông tin")
                            .Frame(true)
                            .BodyPadding(5)
                            .StyleSpec("border: none;")
                            .FieldDefaults(d => d.LabelAlign = LabelAlign.Left)
                            .Items(
                                Html.X().TextFieldFor(m => m.Name).ReadOnly(true)
                                    .FieldLabel("Tên phòng ban")
                                    .TabIndex(1)
                                    .AllowBlank(false),
                                Html.X().TextFieldFor(m => m.Code).ReadOnly(true)
                                    .FieldLabel("Tên viết tắt")
                                    .TabIndex(2)
                                    .ColumnWidth(0.5),
                                Html.X().TextFieldFor(m => m.NameE).ReadOnly(true)
                                    .FieldLabel("Tên tiếng anh")
                                    .TabIndex(3)
                                    .ColumnWidth(0.5),
                                Html.X().TextFieldFor(m => m.Address).ReadOnly(true)
                                    .FieldLabel("Địa chỉ")
                                    .TabIndex(4),
                                Html.X().Container()
                                    .Layout(LayoutType.Column)
                                    .MarginSpec("-3 0 0 0")
                                    .Items(
                                        Html.X().Container()
                                            .ColumnWidth(0.5)
                                            .Layout(LayoutType.Form)
                                            .Items(
                                                Html.X().TextFieldFor(m => m.Email).ReadOnly(true)
                                                    .FieldLabel("Email")
                                                    .ColumnWidth(0.5)
                                                    .TabIndex(5),
                                                Html.X().TextFieldFor(m => m.Fax).ReadOnly(true)
                                                    .FieldLabel("Fax")
                                                    .ColumnWidth(0.5)
                                                    .TabIndex(6),
                                                Html.X().TextFieldFor(m => m.Website).ReadOnly(true)
                                                    .ColumnWidth(0.5)
                                                    .FieldLabel("Website")
                                                    .TabIndex(7)
                                            ),
                                        Html.X().Container()
                                            .ColumnWidth(0.5)
                                            .Layout(LayoutType.Form)
                                            .MarginSpec("0 0 0 5")
                                            .Items(
                                                Html.X().TextFieldFor(m => m.Phone).ReadOnly(true)
                                                    .FieldLabel("Điện thoại")
                                                    .ColumnWidth(0.5)
                                                    .TabIndex(8),
                                                Html.X().TextFieldFor(m => m.Tax).ReadOnly(true)
                                                    .FieldLabel("Tax")
                                                    .ColumnWidth(0.5)
                                                    .TabIndex(9),
                                                Html.X().DateFieldFor(m => m.EstablishedDate).ReadOnly(true)
                                                    .FieldLabel("Ngày thành lập")
                                                    .ColumnWidth(0.5)
                                                    .TabIndex(10)
                                                    .Format("dd/MM/yyyy")
                                            ),
                                        Html.X().Checkbox().ID("IsDeactive").FieldLabel("Tình trạng").BoxLabel("Dừng hoạt động").ColumnWidth(1).ReadOnly(true)
                                            .Listeners(ls => ls.BoxReady.Handler = "deactiveDepartmentDefault()"),    
                                        Html.X().CheckboxFor(m => m.IsActive).ID("IsActive").MarginSpec("0 0 5 0").BoxLabel("Hoạt động").FieldLabel(" ").LabelSeparator("").ColumnWidth(0.5).ReadOnly(true),
                                        Html.X().CheckboxFor(m => m.IsCancel).ID("IsCancel").BoxLabel("Giải thể").HideLabel(true).ColumnWidth(0.25).ReadOnly(true),
                                        Html.X().CheckboxFor(m => m.IsMerge).ID("IsMerge").BoxLabel("Sát nhập").HideLabel(true).ColumnWidth(0.25).ReadOnly(true)
                                    )
                                ),
                                Html.X().Panel()
                                    .Layout(LayoutType.VBox)
                                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                                    .Title("Chức năng")
                                    .Frame(true)
                                    .StyleSpec("border: none;")
                                    .Items(Html.X().TextAreaFor(m => m.Resposibility).ReadOnly(true).Flex(1).HideLabel(true)),
                                Html.X().Panel()
                                    .Layout(LayoutType.VBox)
                                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                                    .Title("Nhiệm vụ")
                                    .Frame(true)
                                    .StyleSpec("border: none;")
                                    .Items(Html.X().TextAreaFor(m => m.Authorize).ReadOnly(true).HideLabel(true).Flex(1)),
                                Html.X().Panel()
                                    .Layout(LayoutType.VBox)
                                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                                    .Title("Lịch sử phát triển")
                                    .Frame(true)
                                    .StyleSpec("border: none;")
                                    .Items(Html.X().TextAreaFor(m => m.History).ReadOnly(true).HideLabel(true).Flex(1)),
                                Html.X().Panel()
                                    .Layout(LayoutType.Fit)
                                    .Title("Chức danh")
                                    .Frame(true)
                                    .StyleSpec("border: none;")
                                    .Items(
                                        Html.X().Hidden().ID("ViewDeleteRole").Value(false),
                                        Html.X().Hidden().ID("SortRole").Value(true),
                                        Html.X().GridPanel()
                                            .ID("DepartTitlePanel")
                                            .Header(false)
                                            .ColumnLines(true)
                                            .Border(false)
                                            .ForceFit(true)
                                            .Collapsible(true)
                                            .Split(true)
                                            .Icon(Icon.TextListBullets)
                                            .Store(Html.X().Store()
                                                .ID("stDepartmentTitle")
                                                .Proxy(Html.X().AjaxProxy().Url(Url.Action("LoadData", "DepartmentTitle")).Reader(Html.X().JsonReader().Root("data")))
                                                .Parameters(ps =>
                                                {
                                                    ps.Add(new StoreParameter("departmentID", Model.ID.ToString(), ParameterMode.Value));
                                                    ps.Add(new StoreParameter("viewDelete", "App.ViewDeleteRole.value", ParameterMode.Raw));
                                                })
                                                .Model(
                                                    Html.X().Model()
                                                        .Fields(
                                                            Html.X().ModelField().Name("ID").Type(ModelFieldType.Int),
                                                            Html.X().ModelField().Name("TitleName").Type(ModelFieldType.String),
                                                            Html.X().ModelField().Name("ReportToName").Type(ModelFieldType.String)
                                                        )
                                                )
                                            )
                                            .SortableColumns(false)
                                            .ColumnModel(
                                                Html.X().RowNumbererColumn().Text("STT").Width(33).Align(Alignment.Center),
                                                Html.X().Column().Text("ID").DataIndex("ID").Hidden(true).Width(40),
                                                Html.X().Column().DataIndex("TitleName").Text("Tên chức danh").Flex(1).MenuDisabled(true),
                                                Html.X().Column().DataIndex("ReportToName").Text("Báo cáo tới").Flex(1).MenuDisabled(true)
                                            )
                                    )
                            )
                )
        )
        .Buttons(Html.X().ButtonExit())
)
<script>
    var deactiveDepartmentDefault = function () {
        var isActive = App.IsActive.value;
        var isCancel = App.IsCancel.value;
        var isMerge = App.IsMerge.value;
        App.IsDeactive.setValue(!isActive && !isCancel && !isMerge);
    };
</script>