@using Ext.Net;
@using Ext.Net.MVC;
@using iDAS.Web;
@using iDAS.Utilities
@using iDAS.Web.ExtExtend
@model iDAS.Items.ProductDevelopmentRequirementPlanItem
@{
    var X = Html.X();
    var requirmentId = ViewData["requirmentId"] != null ? ViewData["requirmentId"].ToString() : "0";
}
@(Html.X().Window()
          .ID("winDetailPlan")
          .Title("Xem chi tiết kế hoạch phát triển sản phẩm")
          .Icon(Icon.Zoom)
               .Width(700)
                .Height(450)
        .Layout(LayoutType.Fit)
        .Constrain(true)
        .Modal(true)
        .BodyPadding(6)
             .Border(true)
          .Items(

        Html.X().FormPanel()
                .ID("frmDetailPlan")
                             .Layout(LayoutType.VBox)
                                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                        .Frame(true)
                        .StyleSpec("border: none;")
                        .FieldDefaults(d => d.LabelAlign = LabelAlign.Left)
                .Items(
                    Html.X().HiddenFor(m => m.ID).ReadOnly(true),
                                         Html.X().HiddenFor(m => m.ProductDevelopmentRequirementID).ReadOnly(true).ID("hdfProductDevelopmentRequirementID"),
                            X.TextFieldFor(m => m.Name).EmptyText("Nhập tên kế hoạch ...").ReadOnly(true).FieldLabel("Kế hoạch" + Html.Required()).AllowBlank(false),
                        Html.X().Container().Layout(LayoutType.Column).MarginSpec("0 -2 2 0")
                            .Items(
                                        Html.X().DateTimeFieldFor(m => m.StartTime).ReadOnly(true).FieldLabel("Bắt đầu" + Html.Required()).AllowBlank(false).ColumnWidth(0.55),
                                                Html.X().DateTimeFieldFor(m => m.EndTime).ReadOnly(true).FieldLabel("Kết thúc" + Html.Required()).AllowBlank(false).LabelWidth(75).ColumnWidth(0.45).MarginSpec("0 0 0 5")
                                ),

                        X.Container().Layout(LayoutType.Column).MarginSpec("2 -1 4 0")
                            .Items(
                                    X.ComboBoxFor(m => m.Type).FieldLabel("Loại kế hoạch" + Html.Required()).ReadOnly(true)
                                        .EmptyText("Chọn loại kế hoạch")
                                        .Items(new ListItem("Tổ chức", false),
                                                new ListItem("Cá nhân", true))
                                        .AllowBlank(false).ColumnWidth(0.55),
                                    X.NumberFieldFor(m => m.Cost).AllowBlank(false).ReadOnly(true)
                                        .LabelWidth(76).ColumnWidth(0.45).MinValue(0)
                                            .FieldLabel("Chi phí").MarginSpec("0 0 0 5")
                            ),
                                    X.DepartmentFieldFor(m => m.Department).ReadOnly(true).FieldLabel("Phòng ban" + Html.Required()).AllowBlank(false).Height(25),
                            X.ComboBoxFor(m => m.TargetID).FieldLabel("Thuộc mục tiêu").EmptyText("Chọn mục tiêu ...").ReadOnly(true)
                            .ID("cbxTarget")
                            .QueryMode(DataLoadMode.Local).Editable(false)
                            .ForceSelection(true)
                            .DisplayField("TargetName")
                            .ValueField("ID")
                            .Store(Html.X().Store()
                                        .AutoLoad(true)
                                        .Model(Html.X().Model()
                                                .IDProperty("ID")
                                                .Fields(new ModelField("ID", ModelFieldType.Int) { Mapping = "ID" },
                                                        new ModelField("TargetName", ModelFieldType.String) { Mapping = "TargetName" }))
                                        .Proxy(Html.X().AjaxProxy()
                                                .Url(Url.Action("LoadTargetStore", "Plan", new { area = "Quality" }))
                                                .Reader(Html.X().JsonReader().Root("data")))),
                            
                            
                            X.ComboBoxFor(m => m.ParentID).FieldLabel("Thuộc kế hoạch").EmptyText("Chọn kế hoạch ...").ReadOnly(true)
                            .ID("cbxParentPlan")
                            .QueryMode(DataLoadMode.Local).Editable(false)
                            .ForceSelection(true)
                            .DisplayField("Name")
                            .ValueField("ID")
                            .Store(Html.X().Store()
                                            .AutoLoad(true)
                                            .Model(Html.X().Model()
                                                    .IDProperty("ID")
                                                    .Fields(new ModelField("ID", ModelFieldType.Int) { Mapping = "ID" },
                                                            new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }))
                                            .Proxy(Html.X().AjaxProxy()
                                                        .Url(Url.Action("LoadParentPlanStore", "Plan", new { area = "Quality" }))
                                                        .Reader(Html.X().JsonReader().Root("data")))),                            
                            X.TextAreaFor(m => m.Content).FieldLabel("Nội dung").ReadOnly(true).EmptyText("Nhập nội dung kế hoạch").ID("contentParent").MinHeight(100).Flex(1),
                              Html.X().EmployeeFieldFor(m => m.Approval).ReadOnly(true).MarginSpec("-2 0 0 105").Title("Người phê duyệt" + Html.Required()).ID("approvalParent"))
                )
        .Buttons(
                Html.X().ButtonExit()
        )
)
