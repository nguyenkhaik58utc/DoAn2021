@using Ext.Net;
@using Ext.Net.MVC;
@using iDAS.Web;
@using iDAS.Web.ExtExtend;
@using iDAS.Utilities
@model iDAS.Items.CustomerContractItem
@{
    var X = Html.X();
    bool IsSignCustomer = Model.IsSignCustomer == true;
}
@(Html.X().Window()
.Title("Chi tiết hợp đồng").ID("winContractDetail")
.Icon(Icon.Zoom)
.Maximized(true)
.Height(100)
.Width(800)
.Margin(0)
.Constrain(true)
.Layout(LayoutType.Fit)
.Border(false)
.Modal(true)
.Resizable(false)
.Items(
X.TabPanel()
    .ActiveTabIndex(0)
    .Border(true)
    .Items(
        X.FormPanel()
            .Title("Thông tin hợp đồng").ID("frmDetail")
                .Layout(LayoutType.VBox)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                .AutoScroll(true)
                .Frame(true)
                .StyleSpec("border: none;")
                .FieldDefaults(df => { df.LabelAlign = LabelAlign.Left; df.LabelWidth = 120; })
                .Items(
                    X.HiddenFor(m => m.ID).ID("hdfContractID"), X.HiddenFor(m => m.CustomerID).ID("hdfCustomerID"),
                    X.TextFieldFor(m => m.CustomerName).FieldLabel("Khách hàng").ReadOnly(true).MarginSpec("5 8 0 8"),
                    X.Container().Layout(LayoutType.Column).MarginSpec("5 8 0 8")
                        .Items(
                                X.TextFieldFor(m => m.Code)
                                        .FieldLabel("Mã hợp đồng" + Html.Required()).ReadOnly(true)
                                        .EmptyText("Nhập mã hợp đồng...")
                                        .BlankText("Mã hợp đồng không được bỏ trống!")
                                        .AllowOnlyWhitespace(false).MarginSpec("0 8 0 0")
                                        .ColumnWidth(0.35),
                                X.TextFieldFor(m => m.Name).ReadOnly(true)
                                        .FieldLabel("Hợp đồng" + Html.Required())
                                        .EmptyText("Nhập hợp đồng...")
                                        .BlankText("Hợp đồng không được bỏ trống!")
                                        .AllowOnlyWhitespace(false)
                                        .MarginSpec("0 0 0 15")
                                        .ColumnWidth(0.65)
                                ),
                    X.Container().Layout(LayoutType.Column).MarginSpec("5 8 0 8")
                            .Items(X.DateTimeFieldFor(m => m.StatTime).FieldLabel("Bắt đầu").ReadOnly(true)
                                            .ColumnWidth(0.5).MarginSpec("0 8 0 0"),
                                    X.DateTimeFieldFor(m => m.EndTime).FieldLabel("Kết thúc").ReadOnly(true)
                                            .ColumnWidth(0.5)
                            ),
                    X.Container().Layout(LayoutType.Column).MarginSpec("5 8 0 8")
                        .Items(
                                X.NumberFieldFor(m => m.Total).FieldLabel("Tổng giá trị")
                                    .ColumnWidth(0.5).MarginSpec("0 8 0 0")
                                        .Icon(Icon.Money).MinValue(0).ReadOnly(true),
                                X.NumberFieldFor(m => m.TotalOrder).FieldLabel("Giá trị đơn hàng")
                                    .ColumnWidth(0.5)
                                    .Icon(Icon.Money).MinValue(0).ReadOnly(true) 
                        ),
                    Html.X().FileUploadFieldFor(m => m.AttachmentFiles).ReadOnly(true).Layout(LayoutType.Column).MarginSpec("5 8 0 8"),     
                    X.FieldSet().Layout(LayoutType.Column).MarginSpec("5 8 0 8").Title("Phản hồi của khách hàng")
                            .Items(
                                    X.CheckboxFor(m => m.IsSignCustomer).BoxLabel("Xác nhận").ReadOnly(true)
                                        .FieldLabel("Ký hợp đồng").ColumnWidth(0.5),
                                    X.DateFieldFor(m => m.SignCustomerAt).FieldLabel("Thời gian ký").ReadOnly(true)
                                        .ID("tffSignCustomerAt").ColumnWidth(0.5),
                                    X.CheckboxFor(m => m.IsCancel).ColumnWidth(0.5).BoxLabel("Xác nhận")
                                        .FieldLabel("Hủy hợp đồng").ReadOnly(true),
                                    X.TextAreaFor(m => m.CancelNote)
                                        .ReadOnly(true)    
                                        .FieldLabel("Lý do hủy hợp đồng")
                                        .LabelAlign(LabelAlign.Top)
                                        .EmptyText("Nhập lý do hủy hợp đồng...")
                                        .MinHeight(80)
                                        .ColumnWidth(0.5)
                                        .MarginSpec("0 0 5 0")
                            ),
                    X.TextAreaFor(m => m.Content).Flex(1)
                                        .ReadOnly(true)
                                        .LabelAlign(LabelAlign.Top)
                                        .LabelStyle("font-weight: bold;")
                                        .FieldLabel("Nội dung")
                                        .EmptyText("Nhập nội dung...")
                                        .MinHeight(100)
                                        .ColumnWidth(0.5).MarginSpec("5 8 5 8")
        ),
        Html.X().GridPanel().Layout(LayoutType.Fit)
                    .Title("Đơn hàng")
                    .ID("GrCustomerOrder")
                    .Height(300)
                    .Header(false)
                    .ColumnLines(true)
                    .ForceFit(true)
                    .Border(false)
                    .Store(
                        Html.X().Store().ID("StoreCustomerOrder")
                            .RemotePaging(true)
                            .PageSize(20)
                            .Proxy(Html.X().AjaxProxy().Url(Url.Action("LoadOrder", "CustomerManagementContract", new { Area = "Customer" })).Reader(Html.X().JsonReader().Root("data")).IDParam("ID"))
                            .Parameters(ps =>
                                        {
                                            ps.Add(new StoreParameter("customerId", "App.hdfCustomerID.getValue()", ParameterMode.Raw));
                                            ps.Add(new StoreParameter("contractId", "App.hdfContractID.getValue()", ParameterMode.Raw));
                                        })
                            .Model(
                                Html.X().Model().Fields(
                                    Html.X().ModelField().Name("ID"),
                                    Html.X().ModelField().Name("ProductName"),
                                    Html.X().ModelField().Name("Quantity"),
                                    Html.X().ModelField().Name("Time")
                                )
                            )
                            )
                    .ColumnModel(
                            X.RowNumbererColumn().Text("STT").Width(30).Align(Alignment.Center),
                            X.Column().DataIndex("ProductName").Text("Sản phẩm").Flex(1),
                            X.NumberColumn().DataIndex("Quantity").Text("Số lượng").Width(80).Align(Alignment.Right),
                            X.DateColumnExtend().DataIndex("Time").Text("Thời gian").Width(100).Align(Alignment.Center)
                        )
                    .BottomBar(Html.X().CustomPagingToolbar())
    )
)
.Buttons(
        //iuHtml.X().Button().Text("Xuất hợp đồng").Icon(Icon.PackageDown).Handler("ExportWord();"),
            Html.X().ButtonExportWordFile().FormID("frmDetail"),
    Html.X().Button().Text("Đóng").Icon(Icon.Cancel).TabIndex(15).OnClientClick("this.up('window').close();")
)
)
<script type="text/javascript">
    var ExportWord = function () {
        var url = '@(Url.Action("ExportData"))';        
        onDirectMethod(url);
    };
</script>