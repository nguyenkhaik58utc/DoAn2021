@using Ext.Net;
@using Ext.Net.MVC;
@using iDAS.Web.ExtExtend;
@model iDAS.Web.Areas.Human.Models.GroupCheckBoxBO
@{
    var X = Html.X();
    //Layout = "~/Views/Shared/_Layout.cshtml";
    var formId = X.GetComponentID();


    var Name = ViewData["Name"].ToString();
    var BirthDayFrom = ViewData["BirthDayFrom"].ToString();
    var BirthDayTo = ViewData["BirthDayTo"].ToString();
    var Native = ViewData["Native"].ToString();
    var Religion = ViewData["Religion"].ToString();
    var Ethnic = ViewData["Ethnic"].ToString();
    var PlaceOfWork = ViewData["PlaceOfWork"].ToString();
    var Position = ViewData["Position"].ToString();
    var DepartmentName = ViewData["DepartmentName"].ToString();
    var EduName = ViewData["EduName"].ToString();
    var EducationType = ViewData["EducationType"].ToString();
    var EducationResult = ViewData["EducationResult"].ToString();
    var DiplomaName = ViewData["DiplomaName"].ToString();
    var Major = ViewData["Major"].ToString();
    var DiplomaEducationType = ViewData["DiplomaEducationType"].ToString();
    var DiplomaEducationOrg = ViewData["DiplomaEducationOrg"].ToString();
    var DiplomaEducationLevel = ViewData["DiplomaEducationLevel"].ToString();
    var DiplomaCertificateLevel = ViewData["DiplomaCertificateLevel"].ToString();
    var NameOfCertificate = ViewData["NameOfCertificate"].ToString();
    var CertificateLevel1 = ViewData["CertificateLevel1"].ToString();
    var CertificateType = ViewData["CertificateType"].ToString();
    var Number = ViewData["Number"].ToString();
    var reason = ViewData["reason"].ToString();
    var Reward = ViewData["Reward"].ToString();

}
@(Html.X().Window()
.ID("winProfile12")
.Title("Thông tin hồ sơ nhân sự")
.Icon(Icon.UserBrown)
.Maximized(true)
.Height(1)
.BodyPadding(0)
.Margin(0)
.Constrain(true)
.Layout(LayoutType.Border)
.Border(false)
.Modal(true)
.Resizable(false)
.Layout(LayoutType.Fit).Border(false).Margin(0).Frame(false)
.Items(
    X.FormPanel()
    .ID(formId)
    .Layout(LayoutType.Form)
    .Frame(true)
    .AutoScroll(true)
    .StyleSpec("border: none;")
    //.Padding(1)
    .Items(

            X.Container().ID("cntProfileHumanDetail12")
            .Items(
                X.FieldSet().Border(true).Title("Thông tin chung")
                .Items(
                     X.HiddenFor(m=>m.groupCV[0].FieldLabel),
                     X.HiddenFor(m=>m.groupCV[1].FieldLabel),X.HiddenFor(m=>m.groupCV[2].FieldLabel),
                     X.HiddenFor(m=>m.groupCV[3].FieldLabel),X.HiddenFor(m=>m.groupCV[4].FieldLabel),
                     X.HiddenFor(m=>m.groupCV[5].FieldLabel),
                     X.HiddenFor(m=>m.groupCV[6].FieldLabel),
                     X.HiddenFor(m=>m.groupCV[7].FieldLabel),X.HiddenFor(m=>m.groupCV[8].FieldLabel),
                     X.HiddenFor(m=>m.groupCV[9].FieldLabel),X.HiddenFor(m=>m.groupCV[10].FieldLabel),X.HiddenFor(m=>m.groupCV[11].FieldLabel),
                     X.HiddenFor(m=>m.groupCV[12].FieldLabel),X.HiddenFor(m=>m.groupCV[13].FieldLabel),X.HiddenFor(m=>m.groupCV[14].FieldLabel),
                     X.HiddenFor(m=>m.groupCV[15].FieldLabel),X.HiddenFor(m=>m.groupCV[16].FieldLabel),X.HiddenFor(m=>m.groupCV[17].FieldLabel),
                     X.HiddenFor(m=>m.groupCV[18].FieldLabel),X.HiddenFor(m=>m.groupCV[19].FieldLabel),X.HiddenFor(m=>m.groupCV[20].FieldLabel),

                     X.HiddenFor(m=>m.groupCV[0].Title), X.HiddenFor(m=>m.groupCV[1].Title),X.HiddenFor(m=>m.groupCV[2].Title),
                     X.HiddenFor(m=>m.groupCV[3].Title),X.HiddenFor(m=>m.groupCV[4].Title),X.HiddenFor(m=>m.groupCV[5].Title),
                     X.HiddenFor(m=>m.groupCV[6].Title),X.HiddenFor(m=>m.groupCV[7].Title),X.HiddenFor(m=>m.groupCV[8].Title),
                     X.HiddenFor(m=>m.groupCV[9].Title),X.HiddenFor(m=>m.groupCV[10].Title),X.HiddenFor(m=>m.groupCV[11].Title),
                     X.HiddenFor(m=>m.groupCV[12].Title),X.HiddenFor(m=>m.groupCV[13].Title),X.HiddenFor(m=>m.groupCV[14].Title),
                     X.HiddenFor(m=>m.groupCV[15].Title),X.HiddenFor(m=>m.groupCV[16].Title),X.HiddenFor(m=>m.groupCV[17].Title),
                     X.HiddenFor(m=>m.groupCV[18].Title),X.HiddenFor(m=>m.groupCV[19].Title),X.HiddenFor(m=>m.groupCV[20].Title),
                     X.CheckboxGroup()
                        .ID("CheckboxGroup1")
                        .ColumnsNumber(6)
                        .Cls("x-check-group-alt")
                        .StyleSpec("border: none;")
                        .Items(
                            X.Checkbox().ID("allCV").BoxLabel("Tất cả")
                                .Listeners(ls=> ls.Change.Handler = "changeAll();"),
                            X.CheckboxFor(m => m.groupCV[0].FieldValue).ID(Model.groupCV[0].FieldLabel).BoxLabel(Model.groupCV[0].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupCV[1].FieldValue).ID(Model.groupCV[1].FieldLabel).BoxLabel(Model.groupCV[1].Title).HideLabel(true).Checked(true).Selectable(false),
                            X.CheckboxFor(m => m.groupCV[2].FieldValue).ID(Model.groupCV[2].FieldLabel).BoxLabel(Model.groupCV[2].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupCV[3].FieldValue).ID(Model.groupCV[3].FieldLabel).BoxLabel(Model.groupCV[3].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupCV[4].FieldValue).ID(Model.groupCV[4].FieldLabel).BoxLabel(Model.groupCV[4].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupCV[5].FieldValue).ID(Model.groupCV[5].FieldLabel).BoxLabel(Model.groupCV[5].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupCV[6].FieldValue).ID(Model.groupCV[6].FieldLabel).BoxLabel(Model.groupCV[6].Title).HideLabel(true),
                             X.CheckboxFor(m => m.groupCV[7].FieldValue).ID(Model.groupCV[7].FieldLabel).BoxLabel(Model.groupCV[7].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupCV[8].FieldValue).ID(Model.groupCV[8].FieldLabel).BoxLabel(Model.groupCV[8].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupCV[9].FieldValue).ID(Model.groupCV[9].FieldLabel).BoxLabel(Model.groupCV[9].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupCV[10].FieldValue).ID(Model.groupCV[10].FieldLabel).BoxLabel(Model.groupCV[10].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupCV[11].FieldValue).ID(Model.groupCV[11].FieldLabel).BoxLabel(Model.groupCV[11].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupCV[12].FieldValue).ID(Model.groupCV[12].FieldLabel).BoxLabel(Model.groupCV[12].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupCV[13].FieldValue).ID(Model.groupCV[13].FieldLabel).BoxLabel(Model.groupCV[13].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupCV[14].FieldValue).ID(Model.groupCV[14].FieldLabel).BoxLabel(Model.groupCV[14].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupCV[15].FieldValue).ID(Model.groupCV[15].FieldLabel).BoxLabel(Model.groupCV[15].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupCV[16].FieldValue).ID(Model.groupCV[16].FieldLabel).BoxLabel(Model.groupCV[16].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupCV[17].FieldValue).ID(Model.groupCV[17].FieldLabel).BoxLabel(Model.groupCV[17].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupCV[18].FieldValue).ID(Model.groupCV[18].FieldLabel).BoxLabel(Model.groupCV[18].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupCV[19].FieldValue).ID(Model.groupCV[19].FieldLabel).BoxLabel(Model.groupCV[19].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupCV[20].FieldValue).ID(Model.groupCV[20].FieldLabel).BoxLabel(Model.groupCV[20].Title).HideLabel(true)
                        )
                    )

                ),
                X.FieldSet().Title("Lý lịch chính trị").Border(true)
                .Items(
                     X.HiddenFor(m=>m.groupPolitic[0].FieldLabel), X.HiddenFor(m=>m.groupPolitic[1].FieldLabel),X.HiddenFor(m=>m.groupPolitic[2].FieldLabel),
                     X.HiddenFor(m=>m.groupPolitic[3].FieldLabel),X.HiddenFor(m=>m.groupPolitic[4].FieldLabel),X.HiddenFor(m=>m.groupPolitic[5].FieldLabel),
                     X.HiddenFor(m=>m.groupPolitic[6].FieldLabel),X.HiddenFor(m=>m.groupPolitic[7].FieldLabel),X.HiddenFor(m=>m.groupPolitic[8].FieldLabel),
                     X.HiddenFor(m=>m.groupPolitic[9].FieldLabel),X.HiddenFor(m=>m.groupPolitic[10].FieldLabel),X.HiddenFor(m=>m.groupPolitic[11].FieldLabel),
                     X.HiddenFor(m=>m.groupPolitic[12].FieldLabel),

                     X.HiddenFor(m=>m.groupPolitic[0].Title), X.HiddenFor(m=>m.groupPolitic[1].Title),X.HiddenFor(m=>m.groupPolitic[2].Title),
                     X.HiddenFor(m=>m.groupPolitic[3].Title),X.HiddenFor(m=>m.groupPolitic[4].Title),X.HiddenFor(m=>m.groupPolitic[5].Title),
                     X.HiddenFor(m=>m.groupPolitic[6].Title),X.HiddenFor(m=>m.groupPolitic[7].Title),X.HiddenFor(m=>m.groupPolitic[8].Title),
                     X.HiddenFor(m=>m.groupPolitic[9].Title),X.HiddenFor(m=>m.groupPolitic[10].Title),
                     X.HiddenFor(m=>m.groupPolitic[11].Title),
                      X.HiddenFor(m=>m.groupPolitic[12].Title),
                     X.CheckboxGroup()
                        .ID("CheckboxGroup2")
                        .ColumnsNumber(6)
                        .Cls("x-check-group-alt")
                        .StyleSpec("border: none;")
                        .Items(
                            X.Checkbox().ID("allPolitic").BoxLabel("Tất cả")
                                .Listeners(ls=> ls.Change.Handler = "changeAll2();"),
                            X.CheckboxFor(m => m.groupPolitic[0].FieldValue).ID(Model.groupPolitic[0].FieldLabel).BoxLabel(Model.groupPolitic[0].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupPolitic[1].FieldValue).ID(Model.groupPolitic[1].FieldLabel).BoxLabel(Model.groupPolitic[1].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupPolitic[2].FieldValue).ID(Model.groupPolitic[2].FieldLabel).BoxLabel(Model.groupPolitic[2].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupPolitic[3].FieldValue).ID(Model.groupPolitic[3].FieldLabel).BoxLabel(Model.groupPolitic[3].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupPolitic[4].FieldValue).ID(Model.groupPolitic[4].FieldLabel).BoxLabel(Model.groupPolitic[4].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupPolitic[5].FieldValue).ID(Model.groupPolitic[5].FieldLabel).BoxLabel(Model.groupPolitic[5].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupPolitic[6].FieldValue).ID(Model.groupPolitic[6].FieldLabel).BoxLabel(Model.groupPolitic[6].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupPolitic[7].FieldValue).ID(Model.groupPolitic[7].FieldLabel).BoxLabel(Model.groupPolitic[7].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupPolitic[8].FieldValue).ID(Model.groupPolitic[8].FieldLabel).BoxLabel(Model.groupPolitic[8].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupPolitic[9].FieldValue).ID(Model.groupPolitic[9].FieldLabel).BoxLabel(Model.groupPolitic[9].Title).HideLabel(true),
                            X.CheckboxFor(m => m.groupPolitic[10].FieldValue).ID(Model.groupPolitic[10].FieldLabel).BoxLabel(Model.groupPolitic[10].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupPolitic[11].FieldValue).ID(Model.groupPolitic[11].FieldLabel).BoxLabel(Model.groupPolitic[11].Title).HideLabel(true),
                         X.CheckboxFor(m => m.groupPolitic[12].FieldValue).ID(Model.groupPolitic[12].FieldLabel).BoxLabel(Model.groupPolitic[12].Title).HideLabel(true)
                        )
                ),
            X.FieldSet().Title("Quá trình công tác").Border(true)
            .Items(
                    X.HiddenFor(m=>m.groupWorkExp[0].FieldLabel), X.HiddenFor(m=>m.groupWorkExp[1].FieldLabel),X.HiddenFor(m=>m.groupWorkExp[2].FieldLabel),
                    X.HiddenFor(m=>m.groupWorkExp[3].FieldLabel),X.HiddenFor(m=>m.groupWorkExp[4].FieldLabel),X.HiddenFor(m=>m.groupWorkExp[5].FieldLabel),

                    X.HiddenFor(m=>m.groupWorkExp[0].Title), X.HiddenFor(m=>m.groupWorkExp[1].Title),X.HiddenFor(m=>m.groupWorkExp[2].Title),
                    X.HiddenFor(m=>m.groupWorkExp[3].Title),X.HiddenFor(m=>m.groupWorkExp[4].Title),X.HiddenFor(m=>m.groupWorkExp[5].Title),
                    X.CheckboxGroup()
                    .ID("CheckboxGroup3")
                    .ColumnsNumber(6)
                    .Cls("x-check-group-alt")
                    .StyleSpec("border: none;")
                    .Items(
                        X.Checkbox().ID("allWorkExp").BoxLabel("Tất cả")
                            .Listeners(ls=> ls.Change.Handler = "changeAll3();"),
                        X.CheckboxFor(m => m.groupWorkExp[0].FieldValue).ID(Model.groupWorkExp[0].FieldLabel).BoxLabel(Model.groupWorkExp[0].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupWorkExp[1].FieldValue).ID(Model.groupWorkExp[1].FieldLabel).BoxLabel(Model.groupWorkExp[1].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupWorkExp[2].FieldValue).ID(Model.groupWorkExp[2].FieldLabel).BoxLabel(Model.groupWorkExp[2].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupWorkExp[3].FieldValue).ID(Model.groupWorkExp[3].FieldLabel).BoxLabel(Model.groupWorkExp[3].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupWorkExp[4].FieldValue).ID(Model.groupWorkExp[4].FieldLabel).BoxLabel(Model.groupWorkExp[4].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupWorkExp[5].FieldValue).ID(Model.groupWorkExp[5].FieldLabel).BoxLabel(Model.groupWorkExp[5].Title).HideLabel(true)
                        )
                ),
            X.FieldSet().Title("Quá trình đào tạo").Border(true)
            .Items(
                    X.HiddenFor(m=>m.groupTraining[0].FieldLabel), X.HiddenFor(m=>m.groupTraining[1].FieldLabel),X.HiddenFor(m=>m.groupTraining[2].FieldLabel),
                    X.HiddenFor(m=>m.groupTraining[3].FieldLabel),X.HiddenFor(m=>m.groupTraining[4].FieldLabel),

                    X.HiddenFor(m=>m.groupTraining[0].Title), X.HiddenFor(m=>m.groupTraining[1].Title),X.HiddenFor(m=>m.groupTraining[2].Title),
                    X.HiddenFor(m=>m.groupTraining[3].Title),X.HiddenFor(m=>m.groupTraining[4].Title),
                    X.CheckboxGroup()
                    .ID("CheckboxGroup4")
                    .ColumnsNumber(6)
                    .Cls("x-check-group-alt")
                    .StyleSpec("border: none;")
                    .Items(
                        X.Checkbox().ID("allTraining").BoxLabel("Tất cả")
                            .Listeners(ls=> ls.Change.Handler = "changeAll4();"),
                        X.CheckboxFor(m => m.groupTraining[0].FieldValue).BoxLabel(Model.groupTraining[0].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupTraining[1].FieldValue).BoxLabel(Model.groupTraining[1].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupTraining[2].FieldValue).BoxLabel(Model.groupTraining[2].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupTraining[3].FieldValue).BoxLabel(Model.groupTraining[3].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupTraining[4].FieldValue).BoxLabel(Model.groupTraining[4].Title).HideLabel(true)
                        )
                ),

            X.FieldSet().Title("Văn bằng").Border(true)
            .Items(
                    X.HiddenFor(m=>m.groupDiploma[0].FieldLabel), X.HiddenFor(m=>m.groupDiploma[1].FieldLabel),X.HiddenFor(m=>m.groupDiploma[2].FieldLabel),
                    X.HiddenFor(m=>m.groupDiploma[3].FieldLabel),X.HiddenFor(m=>m.groupDiploma[4].FieldLabel),

                    X.HiddenFor(m=>m.groupDiploma[0].Title), X.HiddenFor(m=>m.groupDiploma[1].Title),X.HiddenFor(m=>m.groupDiploma[2].Title),
                    X.HiddenFor(m=>m.groupDiploma[3].Title),X.HiddenFor(m=>m.groupDiploma[4].Title),
                    X.CheckboxGroup()
                    .ID("CheckboxGroup5")
                    .ColumnsNumber(6)
                    .Cls("x-check-group-alt")
                    .StyleSpec("border: none;")
                    .Items(
                        X.Checkbox().ID("allDiploma").BoxLabel("Tất cả")
                            .Listeners(ls=> ls.Change.Handler = "changeAll5();"),
                        X.CheckboxFor(m => m.groupDiploma[0].FieldValue).BoxLabel(Model.groupDiploma[0].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupDiploma[1].FieldValue).BoxLabel(Model.groupDiploma[1].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupDiploma[2].FieldValue).BoxLabel(Model.groupDiploma[2].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupDiploma[3].FieldValue).BoxLabel(Model.groupDiploma[3].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupDiploma[4].FieldValue).BoxLabel(Model.groupDiploma[4].Title).HideLabel(true)
                        )
                ),
            X.FieldSet().Title("Chứng chỉ").Border(true)
            .Items(
                    X.HiddenFor(m=>m.groupCertificate[0].FieldLabel), X.HiddenFor(m=>m.groupCertificate[1].FieldLabel),X.HiddenFor(m=>m.groupCertificate[2].FieldLabel),
                    X.HiddenFor(m=>m.groupCertificate[3].FieldLabel),X.HiddenFor(m=>m.groupCertificate[4].FieldLabel),X.HiddenFor(m=>m.groupCertificate[5].FieldLabel),

                    X.HiddenFor(m=>m.groupCertificate[0].Title), X.HiddenFor(m=>m.groupCertificate[1].Title),X.HiddenFor(m=>m.groupCertificate[2].Title),
                    X.HiddenFor(m=>m.groupCertificate[3].Title),X.HiddenFor(m=>m.groupCertificate[4].Title),X.HiddenFor(m=>m.groupCertificate[5].Title),
                    X.CheckboxGroup()
                    .ID("CheckboxGroup6")
                    .ColumnsNumber(6)
                    .Cls("x-check-group-alt")
                    .StyleSpec("border: none;")
                    .Items(
                        X.Checkbox().ID("allCertificate").BoxLabel("Tất cả")
                            .Listeners(ls=> ls.Change.Handler = "changeAll6();"),
                        X.CheckboxFor(m => m.groupCertificate[0].FieldValue).BoxLabel(Model.groupCertificate[0].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupCertificate[1].FieldValue).BoxLabel(Model.groupCertificate[1].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupCertificate[2].FieldValue).BoxLabel(Model.groupCertificate[2].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupCertificate[3].FieldValue).BoxLabel(Model.groupCertificate[3].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupCertificate[4].FieldValue).BoxLabel(Model.groupCertificate[4].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupCertificate[5].FieldValue).BoxLabel(Model.groupCertificate[5].Title).HideLabel(true)
                        )
                ),
            X.FieldSet().Title("Khen thưởng").Border(true)
            .Items(
                    X.HiddenFor(m=>m.groupReward[0].FieldLabel), X.HiddenFor(m=>m.groupReward[1].FieldLabel),X.HiddenFor(m=>m.groupReward[2].FieldLabel),
                    X.HiddenFor(m=>m.groupReward[3].FieldLabel),

                    X.HiddenFor(m=>m.groupReward[0].Title), X.HiddenFor(m=>m.groupReward[1].Title),X.HiddenFor(m=>m.groupReward[2].Title),
                    X.HiddenFor(m=>m.groupReward[3].Title),
                    X.CheckboxGroup()
                    .ID("CheckboxGroup7")
                    .ColumnsNumber(6)
                    .Cls("x-check-group-alt")
                    .StyleSpec("border: none;")
                    .Items(
                        X.Checkbox().ID("allReward").BoxLabel("Tất cả")
                            .Listeners(ls=> ls.Change.Handler = "changeAll7();"),
                        X.CheckboxFor(m => m.groupReward[0].FieldValue).BoxLabel(Model.groupReward[0].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupReward[1].FieldValue).BoxLabel(Model.groupReward[1].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupReward[2].FieldValue).BoxLabel(Model.groupReward[2].Title).HideLabel(true),
                        X.CheckboxFor(m => m.groupReward[3].FieldValue).BoxLabel(Model.groupReward[3].Title).HideLabel(true)
                        )
                )
        )
    )

 .Buttons(
    X.Button().Text("Xuất excel").Icon(Icon.PageExcel)
        .DirectEvents(de =>
        {
            //de.Click.Before = "beforeButton1Click.call(this, extraParams);";
            //de.Click.ExtraParams.Add(new { id = new JRawValue("this.up('grid').selModel.getSelection()[0].data.Id") });
            //de.Click.ExtraParams.Add(new { data = new JRawValue("getInfo()") });
            de.Click.FormID = formId;
            de.Click.Before = "this.up('window').mask('Đang thực hiện ....')";
            de.Click.Url = Url.Action("ExportExcelProfile", "V3_EmployeeExport", new { area = "Human", Name = Name, BirthDayFrom= BirthDayFrom, BirthDayTo = BirthDayTo, Native = Native,
                Religion = Religion,
                Ethnic = Ethnic,
                PlaceOfWork = PlaceOfWork,
                Position = Position,
                DepartmentName = DepartmentName,
                EduName,
                EducationType,
                EducationResult,
                DiplomaName,
                Major,
                DiplomaEducationType,
                DiplomaEducationOrg,
                DiplomaEducationLevel,
                DiplomaCertificateLevel,
                NameOfCertificate,
                CertificateLevel1,
                CertificateType,
                Number,
                reason,
                Reward,
            });
            de.Click.Success = "exportExcel123(); this.up('window').unmask();";
        }),//.Handler("exportExcel123()"),
    X.ButtonExit())
)

<script>
    var changeAll = function () {
        for (var i = 0; i < App.CheckboxGroup1.items.length; i++) {
                App.CheckboxGroup1.items.items[i].setValue(App.allCV.checked);
        }
        if (App.CheckboxGroup1.items.items.length > 0)
            App.CheckboxGroup1.items.items[2].setValue(true)
    };

    var changeAll2 = function () {
        for (var i = 0; i < App.CheckboxGroup2.items.length; i++) {
            App.CheckboxGroup2.items.items[i].setValue(App.allPolitic.checked);
        }
    };

    var changeAll3 = function () {
        for (var i = 0; i < App.CheckboxGroup3.items.length; i++) {
            App.CheckboxGroup3.items.items[i].setValue(App.allWorkExp.checked);
        }
    };

    var changeAll4 = function () {
        for (var i = 0; i < App.CheckboxGroup4.items.length; i++) {
            App.CheckboxGroup4.items.items[i].setValue(App.allTraining.checked);
        }
    };
    var changeAll5 = function () {
        for (var i = 0; i < App.CheckboxGroup5.items.length; i++) {
            App.CheckboxGroup5.items.items[i].setValue(App.allDiploma.checked);
        }
    };
    var changeAll6 = function () {
        for (var i = 0; i < App.CheckboxGroup6.items.length; i++) {
            App.CheckboxGroup6.items.items[i].setValue(App.allCertificate.checked);
        }
    };
    var changeAll7 = function () {
        for (var i = 0; i < App.CheckboxGroup7.items.length; i++) {
            App.CheckboxGroup7.items.items[i].setValue(App.allReward.checked);
        }
    };

   var exportExcel123 = function () {
       var url = "@Url.Action("DownloadProfile", "V3_EmployeeExport", new { area = "Human" })";
       window.open(url);
    };
</script>