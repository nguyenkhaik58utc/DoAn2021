@using Ext.Net;
@using Ext.Net.MVC;
@using iDAS.Web;
@using iDAS.Web.ExtExtend;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var X = Html.X();
}

<script type="text/javascript">
    var urlCreateReligion = '@(Url.Action("Create", "V3_Religion", new { area = "Human" }))';
    var urlUpdateReligion = '@(Url.Action("Update", "V3_Religion", new { area = "Human" }))';
    var urlDeleteReligion = '@(Url.Action("Delete", "V3_Religion", new { Area = "Human" }))';
    var urlDetailReligion = '@(Url.Action("ShowFrmDetail", "V3_Religion", new { Area = "Human" }))';
    var sortReligionIndex = null;
    var showCreateReligion = function () {
        var url = urlCreateReligion;
        var params = {};
        onDirectMethod(url, params, 'get');
    };

    var showUpdateReligion = function () {
        var url = urlUpdateReligion;
        var record = getReligionSelection();
        var ID = record == null ? 0 : record.data.ID;
        var params = { ID: ID };
        onDirectMethod(url, params, 'get');
    };

    var getReligionSelection = function () {
        var records = App.ReligionPanel.selModel.getSelection();
        if (records != null || records.length > 0)
            return records[0];
        else
            return null;
    };
    var setReligionSelection = function () {
        if (sortReligionIndex != null) {
            App.ReligionPanel.selModel.select(sortReligionIndex);
        }
    };

    var showDeleteReligion = function () {
        var url = urlDeleteReligion;
        var deleteSuccess = function (result) {
            if (result) {
                Ext.MessageBox.show({
                    title: 'Xác nhận', msg: 'Bạn có muốn xóa bỏ tôn giáo này hay không?',
                    buttons: { yes: 'Đồng ý', no: 'Không' },
                    iconCls: '#Information',
                    fn: function (btn) {
                        if (btn == 'yes') {
                            var record = getReligionSelection();
                            var ReligionId = record == null ? 0 : record.data.ID;
                            var params = { ID: ReligionId };
                            onDirectMethod(url, params, 'post', reloadReligion);
                        }
                    }
                });
            }
        };
        onDirectMethod(url, null, 'get', deleteSuccess);
    };
    var showDetailReligion = function () {
        var url = urlDetailReligion;
        var record = getReligionSelection();
        var ID = record == null ? 0 : record.data.ID;
        var params = { ID: ID };
        onDirectMethod(url, params, 'get');
    };

    var reloadReligion = function () {
        App.ReligionPanel.store.reload();
    };

    var selectionChangeReligion = function () {
        var record = getReligionSelection();
        var isDisabled = record == null;
        App.btnUpdateReligion.setDisabled(isDisabled);
        App.btnDeleteReligion.setDisabled(isDisabled);
        App.btnDetailReligion.setDisabled(isDisabled);
    };
</script>

@(X.Viewport()
    .Layout(LayoutType.Border)
    .Padding(2)
    .Items(
        X.GridPanel()
                    .Title("Danh mục quản lý tôn giáo").Header(false)
                    .ID("ReligionPanel")
                    .Region(Region.Center)
                    .ColumnLines(true)
                    .ForceFit(true)
                    .Icon(Icon.TextListBullets)
                    .TopBar(
                    X.Toolbar()
                    .Layout(LayoutType.HBox)
                    .Items(
                        X.ButtonCreate().Handler("showCreateReligion").ID("btnCreateReligion()"),
                        X.ToolbarSeparator(),
                        X.ButtonUpdate().ID("btnUpdateReligion").Handler("showUpdateReligion();").Disabled(true),
                        X.ToolbarSeparator(),
                        X.ButtonDelete().ID("btnDeleteReligion").Handler("showDeleteReligion()").Disabled(true),
                        X.ToolbarSeparator(),
                        X.ButtonView().ID("btnDetailReligion").Handler("showDetailReligion();").Disabled(true),
                        Html.X().ToolbarFill()
                        ))

                    .Store(Html.X().Store()
                .ID("StoreReligion")
                .Proxy(Html.X().AjaxProxy().Url(Url.Action("LoadData")).Reader(Html.X().JsonReader().Root("data")))
                .Model(
                    Html.X().Model()
                        .Fields(
                            Html.X().ModelField().Name("ID").Type(ModelFieldType.Int),
                            Html.X().ModelField().Name("Name").Type(ModelFieldType.String),
                            Html.X().ModelField().Name("CreatedAt").Type(ModelFieldType.Date),
                            Html.X().ModelField().Name("UpdatedAt").Type(ModelFieldType.Date)
                        )
                )
                .Listeners(ls => ls.Load.Handler = "setReligionSelection()")
            )
            .SortableColumns(false)
            .ColumnModel(
                Html.X().RowNumbererColumn().Text("STT").Width(33).Align(Alignment.Center),
                Html.X().Column().Text("ID").DataIndex("ID").Hidden(true).Width(40),
                Html.X().Column().DataIndex("Name").Text("Tên tôn giáo").Flex(1).MenuDisabled(true),
                Html.X().DateColumn().DataIndex("CreatedAt").Text("ngày tạo").MenuDisabled(true).Format("dd/MM/yyyy").Align(Alignment.Center),
                Html.X().DateColumn().DataIndex("UpdatedAt").Text("Ngày cập nhật").MenuDisabled(true).Format("dd/MM/yyyy").Align(Alignment.Center))
            .Listeners(ls => ls.SelectionChange.Handler = "selectionChangeReligion();")
    )
    )