@using Ext.Net;
@using Ext.Net.MVC;
@using iDAS.Utilities;
@using iDAS.Web.ExtExtend;
@model iDAS.Items.HumanRecruitmentProfileItem
@{
    var imgUrl = "/Content/images/underfind.jpg";
    if(Model.Avatar != null)
    {
        imgUrl = Model.Avatar;
    }
}
@(Html.X().Window()
.ID("winRecruitmentProfile")
.Title("Hồ sơ ứng viên")
.Icon(Icon.UserAdd)
.Modal(true)
.Layout(LayoutType.Fit)
.Maximized(true)
.Height(1)
.Resizable(false)
.Items(
        Html.X().FormPanel().ID("frmAdd")
            .Layout(LayoutType.Column)
            .Frame(true)
            .Border(false)
            .StyleSpec("border: none;")
            .Height(470)
            .AutoScroll(true)
            .Padding(0)
            .Margin(0)
            .Items(
                        Html.X().Container().Layout(LayoutType.HBox).ColumnWidth(1)
                                .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Top, Pack = BoxPack.Start })
                                .Items(
                                        Html.X().FormPanel().Border(false).Header(false).Flex(1)
                                        .Padding(0)
                                        .Layout(LayoutType.Column)
                                        .Frame(true)
                                        .StyleSpec("border: none;")
                                        .MarginSpec("5 10 0 0")
                                        .FieldDefaults(d => { d.LabelAlign = LabelAlign.Left; d.LabelStyle = "padding: 4px 2px 4px 8px;"; d.LabelWidth = 124; })
                                        .Items(
                                                Html.X().HiddenFor(m => m.ID),
                                                Html.X().TextFieldFor(m => m.Name).AllowOnlyWhitespace(false).BlankText("Bắt buộc nhập thông tin này")
                                                            .FieldLabel("Họ Tên" + Html.Required()).ColumnWidth(1),
                                                Html.X().DateFieldFor(m => m.Birthday).FieldLabel("Ngày sinh").ColumnWidth(0.5),
                                                Html.X().RadioGroupFor(m => m.Gender,
                                                                new List<Radio.Config> {
                                                                                new Radio.Config{BoxLabel = "Nam", InputValue = true.ToString(), Checked = true},
                                                                                new Radio.Config{BoxLabel = "Nữ", InputValue = false.ToString()}
                                                                    }
                                                                ).FieldLabel("Giới tính").ColumnWidth(0.5),
                                                Html.X().TextFieldFor(m => m.Phone).FieldLabel("Số điện thoại").ColumnWidth(0.5),
                                                Html.X().TextFieldFor(m => m.Email).InputType(Ext.Net.InputType.Email)
                                                        .InvalidText("Không đúng định dạng").FieldLabel("Email").ColumnWidth(0.5),
                                                Html.X().TextFieldFor(m => m.NumberOfIdentityCard).FieldLabel("Số CMT").ColumnWidth(0.5),
                                                Html.X().DateFieldFor(m => m.DateIssueOfIdentityCard).FieldLabel("Ngày cấp CMT").ColumnWidth(0.5),
                                                Html.X().TextFieldFor(m => m.PlaceIssueOfIdentityCard).FieldLabel("Nơi cấp CMT").ColumnWidth(1),
                                                Html.X().TextAreaFor(m => m.Address).FieldLabel("Địa chỉ").ColumnWidth(1).Height(104)
                                        )
                                        ,
                                        Html.X().FieldSet().Title("Ảnh đại diện")
                                            .Layout(LayoutType.Form)
                                            .Width(150)
                                            .Margin(0)
                                            .PaddingSpec("5 5 5 5")
                                            .Items(
                                                        Html.X().ImageButton().ID("imgAvatar").Height(180).Text("Ảnh đại diện").ImageUrl(imgUrl)
                                                            .ToolTip("Ảnh đại diện").StyleSpec("border: 0.5px solid #b5b8c8; width:98%;"),
                                                        Html.X().FileUploadField().ID("FileUploadFieldId").ButtonText("").Icon(Icon.ImageAdd)
                                                )
                                )
                                ,
                        Html.X().FormPanel()
                            .Header(false)
                            .Frame(true)
                            .Layout(LayoutType.Column)
                            .ColumnWidth(1)
                            .MarginSpec("5 0 0 0")
                            .FieldDefaults(d => { d.LabelAlign = LabelAlign.Left; d.LabelStyle = "padding: 4px 2px 4px 8px;"; d.LabelWidth = 120; })
                            .Border(false)
                            .StyleSpec("border: none;")
                            .Items(
                                        Html.X().NumberFieldFor(m => m.Salary).MinValue(0).FieldLabel("Mức lương").ColumnWidth(0.33),
                                        Html.X().TextFieldFor(m => m.Nationality).FieldLabel("Quốc tịch").ColumnWidth(0.33),
                                        Html.X().TextFieldFor(m => m.People).FieldLabel("Dân tộc").ColumnWidth(0.33),
                                        Html.X().TextFieldFor(m => m.Religion).FieldLabel("Tôn giáo").ColumnWidth(0.33),
                                        Html.X().TextFieldFor(m => m.HomePhone).FieldLabel("Số điện thoại nhà").ColumnWidth(0.33),
                                        Html.X().TextFieldFor(m => m.PlaceOfTranning).FieldLabel("Nơi đào tạo").ColumnWidth(0.33),
                                        Html.X().TextFieldFor(m => m.Specicalization).FieldLabel("Chuyên ngành").ColumnWidth(0.33),
                                        Html.X().TextFieldFor(m => m.LevelOfComputerization).FieldLabel("Trình độ tin học").ColumnWidth(0.33),
                                        Html.X().TextFieldFor(m => m.ForeignLanguage).FieldLabel("Trình độ ngoại ngữ").ColumnWidth(0.33),
                                        Html.X().TextFieldFor(m => m.Literacy).FieldLabel("Trình độ học vấn").ColumnWidth(0.33),
                                        Html.X().TextFieldFor(m => m.Qualifications).FieldLabel("Trình độ chuyên môn").ColumnWidth(0.33),
                                        Html.X().NumberFieldFor(m => m.YearsOfExperience).FieldLabel("Số năm kinh nghiệm").ColumnWidth(0.33),
                                        Html.X().TextAreaFor(m => m.Experience).FieldLabel("Kinh nghiệm làm việc").ColumnWidth(0.99).Height(150),
                                        Html.X().TextAreaFor(m => m.ListOfCertificates).FieldLabel("Danh sách văn bằng, chứng chỉ").ColumnWidth(0.99).Height(150)
                                    )

        )
    )
    .Buttons(
                Html.X().ButtonSave()
                        .DirectEvents(de =>
                        {
                            de.Click.Before = @"if (!App.frmAdd.getForm().isValid()) { return false; }; ";
                            de.Click.Url = Url.Action("Update");
                            de.Click.FormID = "frmAdd";
                        }),
                Html.X().ButtonExit()
            )
)