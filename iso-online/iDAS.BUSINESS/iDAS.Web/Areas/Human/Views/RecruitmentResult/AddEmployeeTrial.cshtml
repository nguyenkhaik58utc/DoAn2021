@using Ext.Net;
@using Ext.Net.MVC;
@using iDAS.Web;
@using iDAS.Utilities
@using iDAS.Web.ExtExtend
@model iDAS.Items.HumanProfileWorkTrialItem
@{
    var X = Html.X();
    var requirmentId = ViewData["requirmentId"] != null ? ViewData["requirmentId"].ToString() : "0";

}
@(Html.X().Window()
          .ID("winNewPlan")
          .Title("Thêm mới nhân sự thử việc")
          .Icon(Icon.Add)
              .Width(700)
            .Height(450)
        .Layout(LayoutType.Fit)
        .Constrain(true)
        .Modal(true)
        .BodyPadding(6)
             .Border(true)
          .Items(
        Html.X().FormPanel()
                .ID("frmPlan")
                .Layout(LayoutType.VBox)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                .Frame(true)
                .StyleSpec("border: none;")
                .FieldDefaults(d => d.LabelAlign = LabelAlign.Left)
                .Items(
                            Html.X().HiddenFor(m => m.ID).ID("hdfID").Value(0), Html.X().HiddenFor(m => m.ProfileID).ID("hdfProfileID"),
                    X.TextFieldFor(m => m.Name).FieldLabel("Họ tên nhân sự"),
                    Html.X().Container().Layout(LayoutType.Column).MarginSpec("0 -2 2 0")
                        .Items(
                                Html.X().DateFieldFor(m => m.FromDate).FieldLabel("Bắt đầu" + Html.Required()).AllowBlank(false).ColumnWidth(0.55),
                                            Html.X().DateFieldFor(m => m.ToDate).FieldLabel("Kết thúc" + Html.Required()).AllowBlank(false).LabelWidth(75).ColumnWidth(0.45).MarginSpec("0 0 0 5")
                            ),
                        X.RoleFieldFor(m => m.Role).FieldLabel("Chức danh" + Html.Required()).AllowBlank(false).Height(25),
                    X.TextAreaFor(m => m.Note).FieldLabel("Ghi chú").ID("contentParent").MinHeight(100).Flex(1),
                      Html.X().EmployeeFieldFor(m => m.Manager).MarginSpec("-2 0 0 105").Title("Người quản lý" + Html.Required()).ID("approvalParent"))
                )
        .Buttons(
                //Html.X().ButtonSendWindow()
                //            .ID("btnSendApprove")
                //                    .DirectEvents(de =>
                //                {
                //                    de.Click.ExtraParams.Add(new { val = false });
                //                    de.Click.Before = @"if (!App.frmPlan.getForm().isValid()) { return false; } ";
                //                    de.Click.Action = "Update";
                //                    de.Click.ExtraParams.Add(new { IsEdit = false });
                //                    de.Click.ExtraParams.Add(new { IsApproval = false });
                //                    de.Click.FormID = "frmPlan";
                //                    de.Click.Success = "if(result.result){this.up('window').close();}";
                //                }),
                Html.X().ButtonSave()
                .ID("btnSave")
                .DirectEvents(de =>
                {
                    de.Click.ExtraParams.Add(new { val = false });
                    de.Click.Before = @"if (!App.frmPlan.getForm().isValid()) { return false; } ";
                    de.Click.Action = "AddNewEmployeeTrial";
                    //de.Click.ExtraParams.Add(new { IsEdit = true });
                    //de.Click.ExtraParams.Add(new { IsApproval = false });
                    de.Click.FormID = "frmPlan";
                    de.Click.Success = "if(result.result){this.up('window').close();}";

                }),
                Html.X().ButtonExit()
                )
)
