@using Ext.Net;
@using Ext.Net.MVC;
@using iDAS.Web.ExtExtend;
@using iDAS.Web.Areas.Human.Models.V3_Category;
@model iDAS.Web.Areas.Human.Models.V3_HumanProfileTrainingDTO

@{
    var X = Html.X();
    //danh sách hinh thức đào tạo
    List<V3_EducationTypeResponse> lstEducationType = ViewData["lstEducationType"] as List<V3_EducationTypeResponse>;
    //danh sách kết quả đào tạo
    List<V3_EducationResultResponse> lstEducationResult = ViewData["lstEducationResult"] as List<V3_EducationResultResponse>;
}
@(Html.X().Window()
 .ID("winTraining")
.Title("Hồ sơ quá trình đào tạo")
.Icon(Icon.Pencil)
.Width(700)
.BodyPadding(0)
.Margin(0)
.Constrain(true)
.Layout(LayoutType.Fit)
.Modal(true)
.Resizable(false)
.Items(
    Html.X().FormPanel()
    .ID("frmUpdate")
    .Layout(LayoutType.Form)
    .Frame(true)
    .Border(false)
    .MarginSpec("0 -4 -3 -4")
    .StyleSpec("border: none;")
    .FieldDefaults(df => df.LabelWidth = 150)
    .DefaultAnchor("100%")
            .Items(
                    X.HiddenFor(m => m.ID),
                    X.HiddenFor(m => m.HumanEmployeeID),
                    X.TextFieldFor(m => m.Name).FieldLabel("Tên khóa học").MarginSpec("0 8 0 8").Width(650),
                        X.DateFieldFor(m => m.StartDate).FieldLabel("Thời gian bắt đầu").MarginSpec("0 8 0 8").Width(650),
                        X.DateFieldFor(m => m.EndDate).FieldLabel("Thời gian kết thúc").MarginSpec("0 8 0 8").Width(650),
                        //  X.TextFieldFor(m => m.EducationTypeID).FieldLabel("Hình thức đào tạo").MarginSpec("0 8 0 8").Width(650),
                        X.ComboBoxFor(m => m.EducationTypeID)
                                                       .Width(650)
                                                       .FieldLabel("Hình thức đào tạo")
                                                       .EmptyText("Chọn hình thức đào tạo")
                                                       .AllowBlank(true)
                                                       .ID("cbEducationType")
                                                       .Editable(false)
                                                       .DisplayField("Name")
                                                       .ValueField("ID")
                                                       .MarginSpec("5 8 0 8")
                                                       .Store(
                                                           X.Store()
                                                               .AutoLoad(true)
                                                               .Model(X.Model()
                                                               .IDProperty("ID")
                                                                   .Fields(
                                                                     new ModelField("ID", ModelFieldType.Int) { Mapping = "ID" },
                                                                     new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                                                   )
                                                               ).DataSource(lstEducationType)
                                                       ),
                        X.TextAreaFor(m => m.Content).FieldLabel("Nội dung đào tạo").MarginSpec("0 8 0 8").Width(650),
                        X.TextFieldFor(m => m.Certificate).FieldLabel("Chứng chỉ đào tạo").MarginSpec("0 8 0 8").Width(650),
                         //X.TextFieldFor(m => m.EducationResultID).FieldLabel("Kết quả đào tạo").MarginSpec("0 8 0 8").Width(650),
                         X.ComboBoxFor(m => m.EducationResultID)
                                                        .Width(650)
                                                        .FieldLabel("Kết quả đào tạo")
                                                        .EmptyText("Chọn Kết quả đào tạo")
                                                        .AllowBlank(true)
                                                        .ID("cbEducationResult")
                                                        .Editable(false)
                                                        .DisplayField("Name")
                                                        .ValueField("ID")
                                                        .MarginSpec("5 8 0 8")
                                                        .Store(
                                                            X.Store()
                                                                .AutoLoad(true)
                                                                .Model(X.Model()
                                                                .IDProperty("ID")
                                                                    .Fields(
                                                                      new ModelField("ID", ModelFieldType.Int) { Mapping = "ID" },
                                                                      new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                                                    )
                                                                ).DataSource(lstEducationResult)
                                                        ),
                         X.TextAreaFor(m => m.Reviews).FieldLabel("Nhận xét").MarginSpec("0 8 0 8").Width(650)
           )
    )
    .Buttons(
            Html.X().ButtonSave()
                        .DirectEvents(de =>
                        {
                            de.Click.Before = @"if (!App.frmUpdate.getForm().isValid()) { return false; } ";
                            de.Click.Url = Url.Action("Update");
                            de.Click.FormID = "frmUpdate";
                        })
                , Html.X().ButtonExit())
)
