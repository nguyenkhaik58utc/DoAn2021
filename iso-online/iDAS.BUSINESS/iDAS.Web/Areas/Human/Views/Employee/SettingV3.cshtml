@using Ext.Net;
@using Ext.Net.MVC;
@using iDAS.Web.ExtExtend;
@model iDAS.Items.HumanEmployeeItem
@(Html.X().HiddenFor(m => m.ID).ID("UserId").Hidden(true))
@(Html.X().Hidden().ID("GroupId").Hidden(true))
@(Html.X().Window()
        .ID("winSetting")
        .Title("Thiết lập chức danh")
        .Icon(Icon.ApplicationViewDetail)
        .Height(400)
        .Maximized(true)
        .BodyPadding(0)
        .Border(true)
        .Margin(0)
        .Constrain(true)
        .Layout(LayoutType.Border)
        .Modal(true)
        .Resizable(false)
        .Items(
                Html.X().DepartmentPanel().Handler("onDepartmentChange").MarginSpec("-1 -1 -1 -1"),
                Html.X().GridPanel()
                    .ID("GrRole")
                    .MarginSpec("-1 -1 -1 0")
                    .Title("Danh sách chức danh")
                    .Header(false)
                    .Region(Region.Center)
                    .ColumnLines(true)
                    .ForceFit(true)
                    .Icon(Icon.TextListBullets)
                    .Store(
                        Html.X().Store()
                            .AutoLoad(false)
                            .ID("StoreOrganizations")
                            .RemotePaging(true)
                            .Proxy(Html.X().AjaxProxy().Url(Url.Action("LoadOrganizationsV3", "Organization")).Reader(Html.X().JsonReader().Root("data")).IDParam("ID"))
                            .Parameters(ps =>
                            {
                                ps.Add(new StoreParameter("groupId", "App.GroupId.value", ParameterMode.Raw));
                                ps.Add(new StoreParameter("userId", "App.UserId.value", ParameterMode.Raw));
                            })
                            .Model(
                                Html.X().Model().Fields(
                                    Html.X().ModelField().Name("ID"),
                                    Html.X().ModelField().Name("TitleName"),
                                    Html.X().ModelField().Name("IsSelect").Type(ModelFieldType.Boolean)
                                )
                            )
                    )
                    .ColumnModel(
                            Html.X().RowNumbererColumn().Text("STT").Width(30).Align(Alignment.Center).StyleSpec("font-weight: bold;text-align: center"),
                            Html.X().Column().DataIndex("TitleName").Text("Tên chức danh").Width(350).StyleSpec("font-weight: bold;text-align: center"),
                            Html.X().CheckColumn().DataIndex("IsSelect").Text("Chọn").Editable(true).Width(90).StyleSpec("font-weight: bold;text-align: center").Align(Alignment.Center)
                    )
                    .Plugins(Html.X().CellEditing().Listeners(ls => ls.Edit.Fn = "onEditOrganization"))
        )
    .Buttons(Html.X().ButtonExit())
)
<script>
    function onDepartmentChange(records) {
        App.GroupId.value = records[0].get('id');
        App.GrRole.getStore().load({ params: { groupId: records[0].get('id'), userId: App.UserId.value } });
    };
    var onEditOrganization = function (editor, e) {
        var updateOrganizationUrl = '@(Url.Action("UpdateOrganizationV3", "Organization"))';
        if (!(e.value === e.originalValue || (Ext.isDate(e.value) && Ext.Date.isEqual(e.value, e.originalValue)))) {
            Ext.net.DirectMethod.request({
                url: updateOrganizationUrl,
                params: {
                    data: e.record.data,
                    userId: App.UserId.value
                }
            });
        }
    };
</script>