@using Ext.Net;
@using Ext.Net.MVC;
@using iDAS.Web.ExtExtend;
@model iDAS.Items.HumanEmployeeItem
@{
    var X = Html.X();
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script>
    var deleteUrl = '@(Url.Action("DeleteProfileRelationship"))';
    function CheckStatus() {
        var records = App.GrProfileRelationship.selModel.getSelection();
        if (records.length == 1) {
            SetEnabled(App.btnDetail, App.btnDelete, App.btnUpdate);

        }
        else {
            SetDisabled(App.btnDetail, App.btnDelete, App.btnUpdate);
        };
    };
    var ShowSex = function (value) {
        return value == true ? "Nam" : "Nữ";
    };
    var AddNew = function () {
        var url = '@(Url.Action("UpdateForm", "ProfileRelationship", new { Area = "Human" }, null))';
        var params = {
            EmployeeID: App.hdfEmployeeID.value
        };
        onDirectMethod(url, params);
    };
    var UpdateItem = function () {
        var records = App.GrProfileRelationship.selModel.getSelection();
        if (records.length > 0) {
            var url = '@(Url.Action("UpdateForm", "ProfileRelationship", new { Area = "Human" }, null))';
            var params = {
                ID: records[0].get('ID'),
                EmployeeID: App.hdfEmployeeID.value
            };
            onDirectMethod(url, params);
        }
        else {
            MessageBox();
        };
    };
    var ViewDetail = function () {
        var records = App.GrProfileRelationship.selModel.getSelection();
        if (records.length > 0) {
            var url = '@(Url.Action("DetailForm", "ProfileRelationship", new { Area = "Human" }, null))';
            var params = {
                ID: records[0].get('ID'),
                EmployeeID: App.hdfEmployeeID.value
            };
            onDirectMethod(url, params);
        }
        else {
            MessageBox();
        };
    };
</script>
@(Html.X().Viewport().Layout(LayoutType.Fit).Border(false).Margin(0).Frame(false)
.Items(
    Html.X().FormPanel()
    .Layout(LayoutType.Fit)
    .Frame(true)
    .Border(false)
    .StyleSpec("border: none;")
        .FieldDefaults(df => df.LabelWidth = 100).Padding(0)
    .DefaultAnchor("100%")
    .Items(

           Html.X().GridPanel()
                    .Header(false)
                    .ID("GrProfileRelationship")
                    .ColumnLines(true)
                    .Border(false)
                    .ForceFit(true)
                    .Icon(Icon.TextListBullets)
                    .TopBar(
                        Html.X().Toolbar()
                        .Layout(LayoutType.HBox)
                        .Items(
                              X.HiddenFor(m => m.ID).ID("hdfEmployeeID"),
                            Html.X().ButtonCreate().Handler("AddNew();"),
                            Html.X().ToolbarSeparator(),
                            Html.X().ButtonUpdate().ID("btnUpdate").Handler("UpdateItem();"),
                            Html.X().ToolbarSeparator(),
                            Html.X().ButtonDelete().ID("btnDelete").Handler("onDelete(App.GrProfileRelationship.selModel.getSelection()[0].get('ID'));"),
                            Html.X().ToolbarSeparator(),
                            Html.X().ButtonView().ID("btnDetail").Handler("ViewDetail();"),
                            Html.X().ToolbarFill(),
                            Html.X().ButtonTutorial()
                        )
                )
                .Store(
                    Html.X().Store()
                        .ID("StoreProfileRelationship")
                        .RemotePaging(true)
                        .PageSize(20)
                        .Proxy(Html.X().AjaxProxy().Url(Url.Action("LoadProfileRelationship")).Reader(Html.X().JsonReader().Root("data")).IDParam("ID"))
                        .Parameters(ps =>
                                {
                                    ps.Add(new StoreParameter("EmployeeID", "App.hdfEmployeeID.value", ParameterMode.Raw));
                                })
                        .Model(
                            Html.X().Model().Fields(
                                    Html.X().ModelField().Name("ID"),
                                    Html.X().ModelField().Name("Name"),
                                    Html.X().ModelField().Name("Age"),
                                    Html.X().ModelField().Name("IsMale").Type(ModelFieldType.Boolean),
                                    Html.X().ModelField().Name("Relationship"),
                                    Html.X().ModelField().Name("Job"),
                                    Html.X().ModelField().Name("PlaceOfJob")
                            )
                        )
                )
                .ColumnModel(
                                Html.X().RowNumbererColumn().DataIndex("ID").Text("STT").Width(30).Align(Alignment.Center).StyleSpec("font-weight: bold;text-align: center"),
                                Html.X().Column().DataIndex("Name").Text("Họ tên").Width(350).StyleSpec("font-weight: bold;text-align: center"),
                                Html.X().Column().DataIndex("Age").Text("Năm sinh").Align(Alignment.Right).Width(350).StyleSpec("font-weight: bold;text-align: center"),
                                Html.X().Column().DataIndex("IsMale").Renderer("ShowSex").Align(Alignment.Right).Text("Giới tính").Width(350).StyleSpec("font-weight: bold;text-align: center"),
                                Html.X().Column().DataIndex("Relationship").Text("Quan hệ").Width(350).StyleSpec("font-weight: bold;text-align: center"),
                                Html.X().Column().DataIndex("Job").Text("Nghề nghiệp").Width(350).StyleSpec("font-weight: bold;text-align: center"),
                                Html.X().Column().DataIndex("PlaceOfJob").Text("Nơi công tác").Width(350).StyleSpec("font-weight: bold;text-align: center")
                    )
                .SelectionModel(Html.X().CheckboxSelectionModel().ShowHeaderCheckbox(false).Mode(SelectionMode.Single)
                            .Listeners(ls => ls.SelectionChange.Fn = "CheckStatus"))
                .BottomBar(X.CustomPagingToolbar())
        )
    )
)
