@using Ext.Net;
@using Ext.Net.MVC;
@using iDAS.Web.ExtExtend;
@using iDAS.Web.Areas.Human.Models.V3_Category;
@model iDAS.Web.Areas.Human.Models.V3_HumanProfileRelationshipDTO
@{
    var X = Html.X();
    //danh sách quan hệ
    List<V3_FamilyRelationShipResponse> lstFamilyRelationShip = ViewData["lstFamilyRelationShip"] as List<V3_FamilyRelationShipResponse>;
}
@(Html.X().Window()
    .ID("winRelationship")
.Title("Hồ sơ quan hệ gia đình")
.Icon(Icon.Pencil)
.Width(600)
.BodyPadding(0)
.Margin(0)
.Constrain(true)
.Layout(LayoutType.Fit)
.Modal(true)
.Resizable(false)
.Items(
    Html.X().FormPanel()
    .ID("frmUpdate")
    .Layout(LayoutType.Form)
    .Frame(true)
    .Border(false)
    .MarginSpec("0 -4 -3 -4")
    .StyleSpec("border: none;")
    .FieldDefaults(df => df.LabelWidth = 100)
    .DefaultAnchor("100%")
            .Items(
                X.HiddenFor(m => m.ID),
                X.HiddenFor(m => m.HumanEmployeeID),
                Html.X().RadioGroupFor(m => m.IsSelf, new List<Radio.Config>() {
                    new Radio.Config{BoxLabel = "Bản thân", InputValue = true.ToString(),Checked=true},
                    new Radio.Config{BoxLabel = "Vợ chồng", InputValue = false.ToString()}}).FieldLabel("Là mối quan hệ của").MarginSpec("0 8 0 8").Width(450),
                X.TextFieldFor(m => m.Name).FieldLabel("Họ tên").MarginSpec("0 8 0 8").Width(550),
                X.TextFieldFor(m => m.Age).FieldLabel("Năm sinh").MarginSpec("0 8 0 8").Width(550) ,
                Html.X().RadioGroupFor(m => m.IsMale, new List<Radio.Config>() {
                    new Radio.Config{BoxLabel = "Nam", InputValue = true.ToString(),Checked=true},
                    new Radio.Config{BoxLabel = "Nữ", InputValue = false.ToString()}}).FieldLabel("Giới tính").MarginSpec("0 8 0 8").Width(450),
              //  X.TextFieldFor(m => m.Relationship).FieldLabel("Quan hệ").MarginSpec("0 8 0 8").Width(550) ,

                  X.ComboBoxFor(m => m.RelationshipID)
                                                       .Width(550)
                                                       .FieldLabel("Quan hệ")
                                                       .EmptyText("Chọn loại quan hệ")
                                                       .AllowBlank(true)
                                                       .ID("cbRelationship")
                                                       .Editable(false)
                                                       .DisplayField("Name")
                                                       .ValueField("ID")
                                                       .MarginSpec("5 8 0 8")
                                                       .Store(
                                                           X.Store()
                                                               .AutoLoad(true)
                                                               .Model(X.Model()
                                                               .IDProperty("ID")
                                                                   .Fields(
                                                                     new ModelField("ID", ModelFieldType.Int) { Mapping = "ID" },
                                                                     new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                                                   )
                                                               ).DataSource(lstFamilyRelationShip)
                                                       ),

                X.TextFieldFor(m => m.Job).FieldLabel("Nghề nghiệp").MarginSpec("0 8 0 8").Width(550) ,
                    X.TextFieldFor(m => m.PlaceOfJob).FieldLabel("Nơi công tác").MarginSpec("0 8 0 8").Width(550),
                    X.TextFieldFor(m => m.Phone).FieldLabel("Số điện thoại").MarginSpec("0 8 0 8").Width(550),
                    X.TextFieldFor(m => m.Address).FieldLabel("Địa chỉ").MarginSpec("0 8 0 8").Width(550)

           )
    )
    .Buttons(
            Html.X().ButtonSave()
                        .DirectEvents(de =>
                                    {
                                        de.Click.Before = @"if (!App.frmUpdate.getForm().isValid()) { return false; } ";
                                        de.Click.Url = Url.Action("Update");
                                        de.Click.FormID = "frmUpdate";
                                    })
                , Html.X().ButtonExit())
)
