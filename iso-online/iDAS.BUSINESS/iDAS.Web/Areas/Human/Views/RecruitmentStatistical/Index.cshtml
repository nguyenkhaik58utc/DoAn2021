@using Ext.Net.MVC
@using Ext.Net
@using iDAS.Web.ExtExtend;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var X = Html.X();
}
@( Html.X().Viewport()
    .Layout(LayoutType.Border)
    .Items(

               Html.X().GridPanel()
               .Region(Region.Center)
                .Margin(1)
                .Header(false)
                        .ID("grSuppAuditPlan")
                .ColumnLines(true)
                .ForceFit(true)
                    .TopBar(
                Html.X().Toolbar()
                        .ID("tbgpDepartmentStatisticalProfile")
                        .Items(
                                        Html.X().SearchByDate("App.StorePlanIndex.load();")
                                                    .FromDateID("dfFromDate").ToDateID("dfToDate"),
                                    Html.X().ToolbarSeparator(),
                                    Html.X().Button()
                                        .Icon(Icon.ChartCurve)
                                        .ID("groupChart")
                                            .Text("Xem dưới dạng biểu đồ").Hidden(true)
                                        .Menu(Html.X().Menu()
                                            .Items(
                                                    Html.X().MenuItem()
                                                .Text("Biểu đồ hình cột(SL)")
                                                            .ID("btnChartColumn")
                                                    .Disabled(true)
                                                    .Listeners(ls => ls.Click.Handler = "showChartColumn();")
                                                    .Icon(Icon.ChartBar)

                                        )
                                ),Html.X().ToolbarSeparator(),
                                            Html.X().ButtonExportExcelFile().GridIDGetFile("grSuppAuditPlan"),
                                    Html.X().Button()
                                            .Text("In báo cáo")
                                                .Hidden(true)
                                            .Icon(Icon.Printer),
                                                    Html.X().ToolbarFill(),
                                                            Html.X().ButtonTutorial()


                                    ))
            .Store(
                Html.X().Store()
                        .ID("StorePlanIndex")
                        .RemotePaging(true)
                        .AutoLoad(true)
                        .PageSize(20)
                                    .Proxy(Html.X().AjaxProxy().Url(Url.Action("GetData", "RecruitmentStatistical", new { Area = "Human" }))
                        .Reader(Html.X().JsonReader().Root("data"))
                        .IDParam("ID"))
                            .Parameters(ps =>
                                                        {
                                                            ps.Add(new StoreParameter("fromDate", "App.dfFromDate.getValue()", ParameterMode.Raw));
                                                            ps.Add(new StoreParameter("toDate", "App.dfToDate.getValue()", ParameterMode.Raw));
                                                        })
                    .Model(
                           Html.X().Model().Fields(
                                Html.X().ModelField().Name("ID"),
                                Html.X().ModelField().Name("Name"),
                                Html.X().ModelField().Name("StartDate"),
                                Html.X().ModelField().Name("EndDate"),
                                Html.X().ModelField().Name("TotalCost"),
                                Html.X().ModelField().Name("IsEdit"),
                                Html.X().ModelField().Name("Status"),
                                 Html.X().ModelField().Name("TotalProfile"),
                                  Html.X().ModelField().Name("TotalInterview"),
                                      Html.X().ModelField().Name("TotalTrial"),
                                   Html.X().ModelField().Name("TotalPass")
                            )
                     )
            )
            .ColumnModel(
                            Html.X().RowNumbererColumn().Text("STT").DataIndex("ID").Width(30).Align(Alignment.Center),
                         Html.X().Column().DataIndex("Name").Text("Tên kế hoạch tuyển dụng").Width(300),
                         Html.X().ComponentColumn().Text("Thời gian thực hiện")
                                 .Columns(
                                    Html.X().DateColumnExtend().DataIndex("StartDate").Text("Ngày bắt đầu").Width(100).Format("dd/MM/yyyy").Align(Alignment.Center),
                                    Html.X().DateColumnExtend().DataIndex("EndDate").Text("Ngày kết thúc").Width(100).Format("dd/MM/yyyy").Align(Alignment.Center)
                                    ),
                         Html.X().NumberColumn().DataIndex("TotalCost").Text("Chí phí").Flex(1).Align(Alignment.Right).MinWidth(100),
                            X.ComponentColumn().Text("Kết quả tuyển dụng").Columns(
                                    X.Column().DataIndex("TotalProfile").Text("Số hồ sơ ứng tuyển").StyleSpec("font-weight: bold;text-align: center").Align(Alignment.Center).Width(130).Renderer("renderTotalProfile"),
                                    X.Column().DataIndex("TotalInterview").Text("Đã phỏng vấn").StyleSpec("font-weight: bold;text-align: center").Align(Alignment.Center).Width(100).Renderer("renderTotalInterview"),
                                            X.Column().DataIndex("TotalTrial").Text("Đã thử việc").StyleSpec("font-weight: bold;text-align: center").Align(Alignment.Center).Width(100).Renderer("renderTotalTrial"),
                                    X.Column().DataIndex("TotalPass").Text("Đã tuyển").StyleSpec("font-weight: bold;text-align: center").Align(Alignment.Center).Width(100).Renderer("renderTotalPass")
                            )

                )

            .BottomBar(
                   X.CustomPagingToolbar()
        )
       )
)
<script type="text/javascript">

    var showListSupp = function () {
        var records = App.grSuppAuditPlan.selModel.getSelection();
        if (records.length > 0) {
            var url = '@(Url.Action("ShowSuppAuditList", "RecruitmentStatistical", new { Area = "Human" }, null))';
            var params = {
                id: records[0].get('ID')
            };
            onDirectMethod(url, params);
        }
        else {
            MessageBox();
        };
    };
    var showSummaryResult = function () {
        var records = App.grSuppAuditPlan.selModel.getSelection();
        if (records.length > 0) {
            var url = '@(Url.Action("ShowSummaryResult", "RecruitmentStatistical", new { Area = "Human" }, null))';
            var params = {
                id: records[0].get('ID')
            };
            onDirectMethod(url, params);
        }
        else {
            MessageBox();
        };
    };
    var optionTime = function () {
        var date = new Date();
        var option = App.Time.getValue();
        var quarter = Math.floor((date.getMonth() + 3) / 3);
        switch (option) {
            case 0:
                App.dfFromDate.setValue(date);
                App.dfToDate.setValue(date);
                break;
            case 1:
                var startDay = 1;
                var d = date.getDay();
                var weekStart = new Date(date.valueOf() - (d <= 0 ? 7 - startDay : d - startDay) * 86400000);
                var weekEnd = new Date(weekStart.valueOf() + 6 * 86400000);
                App.dfFromDate.setValue(weekStart);
                App.dfToDate.setValue(weekEnd);
                break;
            case 2:
                App.dfFromDate.setValue(new Date(date.getFullYear(), date.getMonth(), 1));
                App.dfToDate.setValue(new Date(date.getFullYear(), date.getMonth() + 1, 0));
                break;
            case 3:
                App.dfFromDate.setValue(new Date(date.getFullYear(), 3 * quarter - 3, 1));
                App.dfToDate.setValue(new Date(date.getFullYear(), 3 * quarter + 0, 1));
                break;
            case 4:
                App.dfFromDate.setValue(new Date(date.getFullYear(), 0, 1));
                App.dfToDate.setValue(new Date(date.getFullYear(), 11, 31));
                break;
            case 5:
                App.dfFromDate.setValue(new Date(date.getFullYear(), 0, 1));
                App.dfToDate.setValue(new Date(date.getFullYear(), 0 + 1, 0));
                break;
            case 6:
                App.dfFromDate.setValue(new Date(date.getFullYear(), 1, 1));
                App.dfToDate.setValue(new Date(date.getFullYear(), 1 + 1, 0));
                break;
            case 7:
                App.dfFromDate.setValue(new Date(date.getFullYear(), 2, 1));
                App.dfToDate.setValue(new Date(date.getFullYear(), 2 + 1, 0));
                break;
            case 8:
                App.dfFromDate.setValue(new Date(date.getFullYear(), 3, 1));
                App.dfToDate.setValue(new Date(date.getFullYear(), 3 + 1, 0));
                break;
            case 9:
                App.dfFromDate.setValue(new Date(date.getFullYear(), 4, 1));
                App.dfToDate.setValue(new Date(date.getFullYear(), 4 + 1, 0));
                break;
            case 10:
                App.dfFromDate.setValue(new Date(date.getFullYear(), 5, 1));
                App.dfToDate.setValue(new Date(date.getFullYear(), 5 + 1, 0));
                break;
            case 11:
                App.dfFromDate.setValue(new Date(date.getFullYear(), 6, 1));
                App.dfToDate.setValue(new Date(date.getFullYear(), 6 + 1, 0));
                break;
            case 12:
                App.dfFromDate.setValue(new Date(date.getFullYear(), 7, 1));
                App.dfToDate.setValue(new Date(date.getFullYear(), 7 + 1, 0));
                break;
            case 13:
                App.dfFromDate.setValue(new Date(date.getFullYear(), 8, 1));
                App.dfToDate.setValue(new Date(date.getFullYear(), 8 + 1, 0));
                break;
            case 14:
                App.dfFromDate.setValue(new Date(date.getFullYear(), 9, 1));
                App.dfToDate.setValue(new Date(date.getFullYear(), 9 + 1, 0));
                break;
            case 15:
                App.dfFromDate.setValue(new Date(date.getFullYear(), 10, 1));
                App.dfToDate.setValue(new Date(date.getFullYear(), 10 + 1, 0));
                break;
            case 16:
                App.dfFromDate.setValue(new Date(date.getFullYear(), 11, 1));
                App.dfToDate.setValue(new Date(date.getFullYear(), 11 + 1, 0));
                break;
            case 17:
                App.dfFromDate.setValue(new Date(date.getFullYear(), 3 * 1 - 3, 1));
                App.dfToDate.setValue(new Date(date.getFullYear(), 3 * 1 + 0, 1));
                break;
            case 18:
                App.dfFromDate.setValue(new Date(date.getFullYear(), 3 * 2 - 3, 1));
                App.dfToDate.setValue(new Date(date.getFullYear(), 3 * 2 + 0, 1));
                break;
            case 19:
                App.dfFromDate.setValue(new Date(date.getFullYear(), 3 * 3 - 3, 1));
                App.dfToDate.setValue(new Date(date.getFullYear(), 3 * 3 + 0, 1));
                break;
            case 20:
                App.dfFromDate.setValue(new Date(date.getFullYear(), 3 * 4 - 3, 1));
                App.dfToDate.setValue(new Date(date.getFullYear(), 3 * 4 + 0, 1));
                break;
            default:
                App.dfFromDate.setValue(new Date(date.getFullYear(), date.getMonth(), 1));
                App.dfToDate.setValue(new Date(date.getFullYear(), date.getMonth(), 1));
        }
        App.grSuppAuditPlan.getStore().load();
    };

    var showDetailStatiscal = function (storeUrl) {
        var records = App.grSuppAuditPlan.selModel.getSelection();
        var planID = 0;
        if (records.length > 0) {
            planID = records[0].get('ID');
        }
        var url = '@(Url.Action("ViewListProfile", "RecruitmentStatistical", new { Area = "Human" }))';
        var params = {
            urlStore: storeUrl,
            Mode: '@(ParameterMode.Value)',
            fromDate: Ext.Date.format(App.dfFromDate.getValue(), 'd/m/Y g:i A'),
            toDate: Ext.Date.format(App.dfToDate.getValue(), 'd/m/Y g:i A'),
            planID:planID
        };

        onDirectMethod(url, params);
    };
    var renderTotalProfile = function (value) {
        var urlStoreProfile = '@(Url.Action("renderTotalProfile", "RecruitmentStatistical", new { Area = "Human" }))';
        return "<a class='a-grid-cell' title='Click xem chi tiết' onclick =\"showDetailStatiscal(\'" + urlStoreProfile.toString() + "\')\">" + value + "</a>";
    };
    var renderTotalInterview = function (value) {
        var urlStoreProfile = '@(Url.Action("renderTotalInterview", "RecruitmentStatistical", new { Area = "Human" }))';
        return "<a class='a-grid-cell' title='Click xem chi tiết' onclick =\"showDetailStatiscal(\'" + urlStoreProfile.toString() + "\')\">" + value + "</a>";
    };
    var renderTotalTrial = function (value) {
        var urlStoreProfile = '@(Url.Action("renderTotalTrial", "RecruitmentStatistical", new { Area = "Human" }))';
        return "<a class='a-grid-cell' title='Click xem chi tiết' onclick =\"showDetailStatiscal(\'" + urlStoreProfile.toString() + "\')\">" + value + "</a>";
    };
    
    var renderTotalPass = function (value) {
        var urlStoreProfile = '@(Url.Action("renderTotalPass", "RecruitmentStatistical", new { Area = "Human" }))';
        return "<a class='a-grid-cell' title='Click xem chi tiết' onclick =\"showDetailStatiscal(\'" + urlStoreProfile.toString() + "\')\">" + value + "</a>";
    };
    var renderTotalNotPass = function (value) {
        var urlStoreProfile = '@(Url.Action("renderTotalNotPass", "RecruitmentStatistical", new { Area = "Human" }))';
        return "<a class='a-grid-cell' title='Click xem chi tiết' onclick =\"showDetailStatiscal(\'" + urlStoreProfile.toString() + "\')\">" + value + "</a>";
    };
</script>
