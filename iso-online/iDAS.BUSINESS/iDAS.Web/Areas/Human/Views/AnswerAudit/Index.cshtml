@using Ext.Net.MVC
@using Ext.Net
@using iDAS.Web.ExtExtend
@model System.Collections.IEnumerable
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@(Html.X().Viewport()
        .Layout(LayoutType.Fit)
        .Padding(1)
        .Items(
                Html.X().Hidden().Value(ViewBag.FocusId).ID("hdfFocusID"),
                Html.X().Hidden().ID("hdfQuestionCateID").Value(0),
                Html.X().GridPanel()
                    .ID("grMnPhaseAudit")
                    .MarginSpec("0 5 0 0")
                    .Width(365)
                    .Border(true)
                    .TopBar(Html.X().Toolbar().Items(Html.X().ButtonView().ID("btnDetail").Handler("showFormDetail();")))
                    .Store(Html.X().Store()
                                    .ID("stMnPhaseAudit")
                                    .Proxy(Html.X().AjaxProxy().Url(Url.Action("GetData")).Reader(Html.X().JsonReader().Root("data")))
                                    .Parameters(ps =>
                                        {
                                            ps.Add(new StoreParameter("focusId", "App.hdfFocusID.getValue()", ParameterMode.Raw));
                                        })
                                    .RemoteSort(true)
                                    .RemotePaging(true)
                                    .PageSize(20)
                                    .Model(
                                            Html.X().Model().IDProperty("ID")
                                                    .Fields(
                                                        Html.X().ModelField().Name("ID").Type(ModelFieldType.Int),
                                                        Html.X().ModelField().Name("Name").Type(ModelFieldType.String),
                                                        Html.X().ModelField().Name("StartDate").Type(ModelFieldType.Date),
                                                        Html.X().ModelField().Name("EndDate").Type(ModelFieldType.Date),
                                                        Html.X().ModelField().Name("HumanCategoryQuestionID").Type(ModelFieldType.Int)
                                                    )
                                            )
                        )
                    .ColumnModel(
                                    Html.X().RowNumbererColumn().Text("STT").Align(Alignment.Center).Width(33),
                                    Html.X().Column().Text("Đợt đánh giá").DataIndex("Name").Flex(1).Wrap(true),
                                    Html.X().ComponentColumn()
                                                            .Width(60)
                                                            .Text("Trả lời")
                                                            .PinAllColumns(false)
                                                            .AutoWidthComponent(false)
                                                            .OverOnly(true)
                                                            .Component(Html.X().Button()
                                                                .Text("Trả lời")
                                                                .Icon(Icon.PlayGreen)
                                                                .Listeners(ls => ls.Click.Fn = "AnswerAudit")
                                                            ).Filterable(true)
                                )
                    .Plugins(Html.X().FilterHeader().Remote(true))
                    .View(Html.X().GridView().GetRowClass(cls => cls.Fn = "getRowClass"))
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(SelectionMode.Multi)
                            .Listeners(l =>
                                        {
                                            l.Select.Handler =
                                            @"App.btnDetail.setDisabled(false); App.hdfQuestionCateID.setValue(App.grMnPhaseAudit.selModel.getSelection()[0].get('HumanCategoryQuestionID'));";
                                        })
                        )
                .Plugins(Html.X().CellEditing())
                .BottomBar(Html.X().CustomPagingToolbar())
            )
)
<script type="text/javascript">
    var showFormDetail = function () {
        var records = App.grMnPhaseAudit.selModel.getSelection();
        if (records.length == 0) {
            Ext.MessageBox.show({
                title: 'Cảnh báo', msg: 'Chưa có bản ghi nào được chọn!',
                buttons: { yes: 'Đồng ý' },
                iconCls: '#Exclamation',
                fn: function (btn) {
                    App.btnEdit.setDisabled(true);
                    App.btnDelete.setDisabled(true);
                    App.btnDetail.setDisabled(true);
                    return false;
                }
            });
        }
        else {
            var id = records[0].get('ID');
            Ext.net.DirectMethod.request({
                url: '@(Url.Action("ShowDetail", "PhaseAudit", new { Area = "Human" }, null))',
                params: { id: id }
            });
        }
    };
    var showAnswerQuestion = function () {
        var records = App.grQuestion.selModel.getSelection();
        var record = App.grMnPhaseAudit.selModel.getSelection();
        if (records.length > 0) {
            var url = '@(Url.Action("ShowAnswer", "AnswerAudit", new { Area = "Human" }, null))';
            var params = {
                id: records[0].get('ID'),
                phaseAuditID: record[0].get('ID')
            };
            onDirectMethod(url, params);
        }
        else {
            MessageBox();
        };
    };
    var getRowClass = function (record, index, rowParams, ds) {
        if (record.get("ID") == App.hdfFocusID.value) {
            return 'idas-focus';
        };
    };
    var AnswerAudit = function (btn, pressed) {
        var columnConfig = btn.column;
        var params = {
            id: columnConfig.record.data.HumanCategoryQuestionID,
            phaseAuditID:columnConfig.record.data.ID
        };
        onDirectMethod('@(Url.Action("Answer"))', params);

    };
</script>