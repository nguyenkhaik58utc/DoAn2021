@using Ext.Net.MVC
@using Ext.Net
@using iDAS.Utilities
@using iDAS.Web.ExtExtend
@model iDAS.Items.HumanTrainingPlanDetailItem
@(Html.X().Window()
          .ID("winUpdatePlanDetail")
          .Title("Sửa thông tin đợt đào tạo")
          .Icon(Icon.Pencil)      
          .Width(700)
          .BodyPadding(6)
          .Constrain(true)
          .Modal(true)
          .Layout(LayoutType.Fit)
          .Items(
        Html.X().FormPanel()
                .ID("frPlanDetail")
                .Layout(LayoutType.VBox)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                .Frame(true)
                .StyleSpec("border: none;")
                .FieldDefaults(d => d.LabelAlign = LabelAlign.Left)
        .Items(
        Html.X().HiddenFor(m=>m.ID),
        Html.X().HiddenFor(m=>m.PlanID),        
                Html.X().TextFieldFor(m => m.Content)
                    .FieldLabel("Nội dung đào tạo" + Html.Required())
                    .LabelWidth(110)
                    .AllowBlank(false)
                    .BlankText("Nội dung đào tạo không được trống!")
                    .AllowOnlyWhitespace(false),
                         Html.X().TextFieldFor(m => m.Reason)
                        .FieldLabel("Lý do đào tạo" + Html.Required())
                     .LabelWidth(110)
                        .AllowBlank(false)
                        .BlankText("Lý do đào tạo không được trống!")
                        .AllowOnlyWhitespace(false),
                          Html.X().Container().Layout(LayoutType.Column).MarginSpec("0 3 0 0")
                                    .Items(
                                          Html.X().NumberFieldFor(m => m.Number).FieldLabel("Số người").LabelWidth(110).ColumnWidth(0.3).MarginSpec("0 5 0 0"),
                                     Html.X().NumberFieldFor(m => m.ExpectedCost).FieldLabel("Kinh phí dự kiến").LabelWidth(80).ColumnWidth(0.3).MarginSpec("0 5 0 0"),
                                                   Html.X().ComboBoxFor(m => m.TrainingTypeID).FieldLabel("Hình thức đào tạo" + Html.Required()).AllowBlank(false).Editable(false).LabelWidth(110)
                                                   .Items(new ListItem("Nội bộ", false), new ListItem("Bên ngoài", true)).ColumnWidth(0.4)
                             ),
                     Html.X().Container().Layout(LayoutType.Column).MarginSpec("5 0 5 0")
                                    .Items(
                                                Html.X().DateTimeFieldFor(m => m.FromDate).FieldLabel("Bắt đầu" + Html.Required()).LabelWidth(110).AllowBlank(false).ColumnWidth(0.55).MarginSpec("0 5 0 0"),
                                            Html.X().DateTimeFieldFor(m => m.ToDate).LabelWidth(80).FieldLabel("Kết thúc" + Html.Required()).AllowBlank(false).LabelWidth(70).ColumnWidth(0.45)
                                        ),
                                                        Html.X().TextFieldFor(m => m.Address).LabelWidth(110)
                            .FieldLabel("Địa điểm" + Html.Required()),
                                 Html.X().TextAreaFor(m => m.Note)
                                 .Height(70)
                                     .LabelWidth(110)
                        .FieldLabel("Ghi chú"),

                       Html.X().CheckboxFor(m => m.IsCommit).HideLabel(true).BoxLabel("Yêu cầu cam kết").MarginSpec("0 0 0 115"),
                           Html.X().HtmlEditorFor(m => m.CommitContent).FieldLabel("Nội dung cam kết").LabelWidth(110).Height(175)
             )
            )
            .Buttons(      
            Html.X().ButtonSave()
            .DirectEvents(de =>
            {   
                de.Click.Before = @"if (!App.frPlanDetail.getForm().isValid()) { return false; } ";
                de.Click.Action = "Update";
                de.Click.FormID = "frPlanDetail";
                de.Click.Success = "this.up('window').close();";
            }),           
            Html.X().ButtonExit()
            )
)
