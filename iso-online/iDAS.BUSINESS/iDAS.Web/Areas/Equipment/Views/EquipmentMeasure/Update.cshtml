@using Ext.Net;
@using Ext.Net.MVC;
@using iDAS.Web.ExtExtend;
@using iDAS.Web;
@using iDAS.Utilities;
@model iDAS.Items.EquipmentMeasureItem
@{
    string title = "";
    var IconView = new Icon();
    string actionForm = Model.ActionForm;
    bool IsAdd = true;
    if (actionForm == iDAS.Utilities.Form.Add)
    {
        IconView = Icon.Add;
        title = "Thêm mới thiết bị đo lường";
        IsAdd = true;
    }
    else
    {
        IconView = Icon.Pencil;
        title = "Cập nhật thiết bị đo lường";
        IsAdd = false;
    }
}
@(Html.X().Window()
    .ID("winEquipmentMeasure")
.Title(title)
.Icon(IconView)
    .Width(700)
    .BodyPadding(6)
    .Constrain(true)
    .Modal(true)
    .Layout(LayoutType.Fit)
    .Items (
    Html.X().FormPanel()
        .ID("frmMeasureInfo")
    .Layout(LayoutType.Form)
    .Frame(true)
    .StyleSpec("border: none;")
    .FieldDefaults(d => { d.LabelAlign = LabelAlign.Left; d.LabelWidth = 105; })
    .Items (
            Html.X().Container()
                    .MarginSpec("0 0 0 0")
                    .Layout(LayoutType.Column)
                    .Items (
                         Html.X().HiddenFor(m => m.ID),
                    Html.X().HiddenFor(m=>m.EquipmentMeasureCategoryID),
                         Html.X().TextFieldFor(m => m.EquipmentMeasureCategoryName)
                    .FieldLabel("Nhóm thiết bị" + Html.Required())
                    .AllowBlank(false)
                    .LabelWidth(105)
                    .ReadOnly(true)
                    .MaxLength(255)
                    .MarginSpec("0 5 0 0")
                    .ColumnWidth(0.8)
                    .AllowOnlyWhitespace(false)
                    .AnchorHorizontal("100%"),
            Html.X().TextFieldFor(m => m.Code)
                    .FieldLabel("Mã" + Html.Required())
                    .MaxLength(20)
                    .MaxLengthText("Trường không vượt quá 20 ký tự!")
                    .AllowBlank(false)
                        .LabelWidth(40)
                    .ColumnWidth(0.2)
                    .BlankText("Mã thiết bị đo không được để trống!")
                    .AllowOnlyWhitespace(false)
                    .AnchorHorizontal("100%")
                    .TabIndex(5)
                    ),
                             Html.X().TextFieldFor(m => m.Name)
                        .FieldLabel("Tên thiết bị" + Html.Required())
                        .AllowBlank(false)
                             .LabelWidth(105)
                        .MaxLength(255)
                        .ColumnWidth(0.8)
                        .MaxLengthText("Trường không vượt quá 255 ký tự")
                        .BlankText("Tên thiết bị không được để trống!")
                        .AllowOnlyWhitespace(false)
                        .AnchorHorizontal("100%"),
            Html.X().Container()
                    .MarginSpec("0 0 0 0")
                    .Layout(LayoutType.Column)
                    .Items(
            Html.X().TextFieldFor(m => m.SerialNumber)
                    .FieldLabel("Mã vạch")
                    .MarginSpec("0 5 0 0")
                    .MaxLength(20)
                    .MaxLengthText("Trường không vượt quá 20 ký tự")
                        .LabelWidth(105)
                    .ColumnWidth(0.5)
                    .AnchorHorizontal("100%")
                    .TabIndex(6),
                    Html.X().TextFieldFor(m => m.MadeIn)
                    .FieldLabel("Xuất xứ")
                          .LabelWidth(50)
                    .MarginSpec("0 0 0 0")
                    .ColumnWidth(0.5)
                    .AnchorHorizontal("100%")
                    .TabIndex(9)
                    
                ),
                      Html.X().Container()
                        .MarginSpec("0 0 0 0")
                        .Layout(LayoutType.Column)
                        .Items(
                Html.X().DateFieldFor(m => m.MadeYear)
                        .FieldLabel("Năm sản xuất")
                           .LabelWidth(105)
                        .MaxLength(100)
                                    .ColumnWidth(0.5).MarginSpec("0 5 0 0")
                        .MaxLengthText("Trường không vượt quá 100 ký tự!")
                        .AnchorHorizontal("100%")
                        .TabIndex(10),
                                     Html.X().DateFieldFor(m => m.ExprireTime)
                            .FieldLabel("Ngày hết hạn")
                               .LabelWidth(70)
                            .MaxLength(100)
                                    .ColumnWidth(0.5)
                            .MaxLengthText("Trường không vượt quá 100 ký tự!")
                            .AnchorHorizontal("100%")
                            .TabIndex(10)



                    ),
                         Html.X().Container()
                    .MarginSpec("0 0 0 0")
                    .Layout(LayoutType.Column)
                    .Items(
                Html.X().NumberFieldFor(m => m.ScopeStart)
                    .FieldLabel("Mức đo tối thiểu" + Html.Required())
                    .AllowBlank(false)
                    .ColumnWidth(0.5)
                    .MarginSpec("0 5 0 0")
                    .LabelWidth(105)
                    .AnchorHorizontal("100%")
                    .TabIndex(11),
                     Html.X().NumberFieldFor(m => m.ScopeEnd)
                    .FieldLabel("Mức đo tối đa" + Html.Required())
                    .AllowBlank(false)
                    .ColumnWidth(0.5)
                    .LabelWidth(100)
                        .AnchorHorizontal("100%").MarginSpec("0 0 0 0")
                    .TabIndex(12)
                
                    ),
                         Html.X().Container()
                        .MarginSpec("0 0 0 0")
                        .Layout(LayoutType.Column)
                        .Items(
                          Html.X().TextFieldFor(m => m.ScopeUnit)
                           .ColumnWidth(0.5)
                            .FieldLabel("Đơn vị tính" + Html.Required()).AllowBlank(false).LabelWidth(105).MarginSpec("0 5 0 0"),
                         Html.X().NumberFieldFor(m => m.Accuracy)
                           .ColumnWidth(0.2)
                           .AllowDecimals(true).DecimalPrecision(5)
                           .MinValue(0)
                           .AllowDecimals(true)
                                .FieldLabel("Sai số" + Html.Required()).AllowBlank(false).LabelWidth(53).MarginSpec("0 5 0 0"),
                                    Html.X().DateFieldFor(m => m.UseStartTime).ColumnWidth(0.3).FieldLabel("Ngày sử dụng")
                            
                        ),
                          Html.X().TextAreaFor(m => m.Features).ColumnWidth(1)
                            .FieldLabel("Đặc tính kỹ thuật" + Html.Required()).AllowBlank(false).Height(100).LabelWidth(105),
                          Html.X().TextAreaFor(m => m.SupportInfomation).ColumnWidth(1)
                                .FieldLabel("Thông tin hỗ trợ" + Html.Required()).AllowBlank(false).LabelWidth(105).Height(100)
                    ,
                    Html.X().FileUploadFieldFor(m => m.AttachmentFiles).ColumnWidth(1).MarginSpec("0 5 0 0")             
                     
                    
             )
            )
    .Buttons(
            Html.X().Button()
                    .Text("Lưu lại")
                    .Icon(Icon.DiskMultiple)
                    .DirectEvents(de =>
                    {
                        de.Click.Before = @"if (!App.frmMeasureInfo.getForm().isValid()) { return false; }; ";
                        de.Click.ExtraParams.Add(new { exit = true });
                        de.Click.Url = Url.Action("Update");
                        de.Click.EventMask.ShowMask = true;
                        de.Click.FormID = "frmMeasureInfo";
                        de.Click.EventMask.Msg = "Đang xử lý dữ liệu...";
                        de.Click.Success = "App.frmMeasureInfoContact.setDisabled(false); App.GrCustomer.store.reload();";
                    }),
            Html.X().Button()
                    .ID("btnSaveAndExits")
                    .Text("Lưu và thoát")
                    .Icon(Icon.Disk)
                    .DirectEvents(de =>
                    {
                        de.Click.Before = @"if (!App.frmMeasureInfo.getForm().isValid()) { return false; } ";
                        de.Click.ExtraParams.Add(new { exit = true });
                        de.Click.Action = "Update";
                        de.Click.EventMask.ShowMask = true;
                        de.Click.FormID = "frmMeasureInfo";
                        de.Click.EventMask.Msg = "Đang xử lý dữ liệu...";
                        de.Click.Success = "this.up('window').close(); App.GrCustomer.store.reload();";
                    }),
            Html.X().Button()
                    .ID("btnReset")
                    .Text("Nhập lại")
                    .Icon(Icon.ArrowRefresh)
                    .Handler("App.frmMeasureInfo.reset();"),
            Html.X().Button()
                    .ID("btnCancel")
                    .Text("Đóng")
                    .Icon(Icon.Cancel)
                    .Handler(" this.up('window').close();")
                )
)
