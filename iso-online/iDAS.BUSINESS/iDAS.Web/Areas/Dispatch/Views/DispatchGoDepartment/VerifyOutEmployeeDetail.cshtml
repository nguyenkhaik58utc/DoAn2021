@using Ext.Net.MVC
@using iDAS.Utilities
@using Ext.Net
@using iDAS.Web.ExtExtend
@{
    var X = Html.X();
    int employee = (int)iDAS.Items.DispatchObjectType.Employee;
}
@model iDAS.Items.DispatchGoObjectItem
@(Html.X().Window()
    .ID("winVerifyOutDetailEmployee")
    .Title("Xác nhận thông tin chuyển công văn đi")
    .Icon(Icon.Accept)
    .BodyPadding(6).Border(true)
    .Modal(true)
    .Constrain(true)
    .Resizable(false)
     .Width(600)
    .Center()
    .Items(
        Html.X().FormPanel()
            .ID("frVerifyOutDetail")
            .Layout(LayoutType.Form)
            .StyleSpec("border: none;")
            .Border(false)
            .Frame(true)
            .FieldDefaults(f => f.LabelWidth = 110)
            .Items(
                Html.X().HiddenFor(m => m.CreateBy),
                Html.X().HiddenFor(m => m.UpdateBy),
                Html.X().HiddenFor(m => m.ID),
                Html.X().HiddenFor(m => m.DispatchGo),
                X.DateFieldFor(m => m.Date)
                    .ID("dtMoveAt")
                    .FieldLabel("Ngày chuyển")
                    .Format("dd/MM/yyyy")
                    .ReadOnly(true),
                X.TextFieldFor(m => m.Name)
                    .ID("txtName")
                    .FieldLabel("Người nhận")
                    .ReadOnly(true),
                X.TextFieldFor(m => m.Position)
                    .ID("txtPosition")
                    .FieldLabel("Chức vụ")
                    .ReadOnly(true),
                X.TextFieldFor(m => m.Company)
                    .ID("txtCompany")
                    .FieldLabel("Tổ chức")
                    .ReadOnly(true),
                Html.X().Container().Layout(LayoutType.Column).Items(
                X.TextFieldFor(m => m.EmailPerson)
                    .ID("txtEmailPerson")
                    .FieldLabel("Email")
                    .ReadOnly(true)
                    .ColumnWidth(0.5),
                X.TextFieldFor(m => m.TelPerson)
                    .ID("txtTelPerson")
                    .FieldLabel("Di động")
                    .ReadOnly(true)
                    .ColumnWidth(0.5).MarginSpec("0 0 0 10")
                ),
                Html.X().TextAreaFor(m => m.Address).Height(50).FieldLabel("Địa chỉ").ReadOnly(true),
                 Html.X().TextAreaFor(m => m.NoteMove).Height(100).FieldLabel("Nội dung gửi").ReadOnly(true),
                    Html.X().TextAreaFor(m => m.NoteVerify).Height(100).FieldLabel("Nội dung xác nhận").EmptyText("Nhập thông tin mô tả/ ghi chú cho việc xác nhận chuyển Công văn...")
                    )
                    ).Buttons(
                         Html.X().Button()
                            .ID("btnSaveVerify2")
                                .Text("Xác nhận")
                                        .Icon(Icon.Accept)
                                        .DirectEvents(de =>
                                        {
                                            de.Click.Before = @"if (!App.frVerifyOutDetail.getForm().isValid()) { return false; } ";
                                            de.Click.ExtraParams.Add(new { type = employee, fName = "winVerifyOutDetailEmployee" });
                                            de.Click.Url = Url.Action("UpdateVerifyOutDetail");
                                            de.Click.EventMask.ShowMask = true;
                                            de.Click.FormID = "frVerifyOutDetail";
                                        }),
                            Html.X().ButtonExit()

    )
)
