@using Ext.Net;
@using Ext.Net.MVC;
@using iDAS.Web.ExtExtend;
@model iDAS.Items.ProductModuleItem

@(Html.X().Window()
    .Title("Danh sách Module")
    .Icon(Icon.Tick)
    .Modal(true)
    .Width(750)
    .Height(400)
    .Constrain(true)
    .Resizable(true)
    .Maximizable(true)
    .Layout(LayoutType.Fit)
    .Border(true)
    .Items(
        Html.X().GridPanel()
        .ID("ProductModulePanel")
        .Header(false)
        .ColumnLines(true)
        .Border(false)
        .ForceFit(true)
        .Collapsible(true)
        .Split(true)
        .Icon(Icon.TextListBullets)
        .TopBarItem(
            Html.X().Button().Text("Thêm").ID("btnCreateProductModule").Icon(Icon.Add).Handler("showCreateProductModule();"),
            Html.X().Button().Text("Sửa").ID("btnUpdateProductModule").Icon(Icon.Pencil).Handler("showUpdateProductModule();").Disabled(true),
            Html.X().Button().Text("Xóa").ID("btnDeleteProductModule").Icon(Icon.Delete).Handler("showDeleteProductModule();").Disabled(true),
            Html.X().Button().Text("Xem chi tiết").ID("btnDetailProductModule").Icon(Icon.Zoom).Handler("showDetailProductModule();").Disabled(true)
        )
        .Store(
            Html.X().Store()
            .Proxy(Html.X().AjaxProxy().Url(Url.Action("LoadData")).Reader(Html.X().JsonReader().Root("data")))
            .Parameters(Html.X().StoreParameter().Name("productId").Value("getProductId()").Mode(ParameterMode.Raw))
            .Model(
                Html.X().Model()
                .Fields(
                    Html.X().ModelField().Name("ID").Type(ModelFieldType.Int),
                    Html.X().ModelField().Name("CenterModuleName").Type(ModelFieldType.String),
                    Html.X().ModelField().Name("IsActive").Type(ModelFieldType.Boolean),
                    Html.X().ModelField().Name("CreateAt").Type(ModelFieldType.Date),
                    Html.X().ModelField().Name("UpdateAt").Type(ModelFieldType.Date)
                )
            )
            .Listeners(ls => ls.Refresh.Handler = "deSelectProductModule()")
        )
        .ColumnModel(
            Html.X().RowNumbererColumn().Text("STT").Align(Alignment.Center).Width(35).StyleSpec("font-weight: bold; text-align: center;"),
            Html.X().Column().Text("ID").Hidden(true),
            Html.X().Column().Text("Module").DataIndex(Model, m => m.CenterModuleName).StyleSpec("font-weight: bold;text-align: center").Flex(1).Wrap(true),
            Html.X().CheckColumn().Text("Kích hoạt").DataIndex(Model, m => m.IsActive).StyleSpec("font-weight: bold;text-align: center").Width(120).Align(Alignment.Center),
            Html.X().DateColumn().Text("Ngày tạo").DataIndex(Model, m => m.CreateAt).Width(100).StyleSpec("font-weight: bold; text-align: center").Format("dd/MM/yyyy").Align(Alignment.Center),
            Html.X().DateColumn().Text("Ngày sửa").DataIndex(Model, m => m.UpdateAt).Width(100).StyleSpec("font-weight: bold; text-align: center").Format("dd/MM/yyyy").Align(Alignment.Center)
        )
        .Listeners(ls => ls.SelectionChange.Handler = "selectionChangeProductModule()")
        .BottomBar(Html.X().CustomPagingToolbar())
    )
)
<script type="text/javascript">
    var urlCreateProductModule = '@Url.Action("Create", "ProductModule", new { area = "Web" })';
    var urlUpdateProductModule = '@Url.Action("Update", "ProductModule", new { area = "Web" })';
    var urlDeleteProductModule = '@Url.Action("Delete", "ProductModule", new { area = "Web" })';
    var urlDetailProductModule = '@Url.Action("Detail", "ProductModule", new { area = "Web" })';
    var urlViewProductModule = '@Url.Action("Index", "ProductModule", new { area = "Web" })';

    var getProductId = function () {
        var record = getProductSelection();
        var productId = record == null ? 0 : record.data.ID;
        return productId;
    };
    var getProductModuleSelection = function () {
        return App.ProductModulePanel.getSelectionModel().getLastSelected();
    };
    var reloadProductModule = function () {
        App.ProductModulePanel.getStore().reload();
        deSelectProductModule();
    };
    var deSelectProductModule = function () {
        App.ProductModulePanel.selModel.lastSelected = null;
        selectionChangeProductModule();
    };
    var showCreateProductModule = function () {
        var url = urlCreateProductModule;
        var productId = getProductId();
        var params = { productId: productId };
        onDirectMethod(url, params, 'get');
    };
    var showUpdateProductModule = function () {
        var url = urlUpdateProductModule;
        var record = getProductModuleSelection();
        var ProductModuleId = record == null ? 0 : record.data.ID;
        var params = { ProductModuleId: ProductModuleId };
        onDirectMethod(url, params, 'get');
    };
    var showDeleteProductModule = function () {
        var url = urlDeleteProductModule;
        var deleteSuccess = function (result) {
            if (result) {
                Ext.MessageBox.show({
                    title: 'Xác nhận', msg: 'Bạn có muốn xóa bỏ bản ghi này hay không?',
                    buttons: { yes: 'Đồng ý', no: 'Không' },
                    iconCls: '#Information',
                    fn: function (btn) {
                        if (btn == 'yes') {
                            var record = getProductModuleSelection();
                            var ProductModuleId = record == null ? 0 : record.data.ID;
                            var params = { ProductModuleId: ProductModuleId };
                            onDirectMethod(url, params, 'post', reloadProductModule);
                        }
                    }
                });
            }
        };
        onDirectMethod(url, null, 'get', deleteSuccess);
    };
    var showDetailProductModule = function () {
        var url = urlDetailProductModule;
        var record = getProductModuleSelection();
        var ProductModuleId = record == null ? 0 : record.data.ID;
        var params = { ProductModuleId: ProductModuleId };
        onDirectMethod(url, params, 'get');
    };
    var showViewProductModule = function () {
        var url = urlViewProductModule;
        var record = getProductModuleSelection();
        var ProductModuleId = record == null ? 0 : record.data.ID;
        var params = { ProductModuleId: ProductModuleId };
        onDirectMethod(url, params, 'get');
    };
    var selectionChangeProductModule = function () {
        var record = getProductModuleSelection();
        App.btnUpdateProductModule.setDisabled(record == null);
        App.btnDeleteProductModule.setDisabled(record == null);
        App.btnDetailProductModule.setDisabled(record == null);
    };
</script>