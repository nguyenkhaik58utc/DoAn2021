@using Ext.Net.MVC
@using Ext.Net
@using iDAS.Web.ExtExtend
@model iDAS.Items.ProductScopeItem
@{
    Layout = "~/Views/Shared/_LayoutSystem.cshtml";
}

@(Html.X().Viewport().Layout(LayoutType.Fit)
    .Items(
        Html.X().GridPanel()
        .ID("ProductScopePanel")
        .Border(false)
        .TopBar(
            Html.X().Toolbar()
            .Items(
                Html.X().Button().Text("Thêm").ID("btnCreateProductScope").Icon(Icon.Add).Handler("showCreateProductScope();"),
                Html.X().Button().Text("Sửa").ID("btnUpdateProductScope").Icon(Icon.Pencil).Handler("showUpdateProductScope();").Disabled(true),
                Html.X().Button().Text("Xóa").ID("btnDeleteProductScope").Icon(Icon.Delete).Handler("showDeleteProductScope();").Disabled(true),
                Html.X().Button().Text("Xem chi tiết").ID("btnDetailProductScope").Icon(Icon.Zoom).Handler("showDetailProductScope();").Disabled(true)
            )
        )
        .Store(
            Html.X().Store()
            .Proxy(Html.X().AjaxProxy().Url(Url.Action("LoadData")).Reader(Html.X().JsonReader().Root("data")))
            .RemoteSort(true)
            .RemotePaging(true)
            .PageSize(15)
            .Model(
                Html.X().Model()
                .Fields(
                    Html.X().ModelField().Name("ID").Type(ModelFieldType.Int),
                    Html.X().ModelField().Name("NaceCodes").Type(ModelFieldType.String),
                    Html.X().ModelField().Name("Factory").Type(ModelFieldType.Float),
                    Html.X().ModelField().Name("IsProduction").Type(ModelFieldType.Boolean),
                    Html.X().ModelField().Name("IsService").Type(ModelFieldType.Boolean),
                    Html.X().ModelField().Name("IsActive").Type(ModelFieldType.Boolean),
                    Html.X().ModelField().Name("CreateAt").Type(ModelFieldType.Date),
                    Html.X().ModelField().Name("UpdateAt").Type(ModelFieldType.Date)
                )
            )
            .Listeners(ls => ls.Refresh.Handler = "deSelectProductScope()")
        )
        .Listeners(ls => ls.SelectionChange.Handler = "selectionChangeProductScope();")
        .ColumnModel(
            Html.X().RowNumbererColumn().Text("STT").Align(Alignment.Center).Width(35).StyleSpec("font-weight: bold; text-align: center;"),
            Html.X().Column().Text("ID").DataIndex(Model, m => m.ID).Hidden(true),
            Html.X().Column().Text("Lĩnh vực ngành nghề").DataIndex(Model, m => m.NaceCodes).StyleSpec("font-weight: bold;text-align: center").Flex(1),
            Html.X().NumberColumn().Text("Hệ số").DataIndex(Model, m => m.Factory).StyleSpec("font-weight: bold;text-align: center").Width(120).Align(Alignment.Center),
            Html.X().CheckColumn().Text("Sản xuất").DataIndex(Model, m => m.IsProduction).StyleSpec("font-weight: bold;text-align: center").Width(120).Align(Alignment.Center),
            Html.X().CheckColumn().Text("Dịch vụ").DataIndex(Model, m => m.IsService).StyleSpec("font-weight: bold;text-align: center").Width(120).Align(Alignment.Center),
            Html.X().CheckColumn().Text("Kích hoạt").DataIndex(Model, m => m.IsActive).StyleSpec("font-weight: bold;text-align: center").Width(120).Align(Alignment.Center),
            Html.X().DateColumn().Text("Ngày tạo").DataIndex(Model, m => m.CreateAt).Width(100).StyleSpec("font-weight: bold; text-align: center").Format("dd/MM/yyyy").Align(Alignment.Center),
            Html.X().DateColumn().Text("Ngày sửa").DataIndex(Model, m => m.UpdateAt).Width(100).StyleSpec("font-weight: bold; text-align: center").Format("dd/MM/yyyy").Align(Alignment.Center)
        )
        .BottomBar(Html.X().CustomPagingToolbar())
    )
)

<script type="text/javascript">
    var urlCreateProductScope = '@Url.Action("Create", "ProductScope", new { area = "Web" })';
    var urlUpdateProductScope = '@Url.Action("Update", "ProductScope", new { area = "Web" })';
    var urlDeleteProductScope = '@Url.Action("Delete", "ProductScope", new { area = "Web" })';
    var urlDetailProductScope = '@Url.Action("Detail", "ProductScope", new { area = "Web" })';

    var getProductScopeSelection = function () {
        return App.ProductScopePanel.getSelectionModel().getLastSelected();
    };
    var reloadProductScope = function () {
        App.ProductScopePanel.getStore().reload();
        deSelectProductScope();
    }
    var deSelectProductScope = function () {
        App.ProductScopePanel.selModel.lastSelected = null;
        selectionChangeProductScope();
    }
    var showCreateProductScope = function () {
        var url = urlCreateProductScope;
        onDirectMethod(url, null, 'get');
    };
    var showUpdateProductScope = function () {
        var url = urlUpdateProductScope;
        var record = getProductScopeSelection();
        var productScopeId = record == null ? 0 : record.data.ID;
        var params = { productScopeId: productScopeId };
        onDirectMethod(url, params, 'get');
    };
    var showDeleteProductScope = function () {
        var url = urlDeleteProductScope;
        var deleteSuccess = function (result) {
            if (result) {
                Ext.MessageBox.show({
                    title: 'Xác nhận', msg: 'Bạn có muốn xóa bỏ bản ghi này hay không?',
                    buttons: { yes: 'Đồng ý', no: 'Không' },
                    iconCls: '#Information',
                    fn: function (btn) {
                        if (btn == 'yes') {
                            var record = getProductScopeSelection();
                            var productScopeId = record == null ? 0 : record.data.ID;
                            var params = { productScopeId: productScopeId };
                            onDirectMethod(url, params, 'post', reloadProductScope);
                        }
                    }
                });
            }
        };
        onDirectMethod(url, null, 'get', deleteSuccess);
    };
    var showDetailProductScope = function () {
        var url = urlDetailProductScope;
        var record = getProductScopeSelection();
        var productScopeId = record == null ? 0 : record.data.ID;
        var params = { productScopeId: productScopeId };
        onDirectMethod(url, params, 'get');
    };
    var selectionChangeProductScope = function () {
        var record = getProductScopeSelection();
        App.btnUpdateProductScope.setDisabled(record == null);
        App.btnDeleteProductScope.setDisabled(record == null);
        App.btnDetailProductScope.setDisabled(record == null);
    };
</script>
