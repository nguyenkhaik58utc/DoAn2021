@using Ext.Net;
@using Ext.Net.MVC;
@using iDAS.Web;
@using iDAS.Web.ExtExtend;
@using iDAS.Utilities;
@model iDAS.Items.SitemapItem

@(Html.X().Window()
    .Title("Cập nhật thông tin trang trên sơ đồ website")
    .Icon(Icon.Add)
    .Width(700)
    .Height(400)
    .Modal(true)
    .Maximizable(true)
    .Constrain(true)
    .Layout(LayoutType.Fit)
    .Items(
        Html.X().FormPanel()
        .ID("frmUpdate")
        .Frame(true)
        .Border(false)
        .Padding(1)
        .StyleSpec("border: none;")
        .Layout(LayoutType.Fit)
        .Items(
            Html.X().TabPanel()
            .Items(
                Html.X().Panel().Title("Thông tin").Frame(true).StyleSpec("border: none; border-radius:0")
                .Layout(LayoutType.Form)
                .Items(
                    Html.X().HiddenFor(m => m.ID),
                    Html.X().Container().Layout(LayoutType.Column).Items(
                        Html.X().Container().ColumnWidth(0.76).Layout(LayoutType.Form).Items(
                            Html.X().TextFieldFor(m => m.Text).FieldLabel("Tên trang *").EmptyText("Nhập tên trang ...").BlankText("Bắt buộc nhập!").AllowBlank(false),
                            Html.X().TextFieldFor(m => m.Tooltip).FieldLabel("Chú thích"),
                            Html.X().TextFieldFor(m => m.Url).FieldLabel("Url "),
                            Html.X().TextFieldFor(m => m.Layout).FieldLabel("Layout"),
                            Html.X().TextFieldFor(m => m.Script).FieldLabel("Script")
                        ),
                        Html.X().Container().ColumnWidth(0.04),
                        Html.X().Container().ColumnWidth(0.2).Layout(LayoutType.Form).Items(
                            Html.X().ImageUploadFieldFor(m => m.Image).ImagePreviewHeight(80).ButtonOnly(true)
                        )
                    ),
                    Html.X().Container().Layout(LayoutType.Column).Items(
                        Html.X().CheckboxFor(m => m.IsMenuRight).BoxLabel("Menu phải").HideLabel(false).ColumnWidth(0.3).FieldLabel("Hiển thị"),
                        Html.X().Container().ColumnWidth(0.1),
                        Html.X().CheckboxFor(m => m.IsMenuTop).BoxLabel("Menu trên").HideLabel(true).ColumnWidth(0.3)
                    ),
                    Html.X().Container().Layout(LayoutType.Column).Items(
                        Html.X().NumberFieldFor(m => m.Position).ColumnWidth(0.5).FieldLabel("Thứ tự hiển thị"),
                        Html.X().Container().ColumnWidth(0.1),
                        Html.X().CheckboxFor(m => m.IsActive).BoxLabel("Kích hoạt").HideLabel(true).ColumnWidth(0.3)
                    ),
                    Html.X().CheckboxFor(m => m.IsPageDynamic).BoxLabel("Trang web động").FieldLabel("Loại trang").ColumnWidth(0.4)
                ),
                Html.X().Panel().Title("Nội dung trang Web").Frame(true).StyleSpec("border: none; border-radius:0")
                .Layout(LayoutType.Fit)
                .Items(
                    Html.X().HtmlEditorFieldFor(m => m.Html)
                )
            )
        )
    )
    .Buttons(
        Html.X().ButtonSave()
            .DirectEvents(de =>
            {
                de.Click.Before = @"if (!App.frmUpdate.getForm().isValid()) { return false; };";
                de.Click.Url = Url.Action("Update");
                de.Click.Success = "this.up('window').close(); updateSitemapNode();";
                de.Click.FormID = "frmUpdate";
            }),
        Html.X().ButtonExit()
    )
)
<script>
    var updateSitemapNode = function () {
        var node = getSitemapSelection();
        node.data.text = App.Text.value;
        node.data.Tooltip = App.Tooltip.value;
        node.data.IsPageDynamic = App.IsPageDynamic.value;
        node.data.IsMenuRight = App.IsMenuRight.value;
        node.data.IsMenuTop = App.IsMenuTop.value;
        node.data.IsActive = App.IsActive.value;

        App.SitemapPanel.getView().refresh();
    };
</script>