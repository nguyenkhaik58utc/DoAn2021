@using Ext.Net
@using Ext.Net.MVC
@using iDAS.Base
@using iDAS.Utilities
@model iDAS.Items.ISONaceCodeItem
@(
 Html.X().Window()
    .ID("winDetailISONaceCode")
    .Title("Xem thông tin lĩnh vực ngành nghề")
    .Icon(Icon.Zoom)
         .Width(760)
        .BodyPadding(5)
        .Modal(true)
        .Constrain(true)
        .Resizable(false)
        .Items(
            Html.X().FormPanel()
                .ID("frmEditISONaceCode")
            .Layout(LayoutType.Form)
            .Frame(true)
            .Border(false)
            .StyleSpec("border: none;")
            .FieldDefaults(df => df.LabelWidth = 100)
            .DefaultAnchor("100%")
            .Items(
                          Html.X().Container().Layout(LayoutType.Form).MarginSpec("0 0 0 0").Items(

                       Html.X().TextFieldFor(m => m.Name).ID("txtName")
                       .LabelWidth(130)
                       .ReadOnly(true)
                            .FieldLabel("Lĩnh vực ngành nghề*")
                            .TabIndex(2)

                            .AllowBlank(false).BlankText("Tên lĩnh vực ngành nghề bắt buộc nhập!"),
                                                                Html.X().NumberFieldFor(m => m.Factory).LabelWidth(130).AllowDecimals(true).ReadOnly(true).FieldLabel("Hệ số tính giá"),
                                 Html.X().HtmlEditorFor(m => m.Description).EnableFont(false)
                            .ID("txtDescription")
                        .FieldLabel("Mô tả")
                        .Height(222)
                                    .LabelWidth(130).ReadOnly(true)
                        .TabIndex(5)
                        .Listeners(
                            ls => ls.Render.Handler = "renderEditor(this)"
                        )
                        ),



                      Html.X().Container().Layout(LayoutType.Column).MarginSpec("0 0 0 135")
                                        .Items(
                                                         Html.X().CheckboxFor(m => m.IsProduction).ID("IsProduction").MarginSpec("0 15 0 0")
                                                                    .BoxLabel("Thuộc sản xuất").HideLabel(true).ReadOnly(true)
                                                    .TabIndex(4),
                                                              Html.X().CheckboxFor(m => m.IsService).ID("IsService").MarginSpec("0 15 0 0")
                                                                        .BoxLabel("Thuộc dịch vụ").HideLabel(true).ReadOnly(true)
                                                        .TabIndex(4),
                                                Html.X().CheckboxFor(m => m.IsShow).ID("ckvIsShow")
                                                    .BoxLabel("Hiển thị").HideLabel(true).ReadOnly(true)
                                                .TabIndex(4)

                                       )

                    //
            ))
        .Buttons(
            
            Html.X().Button()
                .ID("btnCancel")
                .Icon(Icon.Decline)
                .Text("Thoát")
                .TabIndex(8)
                .Handler("App.winDetailISONaceCode.close();")
        )
)

<script type="text/javascript">
    function renderEditor(htmlEditor) {
        var toolbar = htmlEditor.getToolbar();
        toolbar.add({ handler: function () { BrowseImage(); }, iconCls: "x-edit-image", text: "", tooltip: '<b> Insert Image</b><br>Upload a new Image</br>' });
    };
    function BrowseImage() {
        Ext.net.DirectMethod.request({
            url: '@(Url.Action("frmBrowseImage", "News", new { Area = "Web" }, null))'
        });
    };
    function insertHandler(htmlEditor) {
        var urlImage = App.urlImage.getValue();
        App.txtDescription.insertAtCursor(urlImage);
    };
</script>