@using Ext.Net
@using Ext.Net.MVC
@using iDAS.Base
@using iDAS.Utilities
@using iDAS.Web.ExtExtend
@model iDAS.Items.IntroItem
@{
    var required = "<span style='color: red;'>(*)</span>";
}
<script>
    function renderEditor(htmlEditor) {
        var toolbar = htmlEditor.getToolbar();
        toolbar.add({ handler: function () { BrowseImage(); }, iconCls: "icon-imageedit", text: "", tooltip: '<b> Insert Image</b><br>Upload a new Image</br>' });
    };
    function BrowseImage() {
        Ext.net.DirectMethod.request({
            url: '@(Url.Action("frmBrowseImage", "News", new { Area = "Web" }, null))'
        });
    };
    function insertHandler(htmlEditor) {
        var urlImage = App.urlImage.getValue();
        App.Contents.insertAtCursor(urlImage);
    };
</script>
@(
 Html.X().Window()
    .ID("winNewCateSV")
    .Title("Thêm mới bài giới thiệu")
    .Icon(Icon.Add)
    .Maximized(true)
    .Height(1)
            .Layout(LayoutType.Fit)
    .BodyPadding(5)
    .Modal(true)
    .Resizable(false)
    .Items(
        Html.X().FormPanel()
        .ID("frmNewCateSV")
        .Layout(LayoutType.Form)
        .Frame(true)
        .Border(false)
        .StyleSpec("border: none;")
        .FieldDefaults(df => df.LabelWidth = 100)
        .DefaultAnchor("100%")
        .Items(
            Html.X().TextFieldFor(m => m.Title).ID("txtName")
                    .FieldLabel("Tiêu đề"+required)
                    .AllowOnlyWhitespace(false).BlankText("Tiêu đề bắt buộc nhập!"), 
                    Html.X().Container().Layout(LayoutType.Column).Items(
            Html.X().CheckboxFor(m => m.IsShow).ColumnWidth(0.5)
                    .FieldLabel("Hiển thị"),
                               Html.X().NumberFieldFor(m => m.Order).ColumnWidth(0.5)
                    .FieldLabel("Thứ tự")
                    ),
            //Html.X().FileUploadFieldFor(m=>m.File).Multiple(false),
            Html.X().HtmlEditorFor(m => m.Content).LabelAlign(LabelAlign.Top).EnableFont(false).EnableLinks(true).ID("Contents").FieldLabel("Nội dung").Height(340)
                     .Listeners(
                                    ls => ls.Render.Handler = "renderEditor(this)"
                                ),
            Html.X().Button().Icon(Icon.ImageEdit).Hidden(true).ID("imgHidden")
            ))
        .Buttons(
            Html.X().Button()
                .ID("btnSaves")
                .Icon(Icon.Disk)
                .Text("Lưu lại")
                .DirectEvents(de =>
                {
                    de.Click.Before = @"if (!App.frmNewCateSV.getForm().isValid()) { return false; } ";
                    de.Click.EventMask.ShowMask = true;
                    de.Click.Action = "InsertCate";
                    de.Click.EventMask.Msg = "Đang xử lý dữ liệu...";
                    de.Click.FormID = "frmNewCateSV";
                    de.Click.Success = "App.frmNewCateSV.reset(); App.winNewCateSV.close();";
                })
                ,
            Html.X().Button()
                .Text("Nhập lại")
                .Icon(Icon.ArrowRefresh)
                .OnClientClick("App.frmNewCateSV.reset();")  ,
            Html.X().Button()
                .ID("btnCancel")
                .Icon(Icon.Cancel)
                .Text("Hủy")
                .Handler("App.frmNewCateSV.reset(); App.winNewCateSV.close();")
        )
)