@using Ext.Net.MVC
@using Ext.Net
@using iDAS.Web.ExtExtend
@model iDAS.Items.CustomerRegisterServiceItem

@(Html.X().Window()
    .Title("Cập nhật thông tin đăng ký dịch vụ")
    .Icon(Icon.Add)
    .Height(350)
    .Constrain(true)
    .Width(700)
    .Center()
    .Resizable(false)
    .Modal(true)
    .Maximizable(true)
    .Layout(LayoutType.Fit)
    .Items(
        Html.X().FormPanel()
        .ID("frmUpdate")
        .Frame(true)
        .Border(false)
        .Padding(1)
        .StyleSpec("border: none;")
        .Layout(LayoutType.Fit)
        .Items(
            Html.X().TabPanel()
            .Items(
                Html.X().Panel().Title("Thông tin").Frame(true).StyleSpec("border: none; border-radius:0")
                .Layout(LayoutType.Form)
                .Items(
                    Html.X().HiddenFor(m => m.ID),
                    Html.X().ComboBoxFor(m => m.CustomerID).FieldLabel("Khách hàng")
                    .ID("cboCustomer")
                    .DisplayField("Name")
                    .ValueField("ID")
                    .Editable(false)
                    .Store(
                        Html.X().Store().AutoLoad(true)
                        .Model(
                            Html.X().Model().IDProperty("ID")
                            .Fields(
                                new ModelField("ID", ModelFieldType.Int) { Mapping = "ID" },
                                new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                            )
                        )
                        .Proxy(Html.X().AjaxProxy().Url(Url.Action("LoadCustomers")).Reader(Html.X().JsonReader().Root("data")))
                    ),
                    Html.X().ComboBoxFor(m => m.ServiceID).FieldLabel("Dịch vụ").ColumnWidth(1)
                    .ID("cboService")
                    .DisplayField("Name")
                    .ValueField("ID")
                    .Editable(false)
                    .Listeners(ls => ls.Change.Handler = "App.cboServiceItem.store.reload()")
                    .Store(
                        Html.X().Store().AutoLoad(true)
                        .Model(
                            Html.X().Model().IDProperty("ID")
                            .Fields(
                                new ModelField("ID", ModelFieldType.Int) { Mapping = "ID" },
                                new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                            )
                        )
                        .Proxy(Html.X().AjaxProxy().Url(Url.Action("LoadServices")).Reader(Html.X().JsonReader().Root("data")))
                    ),
                    Html.X().ComboBoxFor(m => m.WebServiceItemID).FieldLabel("Chương trình").ColumnWidth(1)
                    .ID("cboServiceItem")
                    .DisplayField("Name")
                    .ValueField("ID")
                    .Editable(false)
                    .Store(
                        Html.X().Store().AutoLoad(false)
                        .Model(
                            Html.X().Model().IDProperty("ID")
                            .Fields(
                                new ModelField("ID", ModelFieldType.Int) { Mapping = "ID" },
                                new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                            )
                        )
                        .Proxy(Html.X().AjaxProxy().Url(Url.Action("LoadServiceItems")).Reader(Html.X().JsonReader().Root("data")))
                        .Parameters(Html.X().StoreParameter().Value("App.cboService.value").Name("serviceId").Mode(ParameterMode.Raw))
                        .Listeners(ls => ls.Load.Handler = "App.cboServiceItem.select(App.cboServiceItem.store.getAt(0))")
                    ),
                    Html.X().Container().Layout(LayoutType.Column).Items(
                        Html.X().DateFieldFor(m => m.RegisterAt).FieldLabel("Ngày đăng ký").ColumnWidth(0.45),
                        Html.X().Container().ColumnWidth(0.1),
                        Html.X().DateFieldFor(m => m.CompleteAt).FieldLabel("Ngày hoàn thành").ColumnWidth(0.45)
                    ),
                    Html.X().Container().Layout(LayoutType.Column).Items(
                        Html.X().DateFieldFor(m => m.ContactAt).FieldLabel("Ngày xác nhận").ColumnWidth(0.45)
                    ),
                    Html.X().Container().Layout(LayoutType.Column).Items(
                        Html.X().CheckboxFor(m => m.IsNew).FieldLabel("Trạng thái").BoxLabel("Mới").ColumnWidth(0.3),
                        Html.X().CheckboxFor(m => m.IsContact).HideLabel(true).BoxLabel("Đã liên hệ").ColumnWidth(0.2),
                        Html.X().CheckboxFor(m => m.IsAccept).HideLabel(true).BoxLabel("Đã xác nhận").ColumnWidth(0.2),
                        Html.X().CheckboxFor(m => m.IsActive).HideLabel(true).BoxLabel("Kích hoạt").ColumnWidth(0.2)
                    ),
                    Html.X().TextAreaFor(m => m.Note).Height(55).FieldLabel("Ghi chú")
                )
            )
        )
    )
    .Buttons(
        Html.X().Button()
        .Text("Lưu lại")
        .Icon(Icon.Disk)
        .DirectEvents(de =>
        {
            de.Click.FormID = "frmUpdate";
            de.Click.Before = @"if (!App.frmUpdate.getForm().isValid()) { return false; } ";
            de.Click.Url = Url.Action("Update");
            de.Click.EventMask.ShowMask = true;
            de.Click.Success = "if (result.result) {this.up('window').close(); reloadCustomerRegisterService();}";
        }),

        Html.X().Button()
        .Text("Thoát")
        .Icon(Icon.Cancel)
        .OnClientClick("this.up('window').close();")
    )
)

