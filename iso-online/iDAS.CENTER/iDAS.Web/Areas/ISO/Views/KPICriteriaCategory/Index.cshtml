@using Ext.Net.MVC
@using Ext.Net
@using iDAS.Utilities
@using iDAS.Web.ExtExtend
@model System.Collections.IEnumerable
@{
    Layout = "~/Views/Shared/_LayoutSystem.cshtml";
}
@(Html.X().Viewport()
        .Layout(LayoutType.Border)
        .Padding(1)
        .Items(
        Html.X().Hidden().ID("hdfLsCateId"),
        Html.X().Toolbar().Region(Region.North).MarginSpec("0 0 2 0")
                .Items(
                        Html.X().ComboBox().FieldLabel("<b >Lựa chọn lĩnh vực </b>" + Html.Required())
                                .LabelWidth(165).ID("cbxNaceCode")
                                .InputWidth(300)
                                .DisplayField("Name")
                                .ValueField("ID")
                                .Editable(false)
                                .Store(
                                            Html.X().Store().AutoLoad(true)
                                                    .Model(
                                                        Html.X().Model().IDProperty("ID")
                                                        .Fields(
                                                            new ModelField("ID", ModelFieldType.Int) { Mapping = "ID" },
                                                            new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                                                        )
                                                    )
                                                    .Proxy(Html.X().AjaxProxy().Url(Url.Action("LoadISONaceCodeActive", "ISONaceCode")).Reader(Html.X().JsonReader().Root("data")))
                                        )
                                .Listeners(ls => ls.Change.Handler = "App.stCategoryCriteria.reload();hideShowAdd();")
                    ),
        Html.X().GridPanel()
                .Header(false)
                .Title("Bộ tiêu chí đánh giá KPIs")
                .Region(Region.West)
                .ID("trCategoryCriteria")
                .Width(500)
                .TitleAlign(TitleAlign.Center)
                .Collapsible(true)
                .Split(true)
                .Border(true)
                .RowLines(true)
                .ColumnLines(true)
                .ForceFit(true)
                .TopBar(
                    Html.X().Toolbar()
                            .Items(
                                Html.X().Button().ID("btnInsertNews").Icon(Icon.Add).Disabled(true).Text("Thêm").ToolTip("Thêm mới bộ tiêu chí đánh giá")
                                        .Handler("AddCategoryCriteria();"),
                                Html.X().ToolbarSeparator(),
                                Html.X().Button().ID("btnEdit").Icon(Icon.Pencil).ToolTip("Sửa bộ tiêu chí đánh giá").Text("Sửa").Disabled(true)
                                        .Handler("updateCategoryCriteria();"),
                                Html.X().ToolbarSeparator(),
                                Html.X().Button().ID("btnDelete").Icon(Icon.Delete).ToolTip("Xóa bộ tiêu chí đánh giá").Text("Xóa")
                                        .Handler("deleteRecord();")
                                        .Disabled(true),
                                Html.X().ToolbarSeparator(),
                                Html.X().Button().ID("btnDetail").Disabled(true).ToolTip("Xem chi tiết").Icon(Icon.Zoom).Text("Xem")
                                            .Handler("showFormDetail();"),
                                Html.X().ToolbarFill()
                            )
                         )
                    .Store(Html.X().Store().ID("stCategoryCriteria")
                        .AutoLoad(false)
                        .RemotePaging(true)
                        .PageSize(10)
                        .Proxy(Html.X().AjaxProxy()
                                        .Url(Url.Action("GetData", "KPICriteriaCategory"))
                                       .Reader(Html.X().JsonReader()
                                       .Root("data")
                                       )
                        )
                        .Parameters(ps =>
                                        {
                                            ps.Add(new StoreParameter("naceCodeID", "getNaceCodeValue()", ParameterMode.Raw));
                                        })
                        .Model(
                            Html.X().Model().IDProperty("ID")
                            .Fields(
                                Html.X().ModelField().Name("ID"),
                                Html.X().ModelField().Name("Name"),
                                Html.X().ModelField().Name("IsUse").Type(ModelFieldType.Boolean)
                             )
                         )
            )
            .ColumnModel(
                Html.X().RowNumbererColumn().Text("STT").Width(30).Align(Alignment.Center),
                Html.X().Column()
                        .Text("Bộ tiêu chí")
                        .Align(Alignment.Left)
                        .DataIndex("Name")
                        .Flex(1),
                Html.X().CheckColumn()
                        .Text("Sử dụng")
                        .DataIndex("IsUse")
                        .Width(80)
                        .Align(Alignment.Center)
                    )
                .Listeners(ls =>
                {
                    ls.SelectionChange.Handler = "categoryCriteriaSelect()";
                    ls.CellDblClick.Handler = "showFormDetail();";
                })
                .Plugins(
                    Html.X().CellEditing()
                        .ClicksToEdit(1)
                        .Listeners(ls =>
                        {
                        })
                    )
            .BottomBar(Html.X().CustomPagingToolbar("10", "20", "30", "50", "100").DisplayInfo(false))
            .Listeners(ls => { ls.SelectionChange.Handler = "categoryCriteriaSelect();"; }),
            Html.X().GridPanel()
            .Region(Region.Center)
            .ID("grCriteria")
            .Border(true)
            .RowLines(true)
            .ColumnLines(true)
            .ForceFit(true)
            .TopBar(
                        Html.X().Toolbar()
                                .Items(
                                        Html.X().ButtonCreate()
                                                .Handler("showFormAddCriteria(true);"),
                                        Html.X().ToolbarSeparator(),
                                        Html.X().ButtonUpdate()
                                                .ID("btnEditCriteria")
                                                .Handler("updateFormCriteria();"),
                                        Html.X().ToolbarSeparator(),
                                        Html.X().ButtonDelete()
                                                .ID("btnDeleteCriteria")
                                                .Handler("deleteCriteria();"),
                                        Html.X().ToolbarSeparator(),
                                        Html.X().ButtonView()
                                                .ID("btnDetailCriteria")
                                                .Handler("showDetailCriteria();"),
                                        Html.X().ToolbarFill(),
                                        Html.X().ButtonTutorial()
                                      )
                                  )
                .Store(Html.X().Store().ID("stCriteria")
                        .AutoLoad(false)
                        .RemotePaging(true)
                        .PageSize(10)
                        .Proxy(Html.X().AjaxProxy()
                                                .Url(Url.Action("GetCriteria", "KPICriteriaCategory"))
                                       .Reader(Html.X().JsonReader()
                                       .Root("data")
                                       )
                        )
                        .Parameters(ps =>
                            {
                                ps.Add(new StoreParameter("cateId", "App.hdfLsCateId.value", ParameterMode.Raw));
                            })
                        .Model(
                            Html.X().Model().IDProperty("ID")
                            .Fields(
                                Html.X().ModelField().Name("ID"),
                                Html.X().ModelField().Name("Name"),
                                Html.X().ModelField().Name("Factory")
                             )
                         )
            )
            .ColumnModel(
                Html.X().RowNumbererColumn().Text("STT").Width(30).Align(Alignment.Center),
                Html.X().Column()
                        .Text("Tên tiêu chí đánh giá")
                        .Align(Alignment.Left)
                        .DataIndex("Name")
                        .Flex(1),
                Html.X().Column()
                        .Text("Hệ số")
                        .Align(Alignment.Right)
                        .DataIndex("Factory")
                        .Width(80)
                    )
                .Listeners(ls =>
                    {
                        ls.SelectionChange.Handler = "checkStatusCriteria()";
                        ls.CellDblClick.Handler = "showDetailCriteria();";
                    })
                .Plugins(
                    Html.X().CellEditing()
                        .ClicksToEdit(1)
                        .Listeners(ls =>
                        {
                        })
                    )
                .BottomBar(Html.X().CustomPagingToolbar("10", "20", "30", "50", "100"))
         )
)
<script type="text/javascript">

    var categoryCriteriaSelect = function () {
        var records = App.trCategoryCriteria.selModel.getSelection();
        hideShowAdd();
        if (records.length > 0) {
            App.hdfLsCateId.setValue(records[0].get('ID'));
            App.btnEdit.setDisabled(false);
            App.btnDelete.setDisabled(false);
            App.btnDetail.setDisabled(false);
        }
        else {
            App.btnEdit.setDisabled(true);
            App.btnDelete.setDisabled(true);
            App.btnDetail.setDisabled(true);
        };
        App.grCriteria.getStore().reload();
    };
    var hideShowAdd = function () {
        if (getNaceCodeValue() > 0) {
            App.btnInsertNews.setDisabled(false);
        }
        else {
            App.btnInsertNews.setDisabled(true);
        }
    };
    var AddCategoryCriteria = function () {
        var url = '@(Url.Action("FormAdd", "KPICriteriaCategory", null))';
        var records = App.trCategoryCriteria.selModel.getSelection();
        if (records.length == 1) {
            var parentId = records[0].get('ID');
            var params = {
                parentId: parentId,
                nacodeId: getNaceCodeValue()
            };
            onDirectMethod(url, params);
        }
        else {
            var params = {
                parentId: 0,
                nacodeId: getNaceCodeValue()
            };
            onDirectMethod(url, params);
        };
    };
    function updateCategoryCriteria() {
        var records = App.trCategoryCriteria.selModel.getSelection();
        if (records.length > 0) {
            var url = '@(Url.Action("ShowUpdate", "KPICriteriaCategory", null))';
            var params = {
                id: records[0].get('ID')
            };
            onDirectMethod(url, params);
        }
        else {
            MessageBox();
        };
    };
    function showAnswers() {
        var records = App.grCriteria.selModel.getSelection();
        if (records.length > 0) {
            var url = '@(Url.Action("ShowAnswer", "KPICriteriaCategory", null))';
            var params = {
                CriteriaId: records[0].get('ID')
            };
            onDirectMethod(url, params);
        }
        else {
            MessageBox();
        };
    };
    var deleteRecord = function () {
        var records = App.trCategoryCriteria.selModel.getSelection();
        if (records.length > 0) {
            Ext.MessageBox.confirm('Thông báo', 'Bạn có muốn xóa bản ghi này ?', function (btn) {
                if (btn == 'yes') {
                    var mask = new Ext.LoadMask(Ext.getBody(), { msg: "Đang thực hiện ...." });
                    mask.show();
                    Ext.net.DirectMethod.request({
                        url: '@(Url.Action("Delete", "KPICriteriaCategory", null))',
                        params: {
                            id: records[0].get('ID'),
                        },
                        success: function (result) {
                            mask.hide();
                            if (handle) handle(result);
                        },
                    });
                };
            });
        }
        else {
            MessageBox();
        };
    };
    var showFormDetail = function () {
        var records = App.trCategoryCriteria.selModel.getSelection();
        if (records.length > 0) {
            var url = '@(Url.Action("ShowDetail", "KPICriteriaCategory", null))';
            var params = {
                id: records[0].get('ID')
            };
            onDirectMethod(url, params);
        }
        else {
            MessageBox();
        };
    };
    var checkStatusCriteria = function () {
        var records = App.grCriteria.selModel.getSelection();
        if (records.length == 1) {
            App.btnEditCriteria.setDisabled(false);
            App.btnDeleteCriteria.setDisabled(false);
            App.btnDetailCriteria.setDisabled(false);
        }
        else {
            App.btnEditCriteria.setDisabled(true);
            App.btnDeleteCriteria.setDisabled(true);
            App.btnDetailCriteria.setDisabled(true);
        };
    };
    var showFormAddCriteria = function () {
        var records = App.trCategoryCriteria.selModel.getSelection();
        if (records.length > 0) {
            var url = '@(Url.Action("FormAddCriteria", "KPICriteriaCategory", null))';
            var params = {
                cateId: records[0].get('ID'),
                cateName: records[0].get('Name')
            };
            onDirectMethod(url, params);
        }
        else {
            MessageBox();
        };
    };
    function updateFormCriteria() {
        var records = App.grCriteria.selModel.getSelection();
        if (records.length > 0) {
            var url = '@(Url.Action("ShowUpdateCriteria", "KPICriteriaCategory", null))';
            var params = {
                id: records[0].get('ID')
            };
            onDirectMethod(url, params);
        }
        else {
            MessageBox();
        };
    };
    var deleteUrl = '@(Url.Action("DeleteCriteria", "KPICriteriaCategory", null))';
    var deleteCriteria = function () {
        var records = App.grCriteria.selModel.getSelection();
        if (records.length > 0) {
            onDelete(records[0].get('ID'));
        }
        else {
            MessageBox();
        };
    };
    var showDetailCriteria = function () {
        var records = App.grCriteria.selModel.getSelection();
        if (records.length > 0) {
            var url = '@(Url.Action("ShowDetailCriteria", "KPICriteriaCategory", null))';
            var params = {
                id: records[0].get('ID')
            };
            onDirectMethod(url, params);
        }
        else {
            MessageBox();
        };
    };
    var getNaceCodeValue = function () {
        if (App.cbxNaceCode) {
            if (App.cbxNaceCode.value) {
                return App.cbxNaceCode.value;
            }
            return 0;
        }
        return 0;
    };
</script>
